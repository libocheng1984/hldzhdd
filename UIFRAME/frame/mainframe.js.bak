//Powered By Madman 2015-12-9 14:11:16
 var FrameVersion="201512.9.1411";
(function(a){if(typeof define==='function'&&define.amd){define(['jquery'],a)}else{a(jQuery)}}(function($){var j=$.scrollTo=function(a,b,c){return $(window).scrollTo(a,b,c)};j.defaults={axis:'xy',duration:parseFloat($.fn.jquery)>=1.3?0:1,limit:true};j.window=function(a){return $(window)._scrollable()};$.fn._scrollable=function(){return this.map(function(){var a=this,isWin=!a.nodeName||$.inArray(a.nodeName.toLowerCase(),['iframe','#document','html','body'])!=-1;if(!isWin)return a;var b=(a.contentWindow||a).document||a.ownerDocument||a;return/webkit/i.test(navigator.userAgent)||b.compatMode=='BackCompat'?b.body:b.documentElement})};$.fn.scrollTo=function(f,g,h){if(typeof g=='object'){h=g;g=0}if(typeof h=='function')h={onAfter:h};if(f=='max')f=9e9;h=$.extend({},j.defaults,h);g=g||h.duration;h.queue=h.queue&&h.axis.length>1;if(h.queue)g/=2;h.offset=both(h.offset);h.over=both(h.over);return this._scrollable().each(function(){if(f==null)return;var d=this,$elem=$(d),targ=f,toff,attr={},win=$elem.is('html,body');switch(typeof targ){case'number':case'string':if(/^([+-]=?)?\d+(\.\d+)?(px|%)?$/.test(targ)){targ=both(targ);break}targ=$(targ,this);if(!targ.length)return;case'object':if(targ.is||targ.style)toff=(targ=$(targ)).offset()}var e=$.isFunction(h.offset)&&h.offset(d,targ)||h.offset;$.each(h.axis.split(''),function(i,a){var b=a=='x'?'Left':'Top',pos=b.toLowerCase(),key='scroll'+b,old=d[key],max=j.max(d,a);if(toff){attr[key]=toff[pos]+(win?0:old-$elem.offset()[pos]);if(h.margin){attr[key]-=parseInt(targ.css('margin'+b))||0;attr[key]-=parseInt(targ.css('border'+b+'Width'))||0}attr[key]+=e[pos]||0;if(h.over[pos])attr[key]+=targ[a=='x'?'width':'height']()*h.over[pos]}else{var c=targ[pos];attr[key]=c.slice&&c.slice(-1)=='%'?parseFloat(c)/100*max:c}if(h.limit&&/^\d+$/.test(attr[key]))attr[key]=attr[key]<=0?0:Math.min(attr[key],max);if(!i&&h.queue){if(old!=attr[key])animate(h.onAfterFirst);delete attr[key]}});animate(h.onAfter);function animate(a){$elem.animate(attr,g,h.easing,a&&function(){a.call(this,targ,h)})}}).end()};j.max=function(a,b){var c=b=='x'?'Width':'Height',scroll='scroll'+c;if(!$(a).is('html,body'))return a[scroll]-$(a)[c.toLowerCase()]();var d='client'+c,html=a.ownerDocument.documentElement,body=a.ownerDocument.body;return Math.max(html[scroll],body[scroll])-Math.min(html[d],body[d])};function both(a){return $.isFunction(a)||typeof a=='object'?a:{top:a,left:a}};return j}));
(function($){
$.fn.fm_pager = function(maxentries, opts){
opts = jQuery.extend({
items_total_show:"",
items_per_page:10,
num_display_entries:5,
current_page:0,
num_edge_entries:0,
prev_text:"Prev",
next_text:"Next",
ellipse_text:"...",
countText:true,
prev_show_always:true,
next_show_always:true,
init_callback:function(){return false;},
sel_callback:function(){return false;}
},opts||{});
return this.each(function() {
function numPages() {
return Math.ceil(maxentries/opts.items_per_page);
}
function getInterval()  {
var ne_half = Math.ceil(opts.num_display_entries/2);
var np = numPages();
var upper_limit = np-opts.num_display_entries;
var start = current_page>ne_half?Math.max(Math.min(current_page-ne_half, upper_limit), 0):0;
var end = current_page>ne_half?Math.min(current_page+ne_half, np):Math.min(opts.num_display_entries, np);
return [start,end];
}
function pageSelected(page_id, evt){
current_page = page_id;
drawLinks();
var continuePropagation = opts.selelct_callback(page_id+1, panel);
if (!continuePropagation) {
if (evt.stopPropagation) {
evt.stopPropagation();
}
else {
evt.cancelBubble = true;
}}
return continuePropagation;
}
function drawLinks() {
panel.empty();
var interval = getInterval();
var np = numPages();
var getClickHandler = function(page_id) {
return function(evt){ return pageSelected(page_id,evt); }
}
var appendItem = function(page_id, appendopts){
if(page_id == -100){		
var lnk = jQuery("<span>"+(appendopts.text)+"</span>");
if(appendopts.classes){lnk.addClass(appendopts.classes);}
panel.append(lnk);
return;
}
page_id = page_id<0?0:(page_id<np?page_id:np-1); // Normalize page id to sane value
appendopts = jQuery.extend({text:page_id-0+1, classes:""}, appendopts||{});
if(page_id == current_page){
var lnk = jQuery("<a class='current'>"+(appendopts.text)+"</a>");
}else{
var lnk = jQuery("<a>"+(appendopts.text)+"</a>")
lnk.bind("click", getClickHandler(page_id))
}
if(appendopts.classes){lnk.addClass(appendopts.classes);}
panel.append(lnk);
}
if(opts.prev_text && (current_page > 0 || opts.prev_show_always)){
appendItem(current_page-1,{text:opts.prev_text, classes:"prev"});
}
if (interval[0] > 0 && opts.num_edge_entries > 0){
var end = Math.min(opts.num_edge_entries, interval[0]);
for(var i=0; i<end; i++) {
appendItem(i);
}
if(opts.num_edge_entries < interval[0] && opts.ellipse_text){
jQuery("<span>"+opts.ellipse_text+"</span>").appendTo(panel);
}}
for(var i=interval[0]; i<interval[1]; i++) {
appendItem(i);
}
if (interval[1] < np && opts.num_edge_entries > 0){
if(np-opts.num_edge_entries > interval[1]&& opts.ellipse_text){
jQuery("<span>"+opts.ellipse_text+"</span>").appendTo(panel);
}
var begin = Math.max(np-opts.num_edge_entries, interval[1]);
for(var i=begin; i<np; i++) {
appendItem(i);
}}
if(opts.next_text && (current_page < np-1 || opts.next_show_always)){
appendItem(current_page-0+1,{text:opts.next_text, classes:"next"});
}
if(opts.countText){
if(opts.num_edge_entries >0 && maxentries-0>0){
appendItem(-100,{text:opts.items_total_show, classes:"count"});
}}}
var current_page = opts.current_page-1;
if(current_page<0)current_page=0;
maxentries = (!maxentries || maxentries < 0)?1:maxentries;
opts.items_per_page = (!opts.items_per_page || opts.items_per_page < 0)?1:opts.items_per_page;
var panel = jQuery(this);
this.selectPage = function(page_id){ pageSelected(page_id);}
this.prevPage = function(){
if (current_page > 0) {
pageSelected(current_page - 1);
return true;
}
else {
return false;
}}
this.nextPage = function(){
if(current_page < numPages()-1) {
pageSelected(current_page-0+1);
return true;
}
else {
return false;
}}
drawLinks();
opts.init_callback(current_page, this);
});
}
})(jQuery);
if (typeof JSON !== 'object') {JSON = {};}(function () {'use strict';function f(n) {return n < 10 ? '0' + n : n;}
    if (typeof Date.prototype.toJSON !== 'function') {Date.prototype.toJSON = function (key) {return isFinite(this.valueOf())? this.getUTCFullYear()+'-'+f(this.getUTCMonth() + 1) + '-' +f(this.getUTCDate())+'T'+f(this.getUTCHours())+':'+f(this.getUTCMinutes())+':'+f(this.getUTCSeconds())+'Z':null;};String.prototype.toJSON=Number.prototype.toJSON=Boolean.prototype.toJSON = function (key){return this.valueOf();};}
    var cx = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,escapable = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,gap,indent, meta = {'\b': '\\b','\t': '\\t','\n': '\\n','\f': '\\f','\r': '\\r','"' : '\\"','\\': '\\\\'},rep;
    function quote(string) {escapable.lastIndex = 0; return escapable.test(string) ? '"' + string.replace(escapable, function(a){var c = meta[a];return typeof c === 'string'? c: '\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);})+'"':'"'+string+'"';}
    function str(key, holder) { var i,k,v,length,mind = gap,partial,value = holder[key];if (value && typeof value==='object' && typeof value.toJSON==='function') {value = value.toJSON(key);}if (typeof rep === 'function') {value = rep.call(holder, key, value);}switch (typeof value) { case 'string':return quote(value);case 'number': return isFinite(value) ? String(value) : 'null';case 'boolean':case 'null':return String(value);case 'object': if (!value){return 'null';}gap += indent;partial = [];if (Object.prototype.toString.apply(value) === '[object Array]') {length = value.length;for (i = 0; i < length; i += 1) {partial[i] = str(i, value) || 'null';}v = partial.length === 0 ? '[]' : gap ? '[\n' + gap + partial.join(',\n' + gap) + '\n' + mind + ']' : '[' + partial.join(',') + ']';gap = mind;return v;}if (rep && typeof rep === 'object') {length=rep.length;for (i=0; i<length;i+=1){if (typeof rep[i] === 'string') {k = rep[i];v = str(k, value);if(v){partial.push(quote(k) + (gap ? ': ' : ':') + v);}}}}else{for(k in value){if (Object.prototype.hasOwnProperty.call(value, k)){v = str(k, value);if(v){partial.push(quote(k) + (gap ? ': ' : ':') + v);}}}}v = partial.length === 0 ? '{}' : gap ? '{\n' + gap + partial.join(',\n' + gap) + '\n' + mind + '}' : '{' + partial.join(',') + '}';gap = mind;return v;}}
   if (typeof JSON.stringify !== 'function') {JSON.stringify = function (value, replacer, space) { var i;gap = '';indent = '';if (typeof space === 'number') {for (i = 0; i < space; i += 1) {indent += ' ';}}else if (typeof space === 'string') {indent = space;}rep = replacer;if (replacer && typeof replacer !== 'function' && (typeof replacer !== 'object' || typeof replacer.length !== 'number')) {throw new Error('JSON.stringify');} return str('', {'': value});};}
   if (typeof JSON.parse !== 'function') {JSON.parse = function (text, reviver) { var j;function walk(holder, key) {var k, v, value = holder[key];if (value && typeof value === 'object') {for (k in value) {if (Object.prototype.hasOwnProperty.call(value, k)) {v = walk(value, k);if (v !== undefined) {value[k] = v;}else{delete value[k];}}}}return reviver.call(holder, key, value);}text = String(text);cx.lastIndex = 0; if (cx.test(text)) {text = text.replace(cx, function (a) {return '\\u' +('0000' + a.charCodeAt(0).toString(16)).slice(-4);});}if (/^[\],:{}\s]*$/ .test(text.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g, '@').replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, ']').replace(/(?:^|:|,)(?:\s*\[)+/g, ''))) {j = eval('(' + text + ')');return typeof reviver === 'function' ? walk({'': j}, ''): j; } throw new SyntaxError('JSON.parse');};}
}());
jQuery.easing['jswing'] = jQuery.easing['swing'];
jQuery.extend( jQuery.easing,
{
def: 'easeOutQuad',
swing: function (x, t, b, c, d) {
return jQuery.easing[jQuery.easing.def](x, t, b, c, d);
},
easeInQuad: function (x, t, b, c, d) {
return c*(t/=d)*t + b;
},
easeOutQuad: function (x, t, b, c, d) {
return -c *(t/=d)*(t-2) + b;
},
easeInOutQuad: function (x, t, b, c, d) {
if ((t/=d/2) < 1) return c/2*t*t + b;
return -c/2 * ((--t)*(t-2) - 1) + b;
},
easeInCubic: function (x, t, b, c, d) {
return c*(t/=d)*t*t + b;
},
easeOutCubic: function (x, t, b, c, d) {
return c*((t=t/d-1)*t*t + 1) + b;
},
easeInOutCubic: function (x, t, b, c, d) {
if ((t/=d/2) < 1) return c/2*t*t*t + b;
return c/2*((t-=2)*t*t + 2) + b;
},
easeInQuart: function (x, t, b, c, d) {
return c*(t/=d)*t*t*t + b;
},
easeOutQuart: function (x, t, b, c, d) {
return -c * ((t=t/d-1)*t*t*t - 1) + b;
},
easeInOutQuart: function (x, t, b, c, d) {
if ((t/=d/2) < 1) return c/2*t*t*t*t + b;
return -c/2 * ((t-=2)*t*t*t - 2) + b;
},
easeInQuint: function (x, t, b, c, d) {
return c*(t/=d)*t*t*t*t + b;
},
easeOutQuint: function (x, t, b, c, d) {
return c*((t=t/d-1)*t*t*t*t + 1) + b;
},
easeInOutQuint: function (x, t, b, c, d) {
if ((t/=d/2) < 1) return c/2*t*t*t*t*t + b;
return c/2*((t-=2)*t*t*t*t + 2) + b;
},
easeInSine: function (x, t, b, c, d) {
return -c * Math.cos(t/d * (Math.PI/2)) + c + b;
},
easeOutSine: function (x, t, b, c, d) {
return c * Math.sin(t/d * (Math.PI/2)) + b;
},
easeInOutSine: function (x, t, b, c, d) {
return -c/2 * (Math.cos(Math.PI*t/d) - 1) + b;
},
easeInExpo: function (x, t, b, c, d) {
return (t==0) ? b : c * Math.pow(2, 10 * (t/d - 1)) + b;
},
easeOutExpo: function (x, t, b, c, d) {
return (t==d) ? b+c : c * (-Math.pow(2, -10 * t/d) + 1) + b;
},
easeInOutExpo: function (x, t, b, c, d) {
if (t==0) return b;
if (t==d) return b+c;
if ((t/=d/2) < 1) return c/2 * Math.pow(2, 10 * (t - 1)) + b;
return c/2 * (-Math.pow(2, -10 * --t) + 2) + b;
},
easeInCirc: function (x, t, b, c, d) {
return -c * (Math.sqrt(1 - (t/=d)*t) - 1) + b;
},
easeOutCirc: function (x, t, b, c, d) {
return c * Math.sqrt(1 - (t=t/d-1)*t) + b;
},
easeInOutCirc: function (x, t, b, c, d) {
if ((t/=d/2) < 1) return -c/2 * (Math.sqrt(1 - t*t) - 1) + b;
return c/2 * (Math.sqrt(1 - (t-=2)*t) + 1) + b;
},
easeInElastic: function (x, t, b, c, d) {
var s=1.70158;var p=0;var a=c;
if (t==0) return b;  if ((t/=d)==1) return b+c;  if (!p) p=d*.3;
if (a < Math.abs(c)) { a=c; var s=p/4; }
else var s = p/(2*Math.PI) * Math.asin (c/a);
return -(a*Math.pow(2,10*(t-=1)) * Math.sin( (t*d-s)*(2*Math.PI)/p )) + b;
},
easeOutElastic: function (x, t, b, c, d) {
var s=1.70158;var p=0;var a=c;
if (t==0) return b;  if ((t/=d)==1) return b+c;  if (!p) p=d*.3;
if (a < Math.abs(c)) { a=c; var s=p/4; }
else var s = p/(2*Math.PI) * Math.asin (c/a);
return a*Math.pow(2,-10*t) * Math.sin( (t*d-s)*(2*Math.PI)/p ) + c + b;
},
easeInOutElastic: function (x, t, b, c, d) {
var s=1.70158;var p=0;var a=c;
if (t==0) return b;  if ((t/=d/2)==2) return b+c;  if (!p) p=d*(.3*1.5);
if (a < Math.abs(c)) { a=c; var s=p/4; }
else var s = p/(2*Math.PI) * Math.asin (c/a);
if (t < 1) return -.5*(a*Math.pow(2,10*(t-=1)) * Math.sin( (t*d-s)*(2*Math.PI)/p )) + b;
return a*Math.pow(2,-10*(t-=1)) * Math.sin( (t*d-s)*(2*Math.PI)/p )*.5 + c + b;
},
easeInBack: function (x, t, b, c, d, s) {
if (s == undefined) s = 1.70158;
return c*(t/=d)*t*((s+1)*t - s) + b;
},
easeOutBack: function (x, t, b, c, d, s) {
if (s == undefined) s = 1.70158;
return c*((t=t/d-1)*t*((s+1)*t + s) + 1) + b;
},
easeInOutBack: function (x, t, b, c, d, s) {
if (s == undefined) s = 1.70158;
if ((t/=d/2) < 1) return c/2*(t*t*(((s*=(1.525))+1)*t - s)) + b;
return c/2*((t-=2)*t*(((s*=(1.525))+1)*t + s) + 2) + b;
},
easeInBounce: function (x, t, b, c, d) {
return c - jQuery.easing.easeOutBounce (x, d-t, 0, c, d) + b;
},
easeOutBounce: function (x, t, b, c, d) {
if ((t/=d) < (1/2.75)) {
return c*(7.5625*t*t) + b;
} else if (t < (2/2.75)) {
return c*(7.5625*(t-=(1.5/2.75))*t + .75) + b;
} else if (t < (2.5/2.75)) {
return c*(7.5625*(t-=(2.25/2.75))*t + .9375) + b;
} else {
return c*(7.5625*(t-=(2.625/2.75))*t + .984375) + b;
}
},
easeInOutBounce: function (x, t, b, c, d) {
if (t < d/2) return jQuery.easing.easeInBounce (x, t*2, 0, c, d) * .5 + b;
return jQuery.easing.easeOutBounce (x, t*2-d, 0, c, d) * .5 + c*.5 + b;
}
});(function(a){function d(b){var c=b||window.event,d=[].slice.call(arguments,1),e=0,f=!0,g=0,h=0;return b=a.event.fix(c),b.type="mousewheel",c.wheelDelta&&(e=c.wheelDelta/120),c.detail&&(e=-c.detail/3),h=e,c.axis!==undefined&&c.axis===c.HORIZONTAL_AXIS&&(h=0,g=-1*e),c.wheelDeltaY!==undefined&&(h=c.wheelDeltaY/120),c.wheelDeltaX!==undefined&&(g=-1*c.wheelDeltaX/120),d.unshift(b,e,g,h),(a.event.dispatch||a.event.handle).apply(this,d)}var b=["DOMMouseScroll","mousewheel"];if(a.event.fixHooks)for(var c=b.length;c;)a.event.fixHooks[b[--c]]=a.event.mouseHooks;a.event.special.mousewheel={setup:function(){if(this.addEventListener)for(var a=b.length;a;)this.addEventListener(b[--a],d,!1);else this.onmousewheel=d},teardown:function(){if(this.removeEventListener)for(var a=b.length;a;)this.removeEventListener(b[--a],d,!1);else this.onmousewheel=null}},a.fn.extend({mousewheel:function(a){return a?this.bind("mousewheel",a):this.trigger("mousewheel")},unmousewheel:function(a){return this.unbind("mousewheel",a)}})})(jQuery)
jQuery.extend({
createUploadIframe: function(id, uri) {
var frameId = "jUploadFrame" + id;
var iframeHtml = '<iframe id="' + frameId + '" name="' + frameId + '" style="position:absolute; top:-9999px; left:-9999px; display:none"';
if (window.ActiveXObject) {
if (typeof uri == "boolean") {
iframeHtml += ' src="' + "javascript:false" + '"'
} else {
if (typeof uri == "string") {
iframeHtml += ' src="' + uri + '"'
}}}
iframeHtml += " />";
jQuery(iframeHtml).appendTo(jQuery("body"));
jQuery("#" + frameId).hide();
return jQuery("#" + frameId).get(0)
},
createUploadForm: function(id, fileElementId) {
var formId = "jUploadForm" + id;
var fileId = "jUploadFile" + id;
var form = jQuery('<form  action="" method="POST" name="' + formId + '" id="' + formId + '" enctype="multipart/form-data"></form>');
var oldElement = jQuery("#" + fileElementId);
var newElement = jQuery(oldElement).clone();
jQuery(oldElement).attr("id", fileId);
jQuery(oldElement).before(newElement);
jQuery(oldElement).appendTo(form);
jQuery(form).css("position", "absolute");
jQuery(form).css("top", "-1200px");
jQuery(form).css("left", "-1200px");
jQuery(form).appendTo("body");
return form
},
ajaxFileUpload: function(s) {
s = jQuery.extend({},jQuery.ajaxSettings,s);
var id = new Date().getTime();
var form = jQuery.createUploadForm(id, s.fileElementId);
var io = jQuery.createUploadIframe(id, s.secureuri);
var frameId = "jUploadFrame" + id;
var formId = "jUploadForm" + id;
if (s.global && !jQuery.active++) {
jQuery.event.trigger("ajaxStart")
}
var requestDone = false;
var xml = {};
if (s.global) {
jQuery.event.trigger("ajaxSend", [xml, s])
}
var uploadCallback = function(isTimeout) {
var io = document.getElementById(frameId);
try {
if (io.contentWindow) {
xml.responseText = io.contentWindow.document.body?io.contentWindow.document.body.innerHTML:null;
xml.responseXML = io.contentWindow.document.XMLDocument ? io.contentWindow.document.XMLDocument: io.contentWindow.document
} else {
if (io.contentDocument) {
xml.responseText = io.contentDocument.document.body ? io.contentDocument.document.body.innerHTML: null;
xml.responseXML = io.contentDocument.document.XMLDocument ? io.contentDocument.document.XMLDocument: io.contentDocument.document
}}
} catch(e) {
jQuery.handleError(s, xml, null, e)
}
if(xml || isTimeout == "timeout") {
requestDone = true;
var status;
try {
status = isTimeout != "timeout" ? "success": "error";
if (status != "error") {
var data = jQuery.uploadHttpData(xml,s.dataType);
if (s.success) {
s.success(data,status)
}
if (s.global) {
jQuery.event.trigger("ajaxSuccess", [xml, s])
}
} else {
jQuery.handleError(s, xml, status)
}
} catch(e) {
status = "error";
jQuery.handleError(s, xml, status, e)
}
if (s.global) {
jQuery.event.trigger("ajaxComplete", [xml, s])
}
if (s.global && !--jQuery.active) {
jQuery.event.trigger("ajaxStop")
}
if (s.complete) {
s.complete(xml, status)
}
jQuery(io).unbind();
setTimeout(function() {
try {
jQuery(io).remove();
jQuery(form).remove()
} catch(e) {
jQuery.handleError(s, xml, null, e)
}
},
100);
xml = null
}
};
if (s.timeout > 0) {
setTimeout(function() {
if (!requestDone) {
uploadCallback("timeout")
}
},
s.timeout)
}
try {
var form = jQuery("#" + formId);
jQuery(form).attr("action", s.url);
jQuery(form).attr("method", "POST");
jQuery(form).attr("target", frameId);
if (form.encoding) {
jQuery(form).attr("encoding", "multipart/form-data")
} else {
jQuery(form).attr("enctype", "multipart/form-data")
}
jQuery(form).submit();
} catch(e) {
jQuery.handleError(s, xml, null, e)
}
jQuery("#" + frameId).load(uploadCallback);
return {
abort: function() {}
}
},
uploadHttpData: function(r,type) {
var data = (type == "xml" || !type)?r.responseXML:r.responseText;
if (type == "script") {
jQuery.globalEval(data)
}
if (type == "json") {
eval("data = " + data)
}
if (type == "html") {
jQuery("<div></div>").html(data).evalScripts()
}
return data
},
handleError: function(s, xhr, status, e) {
if (s.error) {
s.error.call(s.context || s, xhr, status, e)
}}
});/*
* jPlayer Plugin for jQuery JavaScript Library
* http://www.jplayer.org
*
* Copyright (c) 2009 - 2013 Happyworm Ltd
* Licensed under the MIT license.
* http://opensource.org/licenses/MIT
*
* Author: Mark J Panaghiston
* Version: 2.5.0
* Date: 7th November 2013
*/
(function(b,f){"function"===typeof define&&define.amd?define(["jquery"],f):b.jQuery?f(b.jQuery):f(b.Zepto)})(this,function(b,f){b.fn.jPlayer=function(a){var c="string"===typeof a,d=Array.prototype.slice.call(arguments,1),e=this;a=!c&&d.length?b.extend.apply(null,[!0,a].concat(d)):a;if(c&&"_"===a.charAt(0))return e;c?this.each(function(){var c=b(this).data("jPlayer"),h=c&&b.isFunction(c[a])?c[a].apply(c,d):c;if(h!==c&&h!==f)return e=h,!1}):this.each(function(){var c=b(this).data("jPlayer");c?c.option(a||
{}):b(this).data("jPlayer",new b.jPlayer(a,this))});return e};b.jPlayer=function(a,c){if(arguments.length){this.element=b(c);this.options=b.extend(!0,{},this.options,a);var d=this;this.element.bind("remove.jPlayer",function(){d.destroy()});this._init()}};"function"!==typeof b.fn.stop&&(b.fn.stop=function(){});b.jPlayer.emulateMethods="load play pause";b.jPlayer.emulateStatus="src readyState networkState currentTime duration paused ended playbackRate";b.jPlayer.emulateOptions="muted volume";b.jPlayer.reservedEvent=
"ready flashreset resize repeat error warning";b.jPlayer.event={};b.each("ready flashreset resize repeat click error warning loadstart progress suspend abort emptied stalled play pause loadedmetadata loadeddata waiting playing canplay canplaythrough seeking seeked timeupdate ended ratechange durationchange volumechange".split(" "),function(){b.jPlayer.event[this]="jPlayer_"+this});b.jPlayer.htmlEvent="loadstart abort emptied stalled loadedmetadata loadeddata canplay canplaythrough".split(" ");b.jPlayer.pause=
function(){b.each(b.jPlayer.prototype.instances,function(a,c){c.data("jPlayer").status.srcSet&&c.jPlayer("pause")})};b.jPlayer.timeFormat={showHour:!1,showMin:!0,showSec:!0,padHour:!1,padMin:!0,padSec:!0,sepHour:":",sepMin:":",sepSec:""};var m=function(){this.init()};m.prototype={init:function(){this.options={timeFormat:b.jPlayer.timeFormat}},time:function(a){var c=new Date(1E3*(a&&"number"===typeof a?a:0)),b=c.getUTCHours();a=this.options.timeFormat.showHour?c.getUTCMinutes():c.getUTCMinutes()+60*
b;c=this.options.timeFormat.showMin?c.getUTCSeconds():c.getUTCSeconds()+60*a;b=this.options.timeFormat.padHour&&10>b?"0"+b:b;a=this.options.timeFormat.padMin&&10>a?"0"+a:a;c=this.options.timeFormat.padSec&&10>c?"0"+c:c;b=""+(this.options.timeFormat.showHour?b+this.options.timeFormat.sepHour:"");b+=this.options.timeFormat.showMin?a+this.options.timeFormat.sepMin:"";return b+=this.options.timeFormat.showSec?c+this.options.timeFormat.sepSec:""}};var n=new m;b.jPlayer.convertTime=function(a){return n.time(a)};
b.jPlayer.uaBrowser=function(a){a=a.toLowerCase();var c=/(opera)(?:.*version)?[ \/]([\w.]+)/,b=/(msie) ([\w.]+)/,e=/(mozilla)(?:.*? rv:([\w.]+))?/;a=/(webkit)[ \/]([\w.]+)/.exec(a)||c.exec(a)||b.exec(a)||0>a.indexOf("compatible")&&e.exec(a)||[];return{browser:a[1]||"",version:a[2]||"0"}};b.jPlayer.uaPlatform=function(a){var c=a.toLowerCase(),b=/(android)/,e=/(mobile)/;a=/(ipad|iphone|ipod|android|blackberry|playbook|windows ce|webos)/.exec(c)||[];c=/(ipad|playbook)/.exec(c)||!e.exec(c)&&b.exec(c)||
[];a[1]&&(a[1]=a[1].replace(/\s/g,"_"));return{platform:a[1]||"",tablet:c[1]||""}};b.jPlayer.browser={};b.jPlayer.platform={};var k=b.jPlayer.uaBrowser(navigator.userAgent);k.browser&&(b.jPlayer.browser[k.browser]=!0,b.jPlayer.browser.version=k.version);k=b.jPlayer.uaPlatform(navigator.userAgent);k.platform&&(b.jPlayer.platform[k.platform]=!0,b.jPlayer.platform.mobile=!k.tablet,b.jPlayer.platform.tablet=!!k.tablet);b.jPlayer.getDocMode=function(){var a;b.jPlayer.browser.msie&&(document.documentMode?
a=document.documentMode:(a=5,document.compatMode&&"CSS1Compat"===document.compatMode&&(a=7)));return a};b.jPlayer.browser.documentMode=b.jPlayer.getDocMode();b.jPlayer.nativeFeatures={init:function(){var a=document,c=a.createElement("video"),b={w3c:"fullscreenEnabled fullscreenElement requestFullscreen exitFullscreen fullscreenchange fullscreenerror".split(" "),moz:"mozFullScreenEnabled mozFullScreenElement mozRequestFullScreen mozCancelFullScreen mozfullscreenchange mozfullscreenerror".split(" "),
webkit:" webkitCurrentFullScreenElement webkitRequestFullScreen webkitCancelFullScreen webkitfullscreenchange ".split(" "),webkitVideo:"webkitSupportsFullscreen webkitDisplayingFullscreen webkitEnterFullscreen webkitExitFullscreen  ".split(" ")},e=["w3c","moz","webkit","webkitVideo"],g,h;this.fullscreen=c={support:{w3c:!!a[b.w3c[0]],moz:!!a[b.moz[0]],webkit:"function"===typeof a[b.webkit[3]],webkitVideo:"function"===typeof c[b.webkitVideo[2]]},used:{}};g=0;for(h=e.length;g<h;g++){var f=e[g];if(c.support[f]){c.spec=
f;c.used[f]=!0;break}}if(c.spec){var l=b[c.spec];c.api={fullscreenEnabled:!0,fullscreenElement:function(c){c=c?c:a;return c[l[1]]},requestFullscreen:function(a){return a[l[2]]()},exitFullscreen:function(c){c=c?c:a;return c[l[3]]()}};c.event={fullscreenchange:l[4],fullscreenerror:l[5]}}else c.api={fullscreenEnabled:!1,fullscreenElement:function(){return null},requestFullscreen:function(){},exitFullscreen:function(){}},c.event={}}};b.jPlayer.nativeFeatures.init();b.jPlayer.focus=null;b.jPlayer.keyIgnoreElementNames=
"INPUT TEXTAREA";var p=function(a){var c=b.jPlayer.focus,d;c&&(b.each(b.jPlayer.keyIgnoreElementNames.split(/\s+/g),function(c,b){if(a.target.nodeName.toUpperCase()===b.toUpperCase())return d=!0,!1}),d||b.each(c.options.keyBindings,function(d,g){if(g&&a.which===g.key&&b.isFunction(g.fn))return a.preventDefault(),g.fn(c),!1}))};
b.jPlayer.keys=function(){};
b.jPlayer.keys(!0);b.jPlayer.prototype=
{count:0,version:{script:"2.5.0",needFlash:"2.5.0",flash:"unknown"},options:{swfPath:"js",solution:"html, flash",supplied:"mp3",preload:"metadata",volume:0.8,muted:!1,playbackRate:1,defaultPlaybackRate:1,minPlaybackRate:0.5,maxPlaybackRate:4,wmode:"opaque",backgroundColor:"#000000",cssSelectorAncestor:"#jp_container_1",cssSelector:{videoPlay:".jp-video-play",play:".jp-play",pause:".jp-pause",stop:".jp-stop",seekBar:".jp-seek-bar",playBar:".jp-play-bar",mute:".jp-mute",unmute:".jp-unmute",volumeBar:".jp-volume-bar",
volumeBarValue:".jp-volume-bar-value",volumeMax:".jp-volume-max",playbackRateBar:".jp-playback-rate-bar",playbackRateBarValue:".jp-playback-rate-bar-value",currentTime:".jp-current-time",duration:".jp-duration",fullScreen:".jp-full-screen",restoreScreen:".jp-restore-screen",repeat:".jp-repeat",repeatOff:".jp-repeat-off",gui:".jp-gui",noSolution:".jp-no-solution"},smoothPlayBar:!1,fullScreen:!1,fullWindow:!1,autohide:{restored:!1,full:!0,fadeIn:200,fadeOut:600,hold:1E3},loop:!1,repeat:function(a){a.jPlayer.options.loop?
b(this).unbind(".jPlayerRepeat").bind(b.jPlayer.event.ended+".jPlayer.jPlayerRepeat",function(){b(this).jPlayer("play")}):b(this).unbind(".jPlayerRepeat")},nativeVideoControls:{},noFullWindow:{msie:/msie [0-6]\./,ipad:/ipad.*?os [0-4]\./,iphone:/iphone/,ipod:/ipod/,android_pad:/android [0-3]\.(?!.*?mobile)/,android_phone:/android.*?mobile/,blackberry:/blackberry/,windows_ce:/windows ce/,iemobile:/iemobile/,webos:/webos/},noVolume:{ipad:/ipad/,iphone:/iphone/,ipod:/ipod/,android_pad:/android(?!.*?mobile)/,
android_phone:/android.*?mobile/,blackberry:/blackberry/,windows_ce:/windows ce/,iemobile:/iemobile/,webos:/webos/,playbook:/playbook/},timeFormat:{},keyEnabled:!1,audioFullScreen:!1,keyBindings:{play:{key:32,fn:function(a){a.status.paused?a.play():a.pause()}},fullScreen:{key:13,fn:function(a){(a.status.video||a.options.audioFullScreen)&&a._setOption("fullScreen",!a.options.fullScreen)}},muted:{key:8,fn:function(a){a._muted(!a.options.muted)}},volumeUp:{key:38,fn:function(a){a.volume(a.options.volume+
0.1)}},volumeDown:{key:40,fn:function(a){a.volume(a.options.volume-0.1)}}},verticalVolume:!1,verticalPlaybackRate:!1,globalVolume:!1,idPrefix:"jp",noConflict:"jQuery",emulateHtml:!1,consoleAlerts:!0,errorAlerts:!1,warningAlerts:!1},optionsAudio:{size:{width:"0px",height:"0px",cssClass:""},sizeFull:{width:"0px",height:"0px",cssClass:""}},optionsVideo:{size:{width:"480px",height:"270px",cssClass:"jp-video-270p"},sizeFull:{width:"100%",height:"100%",cssClass:"jp-video-full"}},instances:{},status:{src:"",
media:{},paused:!0,format:{},formatType:"",waitForPlay:!0,waitForLoad:!0,srcSet:!1,video:!1,seekPercent:0,currentPercentRelative:0,currentPercentAbsolute:0,currentTime:0,duration:0,videoWidth:0,videoHeight:0,readyState:0,networkState:0,playbackRate:1,ended:0},internal:{ready:!1},solution:{html:!0,flash:!0},format:{mp3:{codec:'audio/mpeg; codecs="mp3"',flashCanPlay:!0,media:"audio"},m4a:{codec:'audio/mp4; codecs="mp4a.40.2"',flashCanPlay:!0,media:"audio"},m3u8a:{codec:'application/vnd.apple.mpegurl; codecs="mp4a.40.2"',
flashCanPlay:!1,media:"audio"},m3ua:{codec:"audio/mpegurl",flashCanPlay:!1,media:"audio"},oga:{codec:'audio/ogg; codecs="vorbis, opus"',flashCanPlay:!1,media:"audio"},flac:{codec:"audio/x-flac",flashCanPlay:!1,media:"audio"},wav:{codec:'audio/wav; codecs="1"',flashCanPlay:!1,media:"audio"},webma:{codec:'audio/webm; codecs="vorbis"',flashCanPlay:!1,media:"audio"},fla:{codec:"audio/x-flv",flashCanPlay:!0,media:"audio"},rtmpa:{codec:'audio/rtmp; codecs="rtmp"',flashCanPlay:!0,media:"audio"},m4v:{codec:'video/mp4; codecs="avc1.42E01E, mp4a.40.2"',
flashCanPlay:!0,media:"video"},m3u8v:{codec:'application/vnd.apple.mpegurl; codecs="avc1.42E01E, mp4a.40.2"',flashCanPlay:!1,media:"video"},m3uv:{codec:"audio/mpegurl",flashCanPlay:!1,media:"video"},ogv:{codec:'video/ogg; codecs="theora, vorbis"',flashCanPlay:!1,media:"video"},webmv:{codec:'video/webm; codecs="vorbis, vp8"',flashCanPlay:!1,media:"video"},flv:{codec:"video/x-flv",flashCanPlay:!0,media:"video"},rtmpv:{codec:'video/rtmp; codecs="rtmp"',flashCanPlay:!0,media:"video"}},_init:function(){var a=
this;this.element.empty();this.status=b.extend({},this.status);this.internal=b.extend({},this.internal);this.options.timeFormat=b.extend({},b.jPlayer.timeFormat,this.options.timeFormat);this.internal.cmdsIgnored=b.jPlayer.platform.ipad||b.jPlayer.platform.iphone||b.jPlayer.platform.ipod;this.internal.domNode=this.element.get(0);this.options.keyEnabled&&!b.jPlayer.focus&&(b.jPlayer.focus=this);this.formats=[];this.solutions=[];this.require={};this.htmlElement={};this.html={};this.html.audio={};this.html.video=
{};this.flash={};this.css={};this.css.cs={};this.css.jq={};this.ancestorJq=[];this.options.volume=this._limitValue(this.options.volume,0,1);b.each(this.options.supplied.toLowerCase().split(","),function(c,d){var e=d.replace(/^\s+|\s+$/g,"");if(a.format[e]){var f=!1;b.each(a.formats,function(a,c){if(e===c)return f=!0,!1});f||a.formats.push(e)}});b.each(this.options.solution.toLowerCase().split(","),function(c,d){var e=d.replace(/^\s+|\s+$/g,"");if(a.solution[e]){var f=!1;b.each(a.solutions,function(a,
c){if(e===c)return f=!0,!1});f||a.solutions.push(e)}});this.internal.instance="jp_"+this.count;this.instances[this.internal.instance]=this.element;this.element.attr("id")||this.element.attr("id",this.options.idPrefix+"_jplayer_"+this.count);this.internal.self=b.extend({},{id:this.element.attr("id"),jq:this.element});this.internal.audio=b.extend({},{id:this.options.idPrefix+"_audio_"+this.count,jq:f});this.internal.video=b.extend({},{id:this.options.idPrefix+"_video_"+this.count,jq:f});this.internal.flash=
b.extend({},{id:this.options.idPrefix+"_flash_"+this.count,jq:f,swf:this.options.swfPath+(".swf"!==this.options.swfPath.toLowerCase().slice(-4)?(this.options.swfPath&&"/"!==this.options.swfPath.slice(-1)?"/":"")+"Jplayer.swf":"")});this.internal.poster=b.extend({},{id:this.options.idPrefix+"_poster_"+this.count,jq:f});b.each(b.jPlayer.event,function(c,b){a.options[c]!==f&&(a.element.bind(b+".jPlayer",a.options[c]),a.options[c]=f)});this.require.audio=!1;this.require.video=!1;b.each(this.formats,function(c,
b){a.require[a.format[b].media]=!0});this.options=this.require.video?b.extend(!0,{},this.optionsVideo,this.options):b.extend(!0,{},this.optionsAudio,this.options);this._setSize();this.status.nativeVideoControls=this._uaBlocklist(this.options.nativeVideoControls);this.status.noFullWindow=this._uaBlocklist(this.options.noFullWindow);this.status.noVolume=this._uaBlocklist(this.options.noVolume);b.jPlayer.nativeFeatures.fullscreen.api.fullscreenEnabled&&this._fullscreenAddEventListeners();this._restrictNativeVideoControls();
this.htmlElement.poster=document.createElement("img");this.htmlElement.poster.id=this.internal.poster.id;this.htmlElement.poster.onload=function(){a.status.video&&!a.status.waitForPlay||a.internal.poster.jq.show()};this.element.append(this.htmlElement.poster);this.internal.poster.jq=b("#"+this.internal.poster.id);this.internal.poster.jq.css({width:this.status.width,height:this.status.height});this.internal.poster.jq.hide();this.internal.poster.jq.bind("click.jPlayer",function(){a._trigger(b.jPlayer.event.click)});
this.html.audio.available=!1;this.require.audio&&(this.htmlElement.audio=document.createElement("audio"),this.htmlElement.audio.id=this.internal.audio.id,this.html.audio.available=!!this.htmlElement.audio.canPlayType&&this._testCanPlayType(this.htmlElement.audio));this.html.video.available=!1;this.require.video&&(this.htmlElement.video=document.createElement("video"),this.htmlElement.video.id=this.internal.video.id,this.html.video.available=!!this.htmlElement.video.canPlayType&&this._testCanPlayType(this.htmlElement.video));
this.flash.available=this._checkForFlash(10.1);this.html.canPlay={};this.flash.canPlay={};b.each(this.formats,function(c,b){a.html.canPlay[b]=a.html[a.format[b].media].available&&""!==a.htmlElement[a.format[b].media].canPlayType(a.format[b].codec);a.flash.canPlay[b]=a.format[b].flashCanPlay&&a.flash.available});this.html.desired=!1;this.flash.desired=!1;b.each(this.solutions,function(c,d){if(0===c)a[d].desired=!0;else{var e=!1,f=!1;b.each(a.formats,function(c,b){a[a.solutions[0]].canPlay[b]&&("video"===
a.format[b].media?f=!0:e=!0)});a[d].desired=a.require.audio&&!e||a.require.video&&!f}});this.html.support={};this.flash.support={};b.each(this.formats,function(c,b){a.html.support[b]=a.html.canPlay[b]&&a.html.desired;a.flash.support[b]=a.flash.canPlay[b]&&a.flash.desired});this.html.used=!1;this.flash.used=!1;b.each(this.solutions,function(c,d){b.each(a.formats,function(c,b){if(a[d].support[b])return a[d].used=!0,!1})});this._resetActive();this._resetGate();this._cssSelectorAncestor(this.options.cssSelectorAncestor);
this.html.used||this.flash.used?this.css.jq.noSolution.length&&this.css.jq.noSolution.hide():(this._error({type:b.jPlayer.error.NO_SOLUTION,context:"{solution:'"+this.options.solution+"', supplied:'"+this.options.supplied+"'}",message:b.jPlayer.errorMsg.NO_SOLUTION,hint:b.jPlayer.errorHint.NO_SOLUTION}),this.css.jq.noSolution.length&&this.css.jq.noSolution.show());if(this.flash.used){var c,d="jQuery="+encodeURI(this.options.noConflict)+"&id="+encodeURI(this.internal.self.id)+"&vol="+this.options.volume+
"&muted="+this.options.muted;if(b.jPlayer.browser.msie&&(9>Number(b.jPlayer.browser.version)||9>b.jPlayer.browser.documentMode)){d=['<param name="movie" value="'+this.internal.flash.swf+'" />','<param name="FlashVars" value="'+d+'" />','<param name="allowScriptAccess" value="always" />','<param name="bgcolor" value="'+this.options.backgroundColor+'" />','<param name="wmode" value="'+this.options.wmode+'" />'];c=document.createElement('<object id="'+this.internal.flash.id+'" classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" width="0" height="0" tabindex="-1"></object>');
for(var e=0;e<d.length;e++)c.appendChild(document.createElement(d[e]))}else e=function(a,c,b){var d=document.createElement("param");d.setAttribute("name",c);d.setAttribute("value",b);a.appendChild(d)},c=document.createElement("object"),c.setAttribute("id",this.internal.flash.id),c.setAttribute("name",this.internal.flash.id),c.setAttribute("data",this.internal.flash.swf),c.setAttribute("type","application/x-shockwave-flash"),c.setAttribute("width","1"),c.setAttribute("height","1"),c.setAttribute("tabindex",
"-1"),e(c,"flashvars",d),e(c,"allowscriptaccess","always"),e(c,"bgcolor",this.options.backgroundColor),e(c,"wmode",this.options.wmode);this.element.append(c);this.internal.flash.jq=b(c)}this.status.playbackRateEnabled=this.html.used&&!this.flash.used?this._testPlaybackRate("audio"):!1;this._updatePlaybackRate();this.html.used&&(this.html.audio.available&&(this._addHtmlEventListeners(this.htmlElement.audio,this.html.audio),this.element.append(this.htmlElement.audio),this.internal.audio.jq=b("#"+this.internal.audio.id)),
this.html.video.available&&(this._addHtmlEventListeners(this.htmlElement.video,this.html.video),this.element.append(this.htmlElement.video),this.internal.video.jq=b("#"+this.internal.video.id),this.status.nativeVideoControls?this.internal.video.jq.css({width:this.status.width,height:this.status.height}):this.internal.video.jq.css({width:"0px",height:"0px"}),this.internal.video.jq.bind("click.jPlayer",function(){a._trigger(b.jPlayer.event.click)})));this.options.emulateHtml&&this._emulateHtmlBridge();
this.html.used&&!this.flash.used&&setTimeout(function(){a.internal.ready=!0;a.version.flash="n/a";a._trigger(b.jPlayer.event.repeat);a._trigger(b.jPlayer.event.ready)},100);this._updateNativeVideoControls();this.css.jq.videoPlay.length&&this.css.jq.videoPlay.hide();b.jPlayer.prototype.count++},destroy:function(){this.clearMedia();this._removeUiClass();this.css.jq.currentTime.length&&this.css.jq.currentTime.text("");this.css.jq.duration.length&&this.css.jq.duration.text("");b.each(this.css.jq,function(a,
c){c.length&&c.unbind(".jPlayer")});this.internal.poster.jq.unbind(".jPlayer");this.internal.video.jq&&this.internal.video.jq.unbind(".jPlayer");this._fullscreenRemoveEventListeners();this===b.jPlayer.focus&&(b.jPlayer.focus=null);this.options.emulateHtml&&this._destroyHtmlBridge();this.element.removeData("jPlayer");this.element.unbind(".jPlayer");this.element.empty();delete this.instances[this.internal.instance]},enable:function(){},disable:function(){},_testCanPlayType:function(a){try{return a.canPlayType(this.format.mp3.codec),
!0}catch(c){return!1}},_testPlaybackRate:function(a){a=document.createElement("string"===typeof a?a:"audio");try{return"playbackRate"in a?(a.playbackRate=0.5,0.5===a.playbackRate):!1}catch(c){return!1}},_uaBlocklist:function(a){var c=navigator.userAgent.toLowerCase(),d=!1;b.each(a,function(a,b){if(b&&b.test(c))return d=!0,!1});return d},_restrictNativeVideoControls:function(){this.require.audio&&this.status.nativeVideoControls&&(this.status.nativeVideoControls=!1,this.status.noFullWindow=!0)},_updateNativeVideoControls:function(){this.html.video.available&&
this.html.used&&(this.htmlElement.video.controls=this.status.nativeVideoControls,this._updateAutohide(),this.status.nativeVideoControls&&this.require.video?(this.internal.poster.jq.hide(),this.internal.video.jq.css({width:this.status.width,height:this.status.height})):this.status.waitForPlay&&this.status.video&&(this.internal.poster.jq.show(),this.internal.video.jq.css({width:"0px",height:"0px"})))},_addHtmlEventListeners:function(a,c){var d=this;a.preload=this.options.preload;a.muted=this.options.muted;
a.volume=this.options.volume;this.status.playbackRateEnabled&&(a.defaultPlaybackRate=this.options.defaultPlaybackRate,a.playbackRate=this.options.playbackRate);a.addEventListener("progress",function(){c.gate&&(d.internal.cmdsIgnored&&0<this.readyState&&(d.internal.cmdsIgnored=!1),d._getHtmlStatus(a),d._updateInterface(),d._trigger(b.jPlayer.event.progress))},!1);a.addEventListener("timeupdate",function(){c.gate&&(d._getHtmlStatus(a),d._updateInterface(),d._trigger(b.jPlayer.event.timeupdate))},!1);
a.addEventListener("durationchange",function(){c.gate&&(d._getHtmlStatus(a),d._updateInterface(),d._trigger(b.jPlayer.event.durationchange))},!1);a.addEventListener("play",function(){c.gate&&(d._updateButtons(!0),d._html_checkWaitForPlay(),d._trigger(b.jPlayer.event.play))},!1);a.addEventListener("playing",function(){c.gate&&(d._updateButtons(!0),d._seeked(),d._trigger(b.jPlayer.event.playing))},!1);a.addEventListener("pause",function(){c.gate&&(d._updateButtons(!1),d._trigger(b.jPlayer.event.pause))},
!1);a.addEventListener("waiting",function(){c.gate&&(d._seeking(),d._trigger(b.jPlayer.event.waiting))},!1);a.addEventListener("seeking",function(){c.gate&&(d._seeking(),d._trigger(b.jPlayer.event.seeking))},!1);a.addEventListener("seeked",function(){c.gate&&(d._seeked(),d._trigger(b.jPlayer.event.seeked))},!1);a.addEventListener("volumechange",function(){c.gate&&(d.options.volume=a.volume,d.options.muted=a.muted,d._updateMute(),d._updateVolume(),d._trigger(b.jPlayer.event.volumechange))},!1);a.addEventListener("ratechange",
function(){c.gate&&(d.options.defaultPlaybackRate=a.defaultPlaybackRate,d.options.playbackRate=a.playbackRate,d._updatePlaybackRate(),d._trigger(b.jPlayer.event.ratechange))},!1);a.addEventListener("suspend",function(){c.gate&&(d._seeked(),d._trigger(b.jPlayer.event.suspend))},!1);a.addEventListener("ended",function(){c.gate&&(b.jPlayer.browser.webkit||(d.htmlElement.media.currentTime=0),d.htmlElement.media.pause(),d._updateButtons(!1),d._getHtmlStatus(a,!0),d._updateInterface(),d._trigger(b.jPlayer.event.ended))},
!1);a.addEventListener("error",function(){c.gate&&(d._updateButtons(!1),d._seeked(),d.status.srcSet&&(clearTimeout(d.internal.htmlDlyCmdId),d.status.waitForLoad=!0,d.status.waitForPlay=!0,d.status.video&&!d.status.nativeVideoControls&&d.internal.video.jq.css({width:"0px",height:"0px"}),d._validString(d.status.media.poster)&&!d.status.nativeVideoControls&&d.internal.poster.jq.show(),d.css.jq.videoPlay.length&&d.css.jq.videoPlay.show(),d._error({type:b.jPlayer.error.URL,context:d.status.src,message:b.jPlayer.errorMsg.URL,
hint:b.jPlayer.errorHint.URL})))},!1);b.each(b.jPlayer.htmlEvent,function(e,g){a.addEventListener(this,function(){c.gate&&d._trigger(b.jPlayer.event[g])},!1)})},_getHtmlStatus:function(a,c){var b=0,e=0,g=0,f=0;isFinite(a.duration)&&(this.status.duration=a.duration);b=a.currentTime;e=0<this.status.duration?100*b/this.status.duration:0;"object"===typeof a.seekable&&0<a.seekable.length?(g=0<this.status.duration?100*a.seekable.end(a.seekable.length-1)/this.status.duration:100,f=0<this.status.duration?
100*a.currentTime/a.seekable.end(a.seekable.length-1):0):(g=100,f=e);c&&(e=f=b=0);this.status.seekPercent=g;this.status.currentPercentRelative=f;this.status.currentPercentAbsolute=e;this.status.currentTime=b;this.status.videoWidth=a.videoWidth;this.status.videoHeight=a.videoHeight;this.status.readyState=a.readyState;this.status.networkState=a.networkState;this.status.playbackRate=a.playbackRate;this.status.ended=a.ended},_resetStatus:function(){this.status=b.extend({},this.status,b.jPlayer.prototype.status)},
_trigger:function(a,c,d){a=b.Event(a);a.jPlayer={};a.jPlayer.version=b.extend({},this.version);a.jPlayer.options=b.extend(!0,{},this.options);a.jPlayer.status=b.extend(!0,{},this.status);a.jPlayer.html=b.extend(!0,{},this.html);a.jPlayer.flash=b.extend(!0,{},this.flash);c&&(a.jPlayer.error=b.extend({},c));d&&(a.jPlayer.warning=b.extend({},d));this.element.trigger(a)},jPlayerFlashEvent:function(a,c){if(a===b.jPlayer.event.ready)if(!this.internal.ready)this.internal.ready=!0,this.internal.flash.jq.css({width:"0px",
height:"0px"}),this.version.flash=c.version,this.version.needFlash!==this.version.flash&&this._error({type:b.jPlayer.error.VERSION,context:this.version.flash,message:b.jPlayer.errorMsg.VERSION+this.version.flash,hint:b.jPlayer.errorHint.VERSION}),this._trigger(b.jPlayer.event.repeat),this._trigger(a);else if(this.flash.gate){if(this.status.srcSet){var d=this.status.currentTime,e=this.status.paused;this.setMedia(this.status.media);this.volumeWorker(this.options.volume);0<d&&(e?this.pause(d):this.play(d))}this._trigger(b.jPlayer.event.flashreset)}if(this.flash.gate)switch(a){case b.jPlayer.event.progress:this._getFlashStatus(c);
this._updateInterface();this._trigger(a);break;case b.jPlayer.event.timeupdate:this._getFlashStatus(c);this._updateInterface();this._trigger(a);break;case b.jPlayer.event.play:this._seeked();this._updateButtons(!0);this._trigger(a);break;case b.jPlayer.event.pause:this._updateButtons(!1);this._trigger(a);break;case b.jPlayer.event.ended:this._updateButtons(!1);this._trigger(a);break;case b.jPlayer.event.click:this._trigger(a);break;case b.jPlayer.event.error:this.status.waitForLoad=!0;this.status.waitForPlay=
!0;this.status.video&&this.internal.flash.jq.css({width:"0px",height:"0px"});this._validString(this.status.media.poster)&&this.internal.poster.jq.show();this.css.jq.videoPlay.length&&this.status.video&&this.css.jq.videoPlay.show();this.status.video?this._flash_setVideo(this.status.media):this._flash_setAudio(this.status.media);this._updateButtons(!1);this._error({type:b.jPlayer.error.URL,context:c.src,message:b.jPlayer.errorMsg.URL,hint:b.jPlayer.errorHint.URL});break;case b.jPlayer.event.seeking:this._seeking();
this._trigger(a);break;case b.jPlayer.event.seeked:this._seeked();this._trigger(a);break;case b.jPlayer.event.ready:break;default:this._trigger(a)}return!1},_getFlashStatus:function(a){this.status.seekPercent=a.seekPercent;this.status.currentPercentRelative=a.currentPercentRelative;this.status.currentPercentAbsolute=a.currentPercentAbsolute;this.status.currentTime=a.currentTime;this.status.duration=a.duration;this.status.videoWidth=a.videoWidth;this.status.videoHeight=a.videoHeight;this.status.readyState=
4;this.status.networkState=0;this.status.playbackRate=1;this.status.ended=!1},_updateButtons:function(a){a===f?a=!this.status.paused:this.status.paused=!a;this.css.jq.play.length&&this.css.jq.pause.length&&(a?(this.css.jq.play.hide(),this.css.jq.pause.show()):(this.css.jq.play.show(),this.css.jq.pause.hide()));this.css.jq.restoreScreen.length&&this.css.jq.fullScreen.length&&(this.status.noFullWindow?(this.css.jq.fullScreen.hide(),this.css.jq.restoreScreen.hide()):this.options.fullWindow?(this.css.jq.fullScreen.hide(),
this.css.jq.restoreScreen.show()):(this.css.jq.fullScreen.show(),this.css.jq.restoreScreen.hide()));this.css.jq.repeat.length&&this.css.jq.repeatOff.length&&(this.options.loop?(this.css.jq.repeat.hide(),this.css.jq.repeatOff.show()):(this.css.jq.repeat.show(),this.css.jq.repeatOff.hide()))},_updateInterface:function(){this.css.jq.seekBar.length&&this.css.jq.seekBar.width(this.status.seekPercent+"%");this.css.jq.playBar.length&&(this.options.smoothPlayBar?this.css.jq.playBar.stop().animate({width:this.status.currentPercentAbsolute+
"%"},250,"linear"):this.css.jq.playBar.width(this.status.currentPercentRelative+"%"));this.css.jq.currentTime.length&&this.css.jq.currentTime.text(this._convertTime(this.status.currentTime));this.css.jq.duration.length&&this.css.jq.duration.text(this._convertTime(this.status.duration))},_convertTime:m.prototype.time,_seeking:function(){this.css.jq.seekBar.length&&this.css.jq.seekBar.addClass("jp-seeking-bg")},_seeked:function(){this.css.jq.seekBar.length&&this.css.jq.seekBar.removeClass("jp-seeking-bg")},
_resetGate:function(){this.html.audio.gate=!1;this.html.video.gate=!1;this.flash.gate=!1},_resetActive:function(){this.html.active=!1;this.flash.active=!1},_escapeHtml:function(a){return a.split("&").join("&amp;").split("<").join("&lt;").split(">").join("&gt;").split('"').join("&quot;")},_qualifyURL:function(a){var c=document.createElement("div");c.innerHTML='<a href="'+this._escapeHtml(a)+'">x</a>';return c.firstChild.href},_absoluteMediaUrls:function(a){var c=this;b.each(a,function(b,e){c.format[b]&&
(a[b]=c._qualifyURL(e))});return a},setMedia:function(a){var c=this,d=!1,e=this.status.media.poster!==a.poster;this._resetMedia();this._resetGate();this._resetActive();a=this._absoluteMediaUrls(a);b.each(this.formats,function(e,f){var k="video"===c.format[f].media;b.each(c.solutions,function(b,e){if(c[e].support[f]&&c._validString(a[f])){var g="html"===e;k?(g?(c.html.video.gate=!0,c._html_setVideo(a),c.html.active=!0):(c.flash.gate=!0,c._flash_setVideo(a),c.flash.active=!0),c.css.jq.videoPlay.length&&
c.css.jq.videoPlay.show(),c.status.video=!0):(g?(c.html.audio.gate=!0,c._html_setAudio(a),c.html.active=!0):(c.flash.gate=!0,c._flash_setAudio(a),c.flash.active=!0),c.css.jq.videoPlay.length&&c.css.jq.videoPlay.hide(),c.status.video=!1);d=!0;return!1}});if(d)return!1});d?(this.status.nativeVideoControls&&this.html.video.gate||!this._validString(a.poster)||(e?this.htmlElement.poster.src=a.poster:this.internal.poster.jq.show()),this.status.srcSet=!0,this.status.media=b.extend({},a),this._updateButtons(!1),
this._updateInterface()):this._error({type:b.jPlayer.error.NO_SUPPORT,context:"{supplied:'"+this.options.supplied+"'}",message:b.jPlayer.errorMsg.NO_SUPPORT,hint:b.jPlayer.errorHint.NO_SUPPORT})},_resetMedia:function(){this._resetStatus();this._updateButtons(!1);this._updateInterface();this._seeked();this.internal.poster.jq.hide();clearTimeout(this.internal.htmlDlyCmdId);this.html.active?this._html_resetMedia():this.flash.active&&this._flash_resetMedia()},clearMedia:function(){this._resetMedia();
this.html.active?this._html_clearMedia():this.flash.active&&this._flash_clearMedia();this._resetGate();this._resetActive()},load:function(){this.status.srcSet?this.html.active?this._html_load():this.flash.active&&this._flash_load():this._urlNotSetError("load")},focus:function(){this.options.keyEnabled&&(b.jPlayer.focus=this)},play:function(a){a="number"===typeof a?a:NaN;this.status.srcSet?(this.focus(),this.html.active?this._html_play(a):this.flash.active&&this._flash_play(a)):this._urlNotSetError("play")},
videoPlay:function(){this.play()},pause:function(a){a="number"===typeof a?a:NaN;this.status.srcSet?this.html.active?this._html_pause(a):this.flash.active&&this._flash_pause(a):this._urlNotSetError("pause")},tellOthers:function(a,c){var d=this,e="function"===typeof c,g=Array.prototype.slice.call(arguments);"string"===typeof a&&(e&&g.splice(1,1),b.each(this.instances,function(){d.element!==this&&(e&&!c.call(this.data("jPlayer"),d)||this.jPlayer.apply(this,g))}))},pauseOthers:function(a){this.tellOthers("pause",
function(){return this.status.srcSet},a)},stop:function(){this.status.srcSet?this.html.active?this._html_pause(0):this.flash.active&&this._flash_pause(0):this._urlNotSetError("stop")},playHead:function(a){a=this._limitValue(a,0,100);this.status.srcSet?this.html.active?this._html_playHead(a):this.flash.active&&this._flash_playHead(a):this._urlNotSetError("playHead")},_muted:function(a){this.mutedWorker(a);this.options.globalVolume&&this.tellOthers("mutedWorker",function(){return this.options.globalVolume},
a)},mutedWorker:function(a){this.options.muted=a;this.html.used&&this._html_setProperty("muted",a);this.flash.used&&this._flash_mute(a);this.html.video.gate||this.html.audio.gate||(this._updateMute(a),this._updateVolume(this.options.volume),this._trigger(b.jPlayer.event.volumechange))},mute:function(a){a=a===f?!0:!!a;this._muted(a)},unmute:function(a){a=a===f?!0:!!a;this._muted(!a)},_updateMute:function(a){a===f&&(a=this.options.muted);this.css.jq.mute.length&&this.css.jq.unmute.length&&(this.status.noVolume?
(this.css.jq.mute.hide(),this.css.jq.unmute.hide()):a?(this.css.jq.mute.hide(),this.css.jq.unmute.show()):(this.css.jq.mute.show(),this.css.jq.unmute.hide()))},volume:function(a){this.volumeWorker(a);this.options.globalVolume&&this.tellOthers("volumeWorker",function(){return this.options.globalVolume},a)},volumeWorker:function(a){a=this._limitValue(a,0,1);this.options.volume=a;this.html.used&&this._html_setProperty("volume",a);this.flash.used&&this._flash_volume(a);this.html.video.gate||this.html.audio.gate||
(this._updateVolume(a),this._trigger(b.jPlayer.event.volumechange))},volumeBar:function(a){if(this.css.jq.volumeBar.length){var c=b(a.currentTarget),d=c.offset(),e=a.pageX-d.left,g=c.width();a=c.height()-a.pageY+d.top;c=c.height();this.options.verticalVolume?this.volume(a/c):this.volume(e/g)}this.options.muted&&this._muted(!1)},volumeBarValue:function(){},_updateVolume:function(a){a===f&&(a=this.options.volume);a=this.options.muted?0:a;this.status.noVolume?(this.css.jq.volumeBar.length&&this.css.jq.volumeBar.hide(),
this.css.jq.volumeBarValue.length&&this.css.jq.volumeBarValue.hide(),this.css.jq.volumeMax.length&&this.css.jq.volumeMax.hide()):(this.css.jq.volumeBar.length&&this.css.jq.volumeBar.show(),this.css.jq.volumeBarValue.length&&(this.css.jq.volumeBarValue.show(),this.css.jq.volumeBarValue[this.options.verticalVolume?"height":"width"](100*a+"%")),this.css.jq.volumeMax.length&&this.css.jq.volumeMax.show())},volumeMax:function(){this.volume(1);this.options.muted&&this._muted(!1)},_cssSelectorAncestor:function(a){var c=
this;this.options.cssSelectorAncestor=a;this._removeUiClass();this.ancestorJq=a?b(a):[];a&&1!==this.ancestorJq.length&&this._warning({type:b.jPlayer.warning.CSS_SELECTOR_COUNT,context:a,message:b.jPlayer.warningMsg.CSS_SELECTOR_COUNT+this.ancestorJq.length+" found for cssSelectorAncestor.",hint:b.jPlayer.warningHint.CSS_SELECTOR_COUNT});this._addUiClass();b.each(this.options.cssSelector,function(a,b){c._cssSelector(a,b)});this._updateInterface();this._updateButtons();this._updateAutohide();this._updateVolume();
this._updateMute()},_cssSelector:function(a,c){var d=this;"string"===typeof c?b.jPlayer.prototype.options.cssSelector[a]?(this.css.jq[a]&&this.css.jq[a].length&&this.css.jq[a].unbind(".jPlayer"),this.options.cssSelector[a]=c,this.css.cs[a]=this.options.cssSelectorAncestor+" "+c,this.css.jq[a]=c?b(this.css.cs[a]):[],this.css.jq[a].length&&this.css.jq[a].bind("click.jPlayer",function(c){c.preventDefault();d[a](c);b(this).blur()}),c&&1!==this.css.jq[a].length&&this._warning({type:b.jPlayer.warning.CSS_SELECTOR_COUNT,
context:this.css.cs[a],message:b.jPlayer.warningMsg.CSS_SELECTOR_COUNT+this.css.jq[a].length+" found for "+a+" method.",hint:b.jPlayer.warningHint.CSS_SELECTOR_COUNT})):this._warning({type:b.jPlayer.warning.CSS_SELECTOR_METHOD,context:a,message:b.jPlayer.warningMsg.CSS_SELECTOR_METHOD,hint:b.jPlayer.warningHint.CSS_SELECTOR_METHOD}):this._warning({type:b.jPlayer.warning.CSS_SELECTOR_STRING,context:c,message:b.jPlayer.warningMsg.CSS_SELECTOR_STRING,hint:b.jPlayer.warningHint.CSS_SELECTOR_STRING})},
seekBar:function(a){if(this.css.jq.seekBar.length){var c=b(a.currentTarget),d=c.offset();a=a.pageX-d.left;c=c.width();this.playHead(100*a/c)}},playBar:function(){},playbackRate:function(a){this._setOption("playbackRate",a)},playbackRateBar:function(a){if(this.css.jq.playbackRateBar.length){var c=b(a.currentTarget),d=c.offset(),e=a.pageX-d.left,g=c.width();a=c.height()-a.pageY+d.top;c=c.height();this.playbackRate((this.options.verticalPlaybackRate?a/c:e/g)*(this.options.maxPlaybackRate-this.options.minPlaybackRate)+
this.options.minPlaybackRate)}},playbackRateBarValue:function(){},_updatePlaybackRate:function(){var a=(this.options.playbackRate-this.options.minPlaybackRate)/(this.options.maxPlaybackRate-this.options.minPlaybackRate);this.status.playbackRateEnabled?(this.css.jq.playbackRateBar.length&&this.css.jq.playbackRateBar.show(),this.css.jq.playbackRateBarValue.length&&(this.css.jq.playbackRateBarValue.show(),this.css.jq.playbackRateBarValue[this.options.verticalPlaybackRate?"height":"width"](100*a+"%"))):
(this.css.jq.playbackRateBar.length&&this.css.jq.playbackRateBar.hide(),this.css.jq.playbackRateBarValue.length&&this.css.jq.playbackRateBarValue.hide())},repeat:function(){this._loop(!0)},repeatOff:function(){this._loop(!1)},_loop:function(a){this.options.loop!==a&&(this.options.loop=a,this._updateButtons(),this._trigger(b.jPlayer.event.repeat))},currentTime:function(){},duration:function(){},gui:function(){},noSolution:function(){},option:function(a,c){var d=a;if(0===arguments.length)return b.extend(!0,
{},this.options);if("string"===typeof a){var e=a.split(".");if(c===f){for(var d=b.extend(!0,{},this.options),g=0;g<e.length;g++)if(d[e[g]]!==f)d=d[e[g]];else return this._warning({type:b.jPlayer.warning.OPTION_KEY,context:a,message:b.jPlayer.warningMsg.OPTION_KEY,hint:b.jPlayer.warningHint.OPTION_KEY}),f;return d}for(var g=d={},h=0;h<e.length;h++)h<e.length-1?(g[e[h]]={},g=g[e[h]]):g[e[h]]=c}this._setOptions(d);return this},_setOptions:function(a){var c=this;b.each(a,function(a,b){c._setOption(a,
b)});return this},_setOption:function(a,c){var d=this;switch(a){case "volume":this.volume(c);break;case "muted":this._muted(c);break;case "globalVolume":this.options[a]=c;break;case "cssSelectorAncestor":this._cssSelectorAncestor(c);break;case "cssSelector":b.each(c,function(a,c){d._cssSelector(a,c)});break;case "playbackRate":this.options[a]=c=this._limitValue(c,this.options.minPlaybackRate,this.options.maxPlaybackRate);this.html.used&&this._html_setProperty("playbackRate",c);this._updatePlaybackRate();
break;case "defaultPlaybackRate":this.options[a]=c=this._limitValue(c,this.options.minPlaybackRate,this.options.maxPlaybackRate);this.html.used&&this._html_setProperty("defaultPlaybackRate",c);this._updatePlaybackRate();break;case "minPlaybackRate":this.options[a]=c=this._limitValue(c,0.1,this.options.maxPlaybackRate-0.1);this._updatePlaybackRate();break;case "maxPlaybackRate":this.options[a]=c=this._limitValue(c,this.options.minPlaybackRate+0.1,16);this._updatePlaybackRate();break;case "fullScreen":if(this.options[a]!==
c){var e=b.jPlayer.nativeFeatures.fullscreen.used.webkitVideo;if(!e||e&&!this.status.waitForPlay)e||(this.options[a]=c),c?this._requestFullscreen():this._exitFullscreen(),e||this._setOption("fullWindow",c)}break;case "fullWindow":this.options[a]!==c&&(this._removeUiClass(),this.options[a]=c,this._refreshSize());break;case "size":this.options.fullWindow||this.options[a].cssClass===c.cssClass||this._removeUiClass();this.options[a]=b.extend({},this.options[a],c);this._refreshSize();break;case "sizeFull":this.options.fullWindow&&
this.options[a].cssClass!==c.cssClass&&this._removeUiClass();this.options[a]=b.extend({},this.options[a],c);this._refreshSize();break;case "autohide":this.options[a]=b.extend({},this.options[a],c);this._updateAutohide();break;case "loop":this._loop(c);break;case "nativeVideoControls":this.options[a]=b.extend({},this.options[a],c);this.status.nativeVideoControls=this._uaBlocklist(this.options.nativeVideoControls);this._restrictNativeVideoControls();this._updateNativeVideoControls();break;case "noFullWindow":this.options[a]=
b.extend({},this.options[a],c);this.status.nativeVideoControls=this._uaBlocklist(this.options.nativeVideoControls);this.status.noFullWindow=this._uaBlocklist(this.options.noFullWindow);this._restrictNativeVideoControls();this._updateButtons();break;case "noVolume":this.options[a]=b.extend({},this.options[a],c);this.status.noVolume=this._uaBlocklist(this.options.noVolume);this._updateVolume();this._updateMute();break;case "emulateHtml":this.options[a]!==c&&((this.options[a]=c)?this._emulateHtmlBridge():
this._destroyHtmlBridge());break;case "timeFormat":this.options[a]=b.extend({},this.options[a],c);break;case "keyEnabled":this.options[a]=c;c||this!==b.jPlayer.focus||(b.jPlayer.focus=null);break;case "keyBindings":this.options[a]=b.extend(!0,{},this.options[a],c);break;case "audioFullScreen":this.options[a]=c}return this},_refreshSize:function(){this._setSize();this._addUiClass();this._updateSize();this._updateButtons();this._updateAutohide();this._trigger(b.jPlayer.event.resize)},_setSize:function(){this.options.fullWindow?
(this.status.width=this.options.sizeFull.width,this.status.height=this.options.sizeFull.height,this.status.cssClass=this.options.sizeFull.cssClass):(this.status.width=this.options.size.width,this.status.height=this.options.size.height,this.status.cssClass=this.options.size.cssClass);this.element.css({width:this.status.width,height:this.status.height})},_addUiClass:function(){this.ancestorJq.length&&this.ancestorJq.addClass(this.status.cssClass)},_removeUiClass:function(){this.ancestorJq.length&&this.ancestorJq.removeClass(this.status.cssClass)},
_updateSize:function(){this.internal.poster.jq.css({width:this.status.width,height:this.status.height});!this.status.waitForPlay&&this.html.active&&this.status.video||this.html.video.available&&this.html.used&&this.status.nativeVideoControls?this.internal.video.jq.css({width:this.status.width,height:this.status.height}):!this.status.waitForPlay&&this.flash.active&&this.status.video&&this.internal.flash.jq.css({width:this.status.width,height:this.status.height})},_updateAutohide:function(){var a=this,
c=function(){a.css.jq.gui.fadeIn(a.options.autohide.fadeIn,function(){clearTimeout(a.internal.autohideId);a.internal.autohideId=setTimeout(function(){a.css.jq.gui.fadeOut(a.options.autohide.fadeOut)},a.options.autohide.hold)})};this.css.jq.gui.length&&(this.css.jq.gui.stop(!0,!0),clearTimeout(this.internal.autohideId),this.element.unbind(".jPlayerAutohide"),this.css.jq.gui.unbind(".jPlayerAutohide"),this.status.nativeVideoControls?this.css.jq.gui.hide():this.options.fullWindow&&this.options.autohide.full||
!this.options.fullWindow&&this.options.autohide.restored?(this.element.bind("mousemove.jPlayer.jPlayerAutohide",c),this.css.jq.gui.bind("mousemove.jPlayer.jPlayerAutohide",c),this.css.jq.gui.hide()):this.css.jq.gui.show())},fullScreen:function(){this._setOption("fullScreen",!0)},restoreScreen:function(){this._setOption("fullScreen",!1)},_fullscreenAddEventListeners:function(){var a=this,c=b.jPlayer.nativeFeatures.fullscreen;c.api.fullscreenEnabled&&c.event.fullscreenchange&&("function"!==typeof this.internal.fullscreenchangeHandler&&
(this.internal.fullscreenchangeHandler=function(){a._fullscreenchange()}),document.addEventListener(c.event.fullscreenchange,this.internal.fullscreenchangeHandler,!1))},_fullscreenRemoveEventListeners:function(){var a=b.jPlayer.nativeFeatures.fullscreen;this.internal.fullscreenchangeHandler&&document.addEventListener(a.event.fullscreenchange,this.internal.fullscreenchangeHandler,!1)},_fullscreenchange:function(){this.options.fullScreen&&!b.jPlayer.nativeFeatures.fullscreen.api.fullscreenElement()&&
this._setOption("fullScreen",!1)},_requestFullscreen:function(){var a=this.ancestorJq.length?this.ancestorJq[0]:this.element[0],c=b.jPlayer.nativeFeatures.fullscreen;c.used.webkitVideo&&(a=this.htmlElement.video);c.api.fullscreenEnabled&&c.api.requestFullscreen(a)},_exitFullscreen:function(){var a=b.jPlayer.nativeFeatures.fullscreen,c;a.used.webkitVideo&&(c=this.htmlElement.video);a.api.fullscreenEnabled&&a.api.exitFullscreen(c)},_html_initMedia:function(a){var c=b(this.htmlElement.media).empty();
b.each(a.track||[],function(a,b){var g=document.createElement("track");g.setAttribute("kind",b.kind?b.kind:"");g.setAttribute("src",b.src?b.src:"");g.setAttribute("srclang",b.srclang?b.srclang:"");g.setAttribute("label",b.label?b.label:"");b.def&&g.setAttribute("default",b.def);c.append(g)});this.htmlElement.media.src=this.status.src;"none"!==this.options.preload&&this._html_load();this._trigger(b.jPlayer.event.timeupdate)},_html_setFormat:function(a){var c=this;b.each(this.formats,function(b,e){if(c.html.support[e]&&
a[e])return c.status.src=a[e],c.status.format[e]=!0,c.status.formatType=e,!1})},_html_setAudio:function(a){this._html_setFormat(a);this.htmlElement.media=this.htmlElement.audio;this._html_initMedia(a)},_html_setVideo:function(a){this._html_setFormat(a);this.status.nativeVideoControls&&(this.htmlElement.video.poster=this._validString(a.poster)?a.poster:"");this.htmlElement.media=this.htmlElement.video;this._html_initMedia(a)},_html_resetMedia:function(){this.htmlElement.media&&(this.htmlElement.media.id!==
this.internal.video.id||this.status.nativeVideoControls||this.internal.video.jq.css({width:"0px",height:"0px"}),this.htmlElement.media.pause())},_html_clearMedia:function(){this.htmlElement.media&&(this.htmlElement.media.src="about:blank",this.htmlElement.media.load())},_html_load:function(){this.status.waitForLoad&&(this.status.waitForLoad=!1,this.htmlElement.media.load());clearTimeout(this.internal.htmlDlyCmdId)},_html_play:function(a){var b=this,d=this.htmlElement.media;this._html_load();if(isNaN(a))d.play();
else{this.internal.cmdsIgnored&&d.play();try{if(!d.seekable||"object"===typeof d.seekable&&0<d.seekable.length)d.currentTime=a,d.play();else throw 1;}catch(e){this.internal.htmlDlyCmdId=setTimeout(function(){b.play(a)},250);return}}this._html_checkWaitForPlay()},_html_pause:function(a){var b=this,d=this.htmlElement.media;0<a?this._html_load():clearTimeout(this.internal.htmlDlyCmdId);d.pause();if(!isNaN(a))try{if(!d.seekable||"object"===typeof d.seekable&&0<d.seekable.length)d.currentTime=a;else throw 1;
}catch(e){this.internal.htmlDlyCmdId=setTimeout(function(){b.pause(a)},250);return}0<a&&this._html_checkWaitForPlay()},_html_playHead:function(a){var b=this,d=this.htmlElement.media;this._html_load();try{if("object"===typeof d.seekable&&0<d.seekable.length)d.currentTime=a*d.seekable.end(d.seekable.length-1)/100;else if(0<d.duration&&!isNaN(d.duration))d.currentTime=a*d.duration/100;else throw"e";}catch(e){this.internal.htmlDlyCmdId=setTimeout(function(){b.playHead(a)},250);return}this.status.waitForLoad||
this._html_checkWaitForPlay()},_html_checkWaitForPlay:function(){this.status.waitForPlay&&(this.status.waitForPlay=!1,this.css.jq.videoPlay.length&&this.css.jq.videoPlay.hide(),this.status.video&&(this.internal.poster.jq.hide(),this.internal.video.jq.css({width:this.status.width,height:this.status.height})))},_html_setProperty:function(a,b){this.html.audio.available&&(this.htmlElement.audio[a]=b);this.html.video.available&&(this.htmlElement.video[a]=b)},_flash_setAudio:function(a){var c=this;try{b.each(this.formats,
function(b,d){if(c.flash.support[d]&&a[d]){switch(d){case "m4a":case "fla":c._getMovie().fl_setAudio_m4a(a[d]);break;case "mp3":c._getMovie().fl_setAudio_mp3(a[d]);break;case "rtmpa":c._getMovie().fl_setAudio_rtmp(a[d])}c.status.src=a[d];c.status.format[d]=!0;c.status.formatType=d;return!1}}),"auto"===this.options.preload&&(this._flash_load(),this.status.waitForLoad=!1)}catch(d){this._flashError(d)}},_flash_setVideo:function(a){var c=this;try{b.each(this.formats,function(b,d){if(c.flash.support[d]&&
a[d]){switch(d){case "m4v":case "flv":c._getMovie().fl_setVideo_m4v(a[d]);break;case "rtmpv":c._getMovie().fl_setVideo_rtmp(a[d])}c.status.src=a[d];c.status.format[d]=!0;c.status.formatType=d;return!1}}),"auto"===this.options.preload&&(this._flash_load(),this.status.waitForLoad=!1)}catch(d){this._flashError(d)}},_flash_resetMedia:function(){this.internal.flash.jq.css({width:"0px",height:"0px"});this._flash_pause(NaN)},_flash_clearMedia:function(){try{this._getMovie().fl_clearMedia()}catch(a){this._flashError(a)}},
_flash_load:function(){try{this._getMovie().fl_load()}catch(a){this._flashError(a)}this.status.waitForLoad=!1},_flash_play:function(a){try{this._getMovie().fl_play(a)}catch(b){this._flashError(b)}this.status.waitForLoad=!1;this._flash_checkWaitForPlay()},_flash_pause:function(a){try{this._getMovie().fl_pause(a)}catch(b){this._flashError(b)}0<a&&(this.status.waitForLoad=!1,this._flash_checkWaitForPlay())},_flash_playHead:function(a){try{this._getMovie().fl_play_head(a)}catch(b){this._flashError(b)}this.status.waitForLoad||
this._flash_checkWaitForPlay()},_flash_checkWaitForPlay:function(){this.status.waitForPlay&&(this.status.waitForPlay=!1,this.css.jq.videoPlay.length&&this.css.jq.videoPlay.hide(),this.status.video&&(this.internal.poster.jq.hide(),this.internal.flash.jq.css({width:this.status.width,height:this.status.height})))},_flash_volume:function(a){try{this._getMovie().fl_volume(a)}catch(b){this._flashError(b)}},_flash_mute:function(a){try{this._getMovie().fl_mute(a)}catch(b){this._flashError(b)}},_getMovie:function(){return document[this.internal.flash.id]},
_getFlashPluginVersion:function(){var a=0,b;if(window.ActiveXObject)try{if(b=new ActiveXObject("ShockwaveFlash.ShockwaveFlash")){var d=b.GetVariable("$version");d&&(d=d.split(" ")[1].split(","),a=parseInt(d[0],10)+"."+parseInt(d[1],10))}}catch(e){}else navigator.plugins&&0<navigator.mimeTypes.length&&(b=navigator.plugins["Shockwave Flash"])&&(a=navigator.plugins["Shockwave Flash"].description.replace(/.*\s(\d+\.\d+).*/,"$1"));return 1*a},_checkForFlash:function(a){var b=!1;this._getFlashPluginVersion()>=
a&&(b=!0);return b},_validString:function(a){return a&&"string"===typeof a},_limitValue:function(a,b,d){return a<b?b:a>d?d:a},_urlNotSetError:function(a){this._error({type:b.jPlayer.error.URL_NOT_SET,context:a,message:b.jPlayer.errorMsg.URL_NOT_SET,hint:b.jPlayer.errorHint.URL_NOT_SET})},_flashError:function(a){var c;c=this.internal.ready?"FLASH_DISABLED":"FLASH";this._error({type:b.jPlayer.error[c],context:this.internal.flash.swf,message:b.jPlayer.errorMsg[c]+a.message,hint:b.jPlayer.errorHint[c]});
this.internal.flash.jq.css({width:"1px",height:"1px"})},_error:function(a){this._trigger(b.jPlayer.event.error,a);this.options.errorAlerts&&this._alert("Error!"+(a.message?"\n"+a.message:"")+(a.hint?"\n"+a.hint:"")+"\nContext: "+a.context)},_warning:function(a){this._trigger(b.jPlayer.event.warning,f,a);this.options.warningAlerts&&this._alert("Warning!"+(a.message?"\n"+a.message:"")+(a.hint?"\n"+a.hint:"")+"\nContext: "+a.context)},_alert:function(a){a="jPlayer "+this.version.script+" : id='"+this.internal.self.id+
"' : "+a;this.options.consoleAlerts?console&&console.log&&console.log(a):alert(a)},_emulateHtmlBridge:function(){var a=this;b.each(b.jPlayer.emulateMethods.split(/\s+/g),function(b,d){a.internal.domNode[d]=function(b){a[d](b)}});b.each(b.jPlayer.event,function(c,d){var e=!0;b.each(b.jPlayer.reservedEvent.split(/\s+/g),function(a,b){if(b===c)return e=!1});e&&a.element.bind(d+".jPlayer.jPlayerHtml",function(){a._emulateHtmlUpdate();var b=document.createEvent("Event");b.initEvent(c,!1,!0);a.internal.domNode.dispatchEvent(b)})})},
_emulateHtmlUpdate:function(){var a=this;b.each(b.jPlayer.emulateStatus.split(/\s+/g),function(b,d){a.internal.domNode[d]=a.status[d]});b.each(b.jPlayer.emulateOptions.split(/\s+/g),function(b,d){a.internal.domNode[d]=a.options[d]})},_destroyHtmlBridge:function(){var a=this;this.element.unbind(".jPlayerHtml");b.each((b.jPlayer.emulateMethods+" "+b.jPlayer.emulateStatus+" "+b.jPlayer.emulateOptions).split(/\s+/g),function(b,d){delete a.internal.domNode[d]})}};b.jPlayer.error={FLASH:"e_flash",FLASH_DISABLED:"e_flash_disabled",
NO_SOLUTION:"e_no_solution",NO_SUPPORT:"e_no_support",URL:"e_url",URL_NOT_SET:"e_url_not_set",VERSION:"e_version"};b.jPlayer.errorMsg={FLASH:"jPlayer's Flash fallback is not configured correctly, or a command was issued before the jPlayer Ready event. Details: ",FLASH_DISABLED:"jPlayer's Flash fallback has been disabled by the browser due to the CSS rules you have used. Details: ",NO_SOLUTION:"No solution can be found by jPlayer in this browser. Neither HTML nor Flash can be used.",NO_SUPPORT:"It is not possible to play any media format provided in setMedia() on this browser using your current options.",
URL:"Media URL could not be loaded.",URL_NOT_SET:"Attempt to issue media playback commands, while no media url is set.",VERSION:"jPlayer "+b.jPlayer.prototype.version.script+" needs Jplayer.swf version "+b.jPlayer.prototype.version.needFlash+" but found "};b.jPlayer.errorHint={FLASH:"Check your swfPath option and that Jplayer.swf is there.",FLASH_DISABLED:"Check that you have not display:none; the jPlayer entity or any ancestor.",NO_SOLUTION:"Review the jPlayer options: support and supplied.",NO_SUPPORT:"Video or audio formats defined in the supplied option are missing.",
URL:"Check media URL is valid.",URL_NOT_SET:"Use setMedia() to set the media URL.",VERSION:"Update jPlayer files."};b.jPlayer.warning={CSS_SELECTOR_COUNT:"e_css_selector_count",CSS_SELECTOR_METHOD:"e_css_selector_method",CSS_SELECTOR_STRING:"e_css_selector_string",OPTION_KEY:"e_option_key"};b.jPlayer.warningMsg={CSS_SELECTOR_COUNT:"The number of css selectors found did not equal one: ",CSS_SELECTOR_METHOD:"The methodName given in jPlayer('cssSelector') is not a valid jPlayer method.",CSS_SELECTOR_STRING:"The methodCssSelector given in jPlayer('cssSelector') is not a String or is empty.",
OPTION_KEY:"The option requested in jPlayer('option') is undefined."};b.jPlayer.warningHint={CSS_SELECTOR_COUNT:"Check your css selector and the ancestor.",CSS_SELECTOR_METHOD:"Check your method name.",CSS_SELECTOR_STRING:"Check your css selector is a string.",OPTION_KEY:"Check your option name."}});//	SWFObject v2.0 <http://code.google.com/p/swfobject/>
var swfobject=function(){var UNDEF="undefined",OBJECT="object",SHOCKWAVE_FLASH="Shockwave Flash",SHOCKWAVE_FLASH_AX="ShockwaveFlash.ShockwaveFlash",FLASH_MIME_TYPE="application/x-shockwave-flash",EXPRESS_INSTALL_ID="SWFObjectExprInst",win=window,doc=document,nav=navigator,domLoadFnArr=[],regObjArr=[],timer=null,storedAltContent=null,storedAltContentId=null,isDomLoaded=false,isExpressInstallActive=false;var ua=function(){var w3cdom=typeof doc.getElementById!=UNDEF&&typeof doc.getElementsByTagName!=UNDEF&&typeof doc.createElement!=UNDEF&&typeof doc.appendChild!=UNDEF&&typeof doc.replaceChild!=UNDEF&&typeof doc.removeChild!=UNDEF&&typeof doc.cloneNode!=UNDEF,playerVersion=[0,0,0],d=null;if(typeof nav.plugins!=UNDEF&&typeof nav.plugins[SHOCKWAVE_FLASH]==OBJECT){d=nav.plugins[SHOCKWAVE_FLASH].description;if(d){d=d.replace(/^.*\s+(\S+\s+\S+$)/,"$1");playerVersion[0]=parseInt(d.replace(/^(.*)\..*$/,"$1"),10);playerVersion[1]=parseInt(d.replace(/^.*\.(.*)\s.*$/,"$1"),10);playerVersion[2]=/r/.test(d)?parseInt(d.replace(/^.*r(.*)$/,"$1"),10):0}}else{if(typeof win.ActiveXObject!=UNDEF){var a=null,fp6Crash=false;try{a=new ActiveXObject(SHOCKWAVE_FLASH_AX+".7")}catch(e){try{a=new ActiveXObject(SHOCKWAVE_FLASH_AX+".6");playerVersion=[6,0,21];a.AllowScriptAccess="always"}catch(e){if(playerVersion[0]==6){fp6Crash=true}}if(!fp6Crash){try{a=new ActiveXObject(SHOCKWAVE_FLASH_AX)}catch(e){}}}if(!fp6Crash&&a){try{d=a.GetVariable("$version");if(d){d=d.split(" ")[1].split(",");playerVersion=[parseInt(d[0],10),parseInt(d[1],10),parseInt(d[2],10)]}}catch(e){}}}}var u=nav.userAgent.toLowerCase(),p=nav.platform.toLowerCase(),webkit=/webkit/.test(u)?parseFloat(u.replace(/^.*webkit\/(\d+(\.\d+)?).*$/,"$1")):false,ie=false,windows=p?/win/.test(p):/win/.test(u),mac=p?/mac/.test(p):/mac/.test(u);
return{w3cdom:w3cdom,pv:playerVersion,webkit:webkit,ie:ie,win:windows,mac:mac}}();var onDomLoad=function(){if(!ua.w3cdom){return}addDomLoadEvent(main);if(ua.ie&&ua.win){try{doc.write("<scr"+"ipt id=__ie_ondomload defer=true src=//:></scr"+"ipt>");var s=getElementById("__ie_ondomload");if(s){s.onreadystatechange=function(){if(this.readyState=="complete"){this.parentNode.removeChild(this);callDomLoadFunctions()}}}}catch(e){}}if((typeof doc.readyState!=UNDEF)){timer=setInterval(function(){if(/loaded|complete/.test(doc.readyState)){callDomLoadFunctions()}},10)}if(typeof doc.addEventListener!=UNDEF){doc.addEventListener("DOMContentLoaded",callDomLoadFunctions,null)}addLoadEvent(callDomLoadFunctions)}();function callDomLoadFunctions(){if(isDomLoaded){return}if(ua.ie&&ua.win){var s=createElement("span");try{var t=doc.getElementsByTagName("body")[0].appendChild(s);t.parentNode.removeChild(t)}catch(e){return}}isDomLoaded=true;if(timer){clearInterval(timer);timer=null}var dl=domLoadFnArr.length;for(var i=0;i<dl;i++){domLoadFnArr[i]()}}function addDomLoadEvent(fn){if(isDomLoaded){fn()}else{domLoadFnArr[domLoadFnArr.length]=fn}}function addLoadEvent(fn){if(typeof win.addEventListener!=UNDEF){win.addEventListener("load",fn,false)}else{if(typeof doc.addEventListener!=UNDEF){doc.addEventListener("load",fn,false)}else{if(typeof win.attachEvent!=UNDEF){win.attachEvent("onload",fn)}else{if(typeof win.onload=="function"){var fnOld=win.onload;win.onload=function(){fnOld();fn()}}else{win.onload=fn}}}}}function main(){var rl=regObjArr.length;for(var i=0;i<rl;i++){var id=regObjArr[i].id;if(ua.pv[0]>0){var obj=getElementById(id);if(obj){regObjArr[i].width=obj.getAttribute("width")?obj.getAttribute("width"):"0";regObjArr[i].height=obj.getAttribute("height")?obj.getAttribute("height"):"0";if(hasPlayerVersion(regObjArr[i].swfVersion)){if(ua.webkit&&ua.webkit<312){fixParams(obj)}setVisibility(id,true)}else{if(regObjArr[i].expressInstall&&!isExpressInstallActive&&hasPlayerVersion("6.0.65")&&(ua.win||ua.mac)){showExpressInstall(regObjArr[i])}else{displayAltContent(obj)}}}}else{setVisibility(id,true)}}}function fixParams(obj){var nestedObj=obj.getElementsByTagName(OBJECT)[0];if(nestedObj){var e=createElement("embed"),a=nestedObj.attributes;if(a){var al=a.length;for(var i=0;i<al;i++){if(a[i].nodeName.toLowerCase()=="data"){e.setAttribute("src",a[i].nodeValue)}else{e.setAttribute(a[i].nodeName,a[i].nodeValue)}}}var c=nestedObj.childNodes;if(c){var cl=c.length;for(var j=0;j<cl;j++){if(c[j].nodeType==1&&c[j].nodeName.toLowerCase()=="param"){e.setAttribute(c[j].getAttribute("name"),c[j].getAttribute("value"))}}}obj.parentNode.replaceChild(e,obj)}}function fixObjectLeaks(id){if(ua.ie&&ua.win&&hasPlayerVersion("8.0.0")){win.attachEvent("onunload",function(){var obj=getElementById(id);if(obj){for(var i in obj){if(typeof obj[i]=="function"){obj[i]=function(){}
}}obj.parentNode.removeChild(obj)}})}}function showExpressInstall(regObj){isExpressInstallActive=true;var obj=getElementById(regObj.id);if(obj){if(regObj.altContentId){var ac=getElementById(regObj.altContentId);if(ac){storedAltContent=ac;storedAltContentId=regObj.altContentId}}else{storedAltContent=abstractAltContent(obj)}if(!(/%$/.test(regObj.width))&&parseInt(regObj.width,10)<310){regObj.width="310"}if(!(/%$/.test(regObj.height))&&parseInt(regObj.height,10)<137){regObj.height="137"}doc.title=doc.title.slice(0,47)+" - Flash Player Installation";var pt=ua.ie&&ua.win?"ActiveX":"PlugIn",dt=doc.title,fv="MMredirectURL="+win.location+"&MMplayerType="+pt+"&MMdoctitle="+dt,replaceId=regObj.id;if(ua.ie&&ua.win&&obj.readyState!=4){var newObj=createElement("div");replaceId+="SWFObjectNew";newObj.setAttribute("id",replaceId);obj.parentNode.insertBefore(newObj,obj);obj.style.display="none";win.attachEvent("onload",function(){obj.parentNode.removeChild(obj)})}createSWF({data:regObj.expressInstall,id:EXPRESS_INSTALL_ID,width:regObj.width,height:regObj.height},{flashvars:fv},replaceId)}}function displayAltContent(obj){if(ua.ie&&ua.win&&obj.readyState!=4){var el=createElement("div");obj.parentNode.insertBefore(el,obj);el.parentNode.replaceChild(abstractAltContent(obj),el);obj.style.display="none";win.attachEvent("onload",function(){obj.parentNode.removeChild(obj)})}else{obj.parentNode.replaceChild(abstractAltContent(obj),obj)}}function abstractAltContent(obj){var ac=createElement("div");if(ua.win&&ua.ie){ac.innerHTML=obj.innerHTML}else{var nestedObj=obj.getElementsByTagName(OBJECT)[0];if(nestedObj){var c=nestedObj.childNodes;if(c){var cl=c.length;for(var i=0;i<cl;i++){if(!(c[i].nodeType==1&&c[i].nodeName.toLowerCase()=="param")&&!(c[i].nodeType==8)){ac.appendChild(c[i].cloneNode(true))}}}}}return ac}function createSWF(attObj,parObj,id){var r,el=getElementById(id);if(typeof attObj.id==UNDEF){attObj.id=id}if(ua.ie&&ua.win){var att="";for(var i in attObj){if(attObj[i]!=Object.prototype[i]){if(i=="data"){parObj.movie=attObj[i]}else{if(i.toLowerCase()=="styleclass"){att+=' class="'+attObj[i]+'"'}else{if(i!="classid"){att+=" "+i+'="'+attObj[i]+'"'}}}}}var par="";for(var j in parObj){if(parObj[j]!=Object.prototype[j]){par+='<param name="'+j+'" value="'+parObj[j]+'" />'}}el.outerHTML='<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"'+att+">"+par+"</object>";fixObjectLeaks(attObj.id);r=getElementById(attObj.id)}else{if(ua.webkit&&ua.webkit<312){var e=createElement("embed");e.setAttribute("type",FLASH_MIME_TYPE);for(var k in attObj){if(attObj[k]!=Object.prototype[k]){if(k=="data"){e.setAttribute("src",attObj[k])}else{if(k.toLowerCase()=="styleclass"){e.setAttribute("class",attObj[k])}else{if(k!="classid"){e.setAttribute(k,attObj[k])}}}}}for(var l in parObj){if(parObj[l]!=Object.prototype[l]){if(l!="movie"){e.setAttribute(l,parObj[l])}}}el.parentNode.replaceChild(e,el);r=e}else{var o=createElement(OBJECT);o.setAttribute("type",FLASH_MIME_TYPE);for(var m in attObj){if(attObj[m]!=Object.prototype[m]){if(m.toLowerCase()=="styleclass"){o.setAttribute("class",attObj[m])}else{if(m!="classid"){o.setAttribute(m,attObj[m])}}}}for(var n in parObj){if(parObj[n]!=Object.prototype[n]&&n!="movie"){createObjParam(o,n,parObj[n])}}el.parentNode.replaceChild(o,el);r=o}}return r}function createObjParam(el,pName,pValue){var p=createElement("param");p.setAttribute("name",pName);p.setAttribute("value",pValue);el.appendChild(p)}function getElementById(id){return doc.getElementById(id)}function createElement(el){return doc.createElement(el)}function hasPlayerVersion(rv){var pv=ua.pv,v=rv.split(".");v[0]=parseInt(v[0],10);v[1]=parseInt(v[1],10);v[2]=parseInt(v[2],10);return(pv[0]>v[0]||(pv[0]==v[0]&&pv[1]>v[1])||(pv[0]==v[0]&&pv[1]==v[1]&&pv[2]>=v[2]))?true:false}function createCSS(sel,decl){if(ua.ie&&ua.mac){return}var h=doc.getElementsByTagName("head")[0],s=createElement("style");s.setAttribute("type","text/css");s.setAttribute("media","screen");if(!(ua.ie&&ua.win)&&typeof doc.createTextNode!=UNDEF){s.appendChild(doc.createTextNode(sel+" {"+decl+"}"))}h.appendChild(s);if(ua.ie&&ua.win&&typeof doc.styleSheets!=UNDEF&&doc.styleSheets.length>0){var ls=doc.styleSheets[doc.styleSheets.length-1];if(typeof ls.addRule==OBJECT){ls.addRule(sel,decl)}}}function setVisibility(id,isVisible){var v=isVisible?"inherit":"hidden";if(isDomLoaded){getElementById(id).style.visibility=v}else{createCSS("#"+id,"visibility:"+v)}}function getTargetVersion(obj){if(!obj){return 0}var c=obj.childNodes;var cl=c.length;for(var i=0;i<cl;i++){if(c[i].nodeType==1&&c[i].nodeName.toLowerCase()=="object"){c=c[i].childNodes;cl=c.length;i=0}if(c[i].nodeType==1&&c[i].nodeName.toLowerCase()=="param"&&c[i].getAttribute("name")=="swfversion"){return c[i].getAttribute("value")}}return 0}function getExpressInstall(obj){if(!obj){return""}var c=obj.childNodes;var cl=c.length;for(var i=0;i<cl;i++){if(c[i].nodeType==1&&c[i].nodeName.toLowerCase()=="object"){c=c[i].childNodes;cl=c.length;i=0}if(c[i].nodeType==1&&c[i].nodeName.toLowerCase()=="param"&&c[i].getAttribute("name")=="expressinstall"){return c[i].getAttribute("value")
}}return""}return{registerObject:function(objectIdStr,swfVersionStr,xiSwfUrlStr){if(!ua.w3cdom||!objectIdStr){return}var obj=document.getElementById(objectIdStr);var xi=getExpressInstall(obj);var regObj={};regObj.id=objectIdStr;regObj.swfVersion=swfVersionStr?swfVersionStr:getTargetVersion(obj);regObj.expressInstall=xiSwfUrlStr?xiSwfUrlStr:((xi!="")?xi:false);regObjArr[regObjArr.length]=regObj;setVisibility(objectIdStr,false)},getObjectById:function(objectIdStr){var r=null;if(ua.w3cdom&&isDomLoaded){var o=getElementById(objectIdStr);if(o){var n=o.getElementsByTagName(OBJECT)[0];if(!n||(n&&typeof o.SetVariable!=UNDEF)){r=o}else{if(typeof n.SetVariable!=UNDEF){r=n}}}}return r},embedSWF:function(swfUrlStr,replaceElemIdStr,widthStr,heightStr,swfVersionStr,xiSwfUrlStr,flashvarsObj,parObj,attObj){if(!ua.w3cdom||!swfUrlStr||!replaceElemIdStr||!widthStr||!heightStr||!swfVersionStr){return}widthStr+="";heightStr+="";if(hasPlayerVersion(swfVersionStr)){setVisibility(replaceElemIdStr,false);var att=(typeof attObj==OBJECT)?attObj:{};att.data=swfUrlStr;att.width=widthStr;att.height=heightStr;var par=(typeof parObj==OBJECT)?parObj:{};if(typeof flashvarsObj==OBJECT){for(var i in flashvarsObj){if(flashvarsObj[i]!=Object.prototype[i]){if(typeof par.flashvars!=UNDEF){par.flashvars+="&"+i+"="+flashvarsObj[i]}else{par.flashvars=i+"="+flashvarsObj[i]}}}}addDomLoadEvent(function(){createSWF(att,par,replaceElemIdStr);if(att.id==replaceElemIdStr){setVisibility(replaceElemIdStr,true)}})}else{if(xiSwfUrlStr&&!isExpressInstallActive&&hasPlayerVersion("6.0.65")&&(ua.win||ua.mac)){setVisibility(replaceElemIdStr,false);addDomLoadEvent(function(){var regObj={};regObj.id=regObj.altContentId=replaceElemIdStr;regObj.width=widthStr;regObj.height=heightStr;regObj.expressInstall=xiSwfUrlStr;showExpressInstall(regObj)})}}},getFlashPlayerVersion:function(){return{major:ua.pv[0],minor:ua.pv[1],release:ua.pv[2]}},hasFlashPlayerVersion:hasPlayerVersion,createSWF:function(attObj,parObj,replaceElemIdStr){if(ua.w3cdom&&isDomLoaded){return createSWF(attObj,parObj,replaceElemIdStr)}else{return undefined}},createCSS:function(sel,decl){if(ua.w3cdom){createCSS(sel,decl)}},addDomLoadEvent:addDomLoadEvent,addLoadEvent:addLoadEvent,getQueryParamValue:function(param){var q=doc.location.search||doc.location.hash;if(param==null){return q}if(q){var pairs=q.substring(1).split("&");for(var i=0;i<pairs.length;i++){if(pairs[i].substring(0,pairs[i].indexOf("="))==param){return pairs[i].substring((pairs[i].indexOf("=")+1))}}}return""},expressInstallCallback:function(){if(isExpressInstallActive&&storedAltContent){var obj=getElementById(EXPRESS_INSTALL_ID);if(obj){obj.parentNode.replaceChild(storedAltContent,obj);if(storedAltContentId){setVisibility(storedAltContentId,true);if(ua.ie&&ua.win){storedAltContent.style.display="block"}}storedAltContent=null;storedAltContentId=null;isExpressInstallActive=false}}}}}();//swffit v2.4 beta (2010/01/18) <http://swffit.millermedeiros.com/>
var swffit=function(){var win=window,doc=document,html=doc.getElementsByTagName("html")[0],AGENT=navigator.userAgent.toLowerCase(),WK=/webkit/.test(AGENT),IE=/msie/.test(AGENT)&&!win.opera,FF=/firefox/.test(AGENT)&&!win.opera,UNDEF="undefined",_ft,_re,_t,_mw,_mh,_xw,_xh,_hc,_vc,_ow,_oh;swfobject.createCSS("object","position:absolute; outline:none");function fit(t,mw,mh,xw,xh,hc,vc){mw=mw||_ow;mh=mh||_oh;xw=xw||null;xh=xh||null;hc=(hc||hc==null);vc=(vc||vc==null);configure({target:t,minWid:mw,minHei:mh,maxWid:xw,maxHei:xh,hCenter:hc,vCenter:vc})}function configure(o){var evalNum=function(v,p){return(typeof o[p]!=UNDEF)?o[p]:v},evalBool=function(v,p){return(o[p]||(v&&typeof o[p]==UNDEF))};_mw=evalNum(_mw,"minWid");_mh=evalNum(_mh,"minHei");_xw=evalNum(_xw,"maxWid");_xh=evalNum(_xh,"maxHei");_hc=evalBool(_hc,"hCenter");_vc=evalBool(_vc,"vCenter");if(o.target&&(o.target!=_t)){_t=o.target;swfobject.addDomLoadEvent(initFit);if(IE){swfobject.addLoadEvent(initFit)}}else{startFit()}}function initFit(){if(!html.style.overflowX){controlScroll(0,0)}if(!html.style.overflowY){controlScroll(0,1)}html.style.height=doc.body.style.height="100%";doc.body.style.margin=doc.body.style.padding=0;var st="width:100%; height:100%";st+=(IE)?"; overflow:hidden":"";swfobject.createCSS("#"+_t,st);_ft=doc.getElementById(_t);_ft=(_ft!=UNDEF&&FF&&/object/.test(_ft.innerHTML))?doc.getElementById(_t).getElementsByTagName("object")[0]:_ft;_ow=_ft.width;_oh=_ft.height;_mw=_mw||_ow;_mh=_mh||_oh;startFit()}function startFit(){setSize();if(!_re){swffit.addResizeEvent(setSize);_re=1}}function stopFit(w,h){if(_re){swffit.removeResizeEvent(setSize);_re=0;setStyle("top","auto");setStyle("left","auto");setStyle("marginTop",0);setStyle("marginLeft",0);w=w||"100%";h=h||"100%";setWidth(w);setHeight(h);forceRedraw()}}function forceRedraw(){if(WK){_ft.style.paddingBottom="1px";_ft.style.paddingBottom="0"}}function controlResizeEvent(a,fn){var p=(a)?["addEventListener","attachEvent"]:["removeEventListener","detachEvent"];if(win[p[0]]){win[p[0]]("resize",fn,false)}else{if(win[p[1]]){win[p[1]]("onresize",fn)}}}function setWidth(w){var v=(isNaN(w))?w:w+"px";setStyle("width",v)}function setHeight(h){var v=(isNaN(h))?h:h+"px";setStyle("height",v)}function setStyle(p,v){if(_ft){_ft.style[p]=v}}function setSize(){var iw=(win.innerWidth)?win.innerWidth:((doc.documentElement.clientWidth)?doc.documentElement.clientWidth:doc.body.clientWidth),ih=(win.innerHeight)?win.innerHeight:((doc.documentElement.clientHeight)?doc.documentElement.clientHeight:doc.body.clientHeight);iw-=(!IE&&ih<=_mh)?18:0;ih-=(!IE&&iw<=_mw)?18:0;if(_xw&&iw>=_xw){setWidth(_xw);setPosition(0,1)}else{if(iw>_mw&&(iw<_xw||!_xw)){setWidth("100%")}else{setWidth(_mw)}setPosition(0,0)}if(_xh&&ih>=_xh){setHeight(_xh);setPosition(1,1)}else{if(ih>_mh&&(ih<_xh||!_xh)){setHeight("100%")}else{setHeight(_mh)}setPosition(1,0)}forceRedraw()}function setPosition(t,x){var p,m;if(t){p=(x&&_vc)?"50%":"auto";m=(x&&_vc)?-(_xh*0.5)+"px":0;setStyle("top",p);setStyle("marginTop",m)}else{p=(x&&_hc)?"50%":"auto";m=(x&&_hc)?-(_xw*0.5)+"px":0;setStyle("left",p);setStyle("marginLeft",m)}}function controlScroll(s,v){var p=(v)?"overflowY":"overflowX";html.style[p]=(s)?"scroll":"auto"}function getValueOf(p){var o={target:_t,minWid:_mw,minHei:_mh,maxWid:_xw,maxHei:_xh,hCenter:_hc,vCenter:_vc};return o[p]}return{fit:fit,configure:configure,startFit:startFit,stopFit:stopFit,getValueOf:getValueOf,addResizeEvent:function(fn){controlResizeEvent(1,fn)},removeResizeEvent:function(fn){controlResizeEvent(0,fn)},showScrollH:function(){controlScroll(1,0)},showScrollV:function(){controlScroll(1,1)},getScrollTop:function(){return doc.body.scrollTop?doc.body.scrollTop:(win.pageYOffset?win.pageYOffset:(doc.body.parentElement?doc.body.parentElement.scrollTop:0))},getScrollLeft:function(){return doc.body.scrollLeft?doc.body.scrollLeft:(win.pageXOffset?win.pageXOffset:(doc.body.parentElement?doc.body.parentElement.scrollLeft:0))}}}();
(function($){
$.extend({
getObjectInArray:function(AArray,name,val){
for(var i=0;i<AArray.length;i++){
if(AArray[i][name]==val){
return AArray[i];
break;
}}
return null;
},
getDatagridTd:function(easyuiDatagrid,rowIndex,field){
var panel = easyuiDatagrid.datagrid('getPanel');
var td = panel.find('tr[datagrid-row-index="'+rowIndex+'"] td[field="'+field+'"]');
return td;
},
getDatagridLastTd:function(easyuiDatagrid,rowIndex){
var panel = easyuiDatagrid.datagrid('getPanel');
var td = panel.find('tr[datagrid-row-index="'+rowIndex+'"]:last  td:last');
return td;
},
getDatagridTr:function(easyuiDatagrid,rowIndex){
var panel = easyuiDatagrid.datagrid('getPanel');
var tr = panel.find('tr[datagrid-row-index="'+rowIndex+'"]:last');
return tr;
},
slideTo:function(obj,from,to,time,callback){
if(!obj){
return;
}
time=time||0.5;
from=from?from:{};
to.top=(to.top==0)?"0px":to.top;
to.left=(to.left==0)?"0px":to.left;
from.top=(from.top==0)?"0px":from.top;
from.left=(from.left==0)?"0px":from.left;
to.left?(from.left?obj.css({"left":from.left+(isNaN(from.left)?"":"px")}):null):null;
to.top?(from.top?obj.css({"top":from.top+(isNaN(from.top)?"":"px")}):null):null;
obj.stop(true).animate({"left":to.left+(isNaN(to.left)?"":"px"),"top":to.top+(isNaN(to.top)?"":"px")},time*1000,callback);
}
})
$.fn.disableSelect=function(){
$(this).css({"-webkit-user-select":"none","-moz-user-select": "none","-khtml-user-select": "none","user-select": "none"}).attr("unselectable","on");
}
$.fn.del=function(){
$(this).clear();
$(this).unbind().empty().remove();
}
$.fn.clear=function(){
$(this).each(function(){
var obj=$(this).get(0);
$("*",obj).add([obj]).each(function(){
$.event.remove(this);
$.removeData(this);
});
obj.innerHTML = "";
})
}
$.fn.enter=function(returnfunc){
$(this).unbind("keydown").bind("keydown",function(event){
if(event.keyCode==13){
returnfunc();
}
})
}
$.fn.changeValue=function(valObj){
var oldVal;
var input=$(this);
if(input.attr("type")=="radio"){
input.each(function(){
if($(this).get(0).checked){
oldVal=$(this).val();
}
})
}else if(input.attr("type")=="checkbox"){
input.each(function(){
if($(this).get(0).checked){
oldVal+=$(this).val()+",";
}
})
if(oldVal.length>1){
oldVal=oldVal.substr(0,oldVal.length-1);
}
if(typeof valObj=="object"){
oldVal=oldVal.split(",");
}
}else{
oldVal=input.val();
}
if(compare(valObj,oldVal)){
return;
}
if(input.attr("type")=="radio"){
var hasval=false;
if(typeof valObj=="object"){
valObj=valObj[0];
}
input.each(function(){
if($(this).get(0).value==valObj){
$(this).get(0).checked=true;
hasval=true;
$(this).change();
}else{
$(this).get(0).checked=false;
}
})
if(!hasval){
input.change();
}
}else if(input.attr("type")=="checkbox"){
if(typeof valObj=="string"){
valObj=valObj.split(",");
}
input.val(valObj).change();
}else{
input.val(valObj).change();
}}
$.fn.dataOptions=function(newoption,attrName){
attrName=attrName?attrName:"data-option";
if(newoption){
try{
var optionStr=JSON.stringify(newoption);
optionStr=optionStr.replace(/\"/g,"\'");
$(this).attr(attrName,optionStr);
}catch(e){
}
return;
}
var option={};
var optionStr=$(this).attr(attrName)+"";
try{
optionStr=optionStr.replace(/\'/g,"\"");
option=JSON.parse(optionStr);
}catch(e){
}
return option;
}
$.fn.getDataOptions=function(attrName){
return $(this).dataOptions(attrName);
}
$.fn.setRealSize=function(W,H){
$(this).each(function(){
if(W){
$(this).width(W-($(this).outerWidth(true)-$(this).width()));
}
if(H){
$(this).height(H-($(this).outerHeight(true)-$(this).height()));
}
});
return $(this);
}
$.fn.fillParent=function(){
$(this).each(function(){
var W=$(this).parent().width();
var H=$(this).parent().height();
$(this).setRealSize(W,H);
});
return $(this);
}
$.fn.centerInWindow=function(){
$(this).css({"left":Math.floor(($(window).width()-$(this).width())/2)+"px","top":Math.floor(($(window).height()-$(this).height())/2)+"px"});
return $(this);
}
$.fn.getCenter=function(){
var fromPos=$(this).offset();
var center=[Math.floor(fromPos.left+$(this).outerWidth(true)/2)-$(window).scrollLeft(),Math.floor(fromPos.top+$(this).outerHeight(true)/2)-$(window).scrollTop()];
return center;
}
$.fn.getBounce=function(){
var fromPos=$(this).offset();
var bounce={"x":Math.floor(fromPos.left-$(window).scrollLeft()),"y":Math.floor(fromPos.top-$(window).scrollTop()),"w":Math.floor($(this).outerWidth()),"h":Math.floor($(this).outerHeight())};
return bounce;
}
$.fn.getMinSize=function(){
var obj=$(this);
var minW=obj.css("min-width")+"";
var minH=obj.css("min-height")+"";
var w=obj.css("width")+"";
var h=obj.css("height")+"";
minW=parseInt(minW.replace("px",""))||0;
minH=parseInt(minH.replace("px",""))||0;
w=parseInt(w.replace("px",""))||0;
h=parseInt(h.replace("px",""))||0;
var flex=obj.get(0).style["flex"]+"";
var flexarr=flex.split(" ");
flex=flex?Number(flexarr[0])||0:0;
var flexminW=0;
if(flex && flex!="NaN"){
w=minW||0;
h=minH||0;
obj.css({"-ms-flex":flex+" "+(flexarr[1]||1)+" "+(flexarr[2]||"auto")}); 
if(flexarr[2]){
flexminW=parseInt(flexarr[2].replace("px",""));
w=Math.max(w,flexminW);
h=Math.max(h,flexminW);
}
}else{
w=Math.max(w,minW);
h=Math.max(h,minH);
}
return {"minw":w,"minh":h}
}
$.fn.fillFont=function(option){
$(this).each(function(){
var wraper=$(this);
if(wraper.data("fillfont")){
return;
}
var ff=new fillWraperFont(wraper,option);
wraper.data("fillfont",ff);
})
}
$.fn.resizeFillFont=function(){
$(this).each(function(){
var resizeFontFun=$(this).data("fillfont");
if(resizeFontFun && typeof resizeFontFun.resize=="function"){
resizeFontFun.resize();
}
});
}
$.fn.fitImg=function(){
$(this).each(function(){
var w=$(this).width();
var h=$(this).height();
var img=$(this).find(">img:eq(0)");
if(img.length==0){
return;
}
var Wrap;
if($(this).hasClass("fm_piccut")){
Wrap=$(this);
}else{
Wrap=$('<div class="fm_piccut"></div>');
img.after(Wrap)
Wrap.css("overflow","hidden").width(w).height(h);
Wrap.append(img);
}
if(img.get(0).complete){
imgFit(img,w,h);
}else{
img.one("load",function(){imgFit(img,w,h);}).one("error",function(){
img.remove();
Wrap.addClass("fm_imagerror");
});
img.get(0).src=img.get(0).src;
}
});
}
function imgFit(img,w,h){
img.css({"margin-top":"0px","margin-left":"0px"});
var img_w=img.width();
var img_h=img.height();
if(img_w>0 && img_h>0 && w>0 && h>0){
}else{
img.css({"width":"100%","height":"100%"});
return;
}
if(img_w==w || img_h==h){
return;
}
if (img_h*w/img_w>h){
img_h=Math.ceil(img_h*w/img_w);
img_w=w;
}else{
img_w=Math.ceil(img_w*h/img_h);
img_h=h;
}
var ml=Math.floor((w-img_w)/2)+"px";
var mt=Math.floor((h-img_h)/2)+"px";
img.height(img_h).width(img_w).css({"margin-top":mt,"margin-left":ml});
}
$.fn.DropDown=function(addoption){
var actionObj=$(this).eq(0);
if(actionObj.length==0){
return;
}
var option=actionObj.dataOptions();
$.extend(option,addoption);
option["action"]=!option["action"]?"click":(option["action"]=="mouseenter"?"mouseenter":"click"); 
option["hideaction"]=option["action"]=="mouseenter"?"mouseleave":"click";
if(!option){
return;
}
actionObj.css({"position":"relative"});
var droper=actionObj.find("#"+option["dropid"]);
var wdis=droper.outerWidth()-droper.width();
droper.hide();
droper.css({"position":"absolute","top":(actionObj.outerHeight()-2)+"px","left":"0px","min-width":(actionObj.outerWidth()-wdis)+"px","z-index":9999});
var hideDrop=function(){
droper.unbind().stop().slideUp("fast");
droper.removeClass("open");
actionObj.unbind(option["hideaction"]);
}
var showDrop=function(){
if(droper.hasClass("open")){
if(option["action"]=="click"){
hideDrop();
return;
}}
droper.stop().slideDown("fast").addClass("open");
droper.one("mouseleave",hideDrop);
if(option["action"]=="mouseenter"){
actionObj.one(option["hideaction"],hideDrop);
}
if(option["hidebyclick"]){
droper.one("click",hideDrop);
}}
actionObj.bind(option["action"],showDrop);
}
$.fn.AccordionFrame=function(autoClose){
var container=$(this);
var boxes=container.find(">*");
boxes.each(function(){
var option=$(this).dataOptions();
var titleBar=$('<div class="fm_AccordionBar"><i class="fa fa-angle-down"></i> '+(option["title"]||"")+'</div>');
$(this).before(titleBar);
option["open"]?titleBar.addClass("open").find("i").attr("class","fa fa-angle-up"):$(this).hide();
});
var bars=container.find(">div.fm_AccordionBar");
if(bars.length==0){
bars.eq(0).addClass("open").find("i").attr("class","fa fa-angle-up");
boxes.eq(0).show();
}
var openHideA=function(){
var index=bars.index($(this));
if($(this).hasClass("open")){
$(this).removeClass("open").find("i").attr("class","fa fa-angle-down");
boxes.eq(index).hide();
return;
}
if(autoClose){
bars.removeClass("open").find("i").attr("class","fa fa-angle-down");
boxes.hide();
}
$(this).addClass("open").find("i").attr("class","fa fa-angle-up");
boxes.eq(index).show();
}
bars.bind("click",openHideA);
}
})(jQuery);
function getDateString(newdate){
if(!newdate){
newdate=new Date();
}
return newdate.getFullYear()+"-"+(newdate.getMonth()+1)+"-"+newdate.getDate()+" "+newdate.getHours()+":"+newdate.getMinutes()+":"+newdate.getSeconds();
}
function delHostUrl(htmlStr){
var host =window.location.href.split("\:\/\/")[0]+"\\:\\/\\/"+window.location.host.replace(/\:/g,"\\:");
host="\/"+host+"\/g";
htmlStr=htmlStr.replace(eval(host),"");
return htmlStr;
}
function trim(str){
return (str+'').replace(/^\s*|\s*$/g,'');
}
function delBlank(str){
return (str + '').replace(/(\s+)$/g, '').replace(/\s+/g, '');
}
function delHtmlTag(str){
return str.replace(/<[^>]+>/g,"");
}
function delReturn(str){
str=str.replace(/[\n]/ig,'');
str=str.replace(/[\r]/ig,'');
return str;
}
function addCookie(objName,objValue,objHours){
var str = objName + "=" + escape(objValue);
if(objHours > 0){
var date = new Date();
var ms = objHours*3600*1000;
date.setTime(date.getTime() + ms);
str += "; expires=" + date.toGMTString();
}
document.cookie = str;
}
function getCookie(objName){
var arrStr = document.cookie.split("; ");
for(var i = 0;i < arrStr.length;i ++){
var temp = arrStr[i].split("=");
if(temp[0] == objName) return unescape(temp[1]);
}}
function delCookie(name){
var date = new Date();
date.setTime(date.getTime() - 10000);
document.cookie = name + "=a; expires=" + date.toGMTString();
}
function allCookie(){
var str = document.cookie;
return str;
}
function saveToLocal(key,data){
var objValue=(typeof data=="string")?data:JSON.stringify(data);
if(!window.localStorage){
addCookie(key,objValue,5*365*24);
return;
}
var storage = window.localStorage;
storage.setItem(key,objValue);
}
function readFromLocal(key){
var reobj="";
if(!window.localStorage){
reobj=getCookie(key);
}else{
var storage = window.localStorage;
reobj=storage.getItem(key);
}
try{
reobj=JSON.parse(reobj);
}catch(e){
}
return reobj;
}
function removeLocal(key){
if(!window.localStorage){
delCookie(key);
}else{
var storage = window.localStorage;
storage.removeItem(key);
}}
function stopPP(e){
var evt = e|| window.event;
evt.stopPropagation?evt.stopPropagation():(evt.cancelBubble=true);
}
function HTMLEncode(html){
var temp = document.createElement ("div");
(temp.textContent != null) ? (temp.textContent = html) : (temp.innerText = html);
var output = temp.innerHTML;
temp = null;
return output;
}
function formatHtml(str){
try{
var aaa=$(str);
var bbb=$("<div></div>");
bbb.append(aaa);
var newstr=bbb.html();
bbb.empty().remove();
bbb=null;
return newstr;
}catch(e){
return "";
}}
function Html2Str(str){
try{
var bbb=$("<div></div>");
bbb.text(str);
var newstr=bbb.text();
bbb.empty().remove();
bbb=null;
return newstr;
}catch(e){
return "";
}}
function formatSqlStr(str){
try{
var newstr=str.replace(/\</g,"\&lt\;").replace(/\>/g,"\&gt\;").replace(/\"/g,"\&quot\;").replace(/\'/g,"\&apos\;");
return newstr;
}catch(e){
console.log(e)
}
return "";
}
function HTMLDecode(text){
var temp = document.createElement("div");
temp.innerHTML = text;
var output = temp.innerText || temp.textContent;
temp = null;
return output;
}
function creatCode(Ecode,num){
var code="";
var date=new Date();
code=""+date.getTime();
code=code.substr(num,code.length);
code=Math.floor(100*Math.random())+""+code;
var codestr="";
for(var i=0;i<code.length;i++){
if(i%2==0){
codestr+=Ecode.substr(code[i],1);
}else{
codestr+=code[i]+"";
}}
return codestr;
}
function delSelect(sname){
$("select[name="+sname+"]").find("option").each(function(){
if($(this).get(0).selected==true){
$(this).remove();
}
});
}
function delSelectOption(selectObj){
selectObj.find("option").each(function(){
if($(this).get(0).selected==true){
$(this).remove();
}
});
}
function mergeJson(jsonobj){
try{
return $.extend({},jsonobj);
}catch(e){
return null;
}}
function cloneJson(jsonobj){
try{
return JSON.parse(JSON.stringify(jsonobj));
}catch(e){
try{
return $.extend(true,{},jsonobj);
}catch(e){
return null;
}}}
function inArray(tarray,avar){
for(i=0;i<tarray.length;i++){
if(tarray[i]==avar){
return true;
break;
}}
return false;
}
function getDateFromStr(str){
if(!str || str==""){
return null;
}
var dts=str.split("-");
var date=new Date();
if(dts[0]){
date.setYear(parseInt(dts[0]));
}
if(dts[1]){
date.setMonth(parseInt(dts[1]-1));
}
if(dts[2]){
date.setDate(parseInt(dts[2]));
}
return date;
}
function getDateStingForce2(datObj){
return datObj.getFullYear()+"-"+formatTo2((datObj.getMonth()+1))+"-"+formatTo2(datObj.getDate());
}
function formatTo2(str){
str="0"+str;
return str.substr(str.length-2,2);
}
function getQueryString(name) {
var reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)", "i");
var r = decodeURI(window.location.search).substr(1).match(reg);
if (r != null) return unescape(r[2]); return null;
}
function delInputHtml(){
var input=$(this);
input.css("opacity",0.01);
setTimeout(function(){
var str=trim(input.html()+"");
str=clearHtml(str);
input.html(str);//.show().get(0).blur().focus();
input.css("opacity",1);
},30);
}
function clearHtml(html){
var tempDIv=$('<div></div>');
var replaceArr=["/\\<\\/div\\>\\<div\\>/g","/\\<\\/DIV\\>\\<DIV\\>/g","/\\<div\\>/g","/\\<DIV\\>/g","/\\<\\/div\\>/g","/\\<\\/DIV\\>/g",   //chrome
"/\\<\\/p\\>\\<p\\>/g","/\\<\\/P\\>\\<P\\>/g",  //ie
"/\\<br\\>/g","/\\<BR\\>/g","/\\<br\\/\\>/g","/\\<BR\\/\\>/g"];//firefox
str=html;
if(browserIsOpera){
str=str.replace(/\<div\>\<br\>\<\/div\>/g,"###br###");//chrome
str=str.replace(/\<div\>\<br\/\>\<\/div\>/g,"###br###");//chrome
}
for(var i=0;i<replaceArr.length;i++){
str=str.replace(eval(replaceArr[i]),"###br###");
}
tempDIv.html(str);
str=tempDIv.text()+"";
str=str.replace(/###br###/g,"<br\/>");
tempDIv=null;
return str;
}
function formatHtml(html){
var replaceArr=["/\\<\\/div\\>\\<div\\>/g","/\\<\\/DIV\\>\\<DIV\\>/g","/\\<div\\>/g","/\\<DIV\\>/g","/\\<\\/div\\>/g","/\\<\\/DIV\\>/g",   //chrome
"/\\<\\/p\\>\\<p\\>/g","/\\<\\/P\\>\\<P\\>/g",  //ie
"/\\<br\\>/g","/\\<BR\\>/g","/\\<br\\/\\>/g","/\\<BR\\/\\>/g"];//firefox
str=html;
if(browserIsOpera){
str=str.replace(/\<div\>\<br\>\<\/div\>/g,"###br###");//chrome
str=str.replace(/\<div\>\<br\/\>\<\/div\>/g,"###br###");//chrome
}
for(var i=0;i<replaceArr.length;i++){
str=str.replace(eval(replaceArr[i]),"###br###");
}
str=Html2Str(str);
str=formatSqlStr(str);
str=str.replace(/###br###/g,"<br\/>");
return str;
}
function isNull(arg1) {
return (!arg1 && arg1!==0 && arg1!=="" && typeof arg1!=="boolean")?true:false;
}
function getObjectName(functionObj){
for (var a in window){
if (window[a]==functionObj){
return(a.toString());
break;
}}
return null;
}
function compare(a,b){
var
pt = /undefined|number|string|boolean/,
fn = /^(function\s*)(\w*\b)/,
cr = "constructor",
cn = "childNodes",
pn = "parentNode",
ce = arguments.callee;
if(pt.test(typeof a) || pt.test(typeof b) || a === null || b === null){
return a.toString() === b.toString() ;
}
if(a[cr] !== b[cr]){
return false;
}
switch(a[cr]){
case Date :
return a.valueOf() === b.valueOf();
case Function :
return a.toString().replace(fn,'$1') === b.toString().replace(fn,'$1'); 
case Array :
if(a.length !== b.length){
return false;
}
for(var i=0;i<a.length;i++){
if(!ce(a[i],b[i])){
return false;
}}
break;
default :
var alen = 0, blen = 0, d;
if(a === b){
return true;
}
if(a[cn] || a[pn] || b[cn] || b[pn]){
return a === b;
}
for(d in a){
alen++ ;
}
for(d in b){
blen++;
}
if(alen !== blen){
return false;
}
for(d in a){
if(!ce(a[d],b[d])){
return false;
}}
break;
}
return true;
}
function destroyDom(JQobj){
if(!JQobj){
return;
}
JQobj.each(function(){
var obj=$(this).get(0);
$("*",obj).add([obj]).each(function(){
$.event.remove(this);
$.removeData(this);
});
obj.innerHTML = "";
})
}
function flashChecker() {
var hasFlash = 0;
var flashVersion = 0;//flash\u7248\u672c
if(document.all) {
var swf = new ActiveXObject('ShockwaveFlash.ShockwaveFlash');
if(swf) {
hasFlash = 1;
VSwf = swf.GetVariable("$version");
flashVersion = parseInt(VSwf.split(" ")[1].split(",")[0]);
}
}else{
if(navigator.plugins && navigator.plugins.length > 0){
var swf = navigator.plugins["Shockwave Flash"];
if(swf) {
hasFlash = 1;
var words = swf.description.split(" ");
for(var i = 0; i < words.length; ++i) {
if(isNaN(parseInt(words[i]))) continue;
flashVersion = parseInt(words[i]);
}}}}
return {"f": hasFlash,"v": flashVersion};
}
function supportCss(style) {
var prefix = ['webkit', 'Moz', 'ms', 'o'], i, humpString = [], htmlStyle = document.documentElement.style, _toHumb = function (string) {
return string.replace(/-(\w)/g, function ($0, $1) {
return $1.toUpperCase();
});
};
for (i in prefix) {
humpString.push(_toHumb(prefix[i] + '-' + style));
humpString.push(_toHumb(style));
}
for (i in humpString){
if (humpString[i] in htmlStyle) return true;
}
return false;
}
function getPicRealSize(screenImage){
var theImage = new Image();
theImage.src = screenImage.attr("src");
var imageWidth = theImage.width;
var imageHeight = theImage.height;
theImage=null;
return {"width":imageWidth,"height":imageHeight}
}
function isScroll(container){
if(container.get(0).style.overflow=="hidden" || container.get(0).style.overflowY=="hidden"){
return false;
}
var scl=container.scrollTop();
if(scl>0){
return true;
}
container.scrollTop(10);
scl=container.scrollTop();
if(scl>0){
container.scrollTop(0);
return true;
}
return false;
}
function getScrollBarWidth(){
var blank=$('<div></div>');
blank.height($(window).height()+100);
$("body").append(blank);
$("body").hide();
var maxW=$(window).width();
$("body").show();
var minW=$(window).width();
blank.remove();
blank=null;
return maxW-minW;
}
function fillWraperFont(container,option){
var p=this;
this.option={"min":1,"max":9999,"length":1};
this.install=function(){
$.extend(p.option,option);
p.resize();
}
this.resize=function(){
var W=container.width();
W=Math.floor(W/p.option["length"]);
var H=container.height();
if(W==0 || H==0){
return;
}
var size=Math.floor(Math.min(W,H));
size=(size<p.option["min"])?p.option["min"]:(size>p.option["max"])?p.option["max"]:size;
var lineH=H+"px";
container.css({"font-size":size+"px","line-height":lineH});
}
this.install();
}
function dateDiff(interval, date1, date2){
var objInterval = {'D' : 1000 * 60 * 60 * 24, 'H' : 1000 * 60 * 60, 'M' : 1000 * 60, 'S' : 1000, 'T' : 1};
interval = interval.toUpperCase();
var dt1 = Date.parse(date1.replace(/-/g, '/'));
var dt2 = Date.parse(date2.replace(/-/g, '/'));
try{
return Math.round((dt2 - dt1) / objInterval[interval]);//('(objInterval.' + interval + ')')
}catch (e){
return e.message;
}}
(function($,h,c){var a=$([]),e=$.resize=$.extend($.resizediv,{}),i,k="setTimeout",j="resizediv",d=j+"-special-event",b="delay",f="throttleWindow";e[b]=250;e[f]=true;$.event.special[j]={setup:function(){if(!e[f]&&this[k]){return false}var l=$(this);a=a.add(l);$.data(this,d,{w:l.width(),h:l.height()});if(a.length===1){g()}},teardown:function(){if(!e[f]&&this[k]){return false}var l=$(this);a=a.not(l);l.removeData(d);if(!a.length){clearTimeout(i)}},add:function(l){if(!e[f]&&this[k]){return false}var n;function m(s,o,p){var q=$(this),r=$.data(this,d);if(!r){return};r.w=o!==c?o:q.width();r.h=p!==c?p:q.height();n.apply(this,arguments)}if($.isFunction(l)){n=l;return m}else{n=l.handler;l.handler=m}}};function g(){i=h[k](function(){a.each(function(){var n=$(this),m=n.width(),l=n.height(),o=$.data(this,d);if(o &&(m!==o.w||l!==o.h)){n.trigger(j,[o.w=m,o.h=l])}});g()},e[b])}})(jQuery,this); function getIndex(type){ 
if(typeof ZINDEX=="object"){
return ZINDEX[type]||99999;
}
return 99999;
}
(function($){
$.extend({
alert:function(msg){
alertFun(msg);
},
confirm:function(msg,callback){
alertFun(msg,"confirm",callback);
},
success:function(msg){
alertFun(msg,"success");
},
error:function(msg){
alertFun(msg,"error");
},
loading:function(timeout,nolock){	
var loading=new loadingRoll();
if(timeout){
setTimeout(function(){
try{
loading.destroy();
}catch(e){
}
},timeout)
}
loading.show(nolock);
},
loaded:function(){
$(document).trigger("CLEAR_MASK").trigger("HIDE_LOADING");
},
progress:function(progressStr,nolock){
var loading=$("#fm_loading");
if(loading.length==0){
loading=new loadingRoll();
loading.show(nolock);
}else{
loading=loading.data("loadobj");
}
try{
loading.progress(progressStr);
}catch(e){
}
},
message:function(msg,time){
time=time>0?time:2000;
$("#fm_popShowMessage").stop().remove();
var msgbox=$('<div id="fm_popShowMessage">'+HTMLDecode(msg)+'</div>')
$("body").append(msgbox);
msgbox.css({
"position":"fixed",
"bottom":"0px",
"padding":"8px",
"width":"70%",
"text-align":"center",
"z-index":getIndex("messager"),
"background-color":"#000",
"color":"#fff",
"border-radius":"4px",
"opacity":0,
"font-size":"12px",
"max-width":"800px",
"box-shadow":"0px 0px 5px #000",
"max-height":($(window).height()-100)+"px",
"overflow-y":"auto",
"overflow-x":"hidden"
});
msgbox.css("left",(($(window).width()-msgbox.outerWidth(true))/2)+"px");
msgbox.animate({"bottom":"50px","opacity":0.7},800).delay(time).fadeOut("slow",function(){
msgbox.stop().remove();
}).bind("mousedown",function(){
msgbox.stop().remove();
})
},
lockMask:function(index,timeout,maskname){
var mask=new popMask(index);
maskname?mask.name=maskname:null;
if(timeout){
setTimeout(mask.destroy,timeout);
}
return mask;
},
clearMask:function(maskName){
$(".fm_Mask").each(function(){
try{
var mask=$(this).data("obj");
if(mask.name==maskName){
mask.destroy();
$(this).del();//.empty().remove();
}
}catch(e){
}
});
},
clearAllMask:function(){
$(".fm_Mask").each(function(){
try{
var mask=$(this).data("obj");
mask.destroy();
}catch(e){
}
$(this).del();//.empty().remove();
});
},
popMessage:function(content,timeout,size,unlock,zindex){
var popMsg=new popOutSelfMsg(content,timeout,size,unlock,zindex);
},
clearPopMessage:function(){
$(document).trigger("HIDE_MSG");
},
closetips:function(){
$(".fm_popShowTips").stop().each(function(){
try{
tipsbox.data("destroy")();
}catch(e){
}
$(this).del();//.remove();
})
},
tips:function(pos,dir,htmlStr,size,timeout){  
timeout=timeout?timeout:2000;
var toPos;
var hideTm;
if(!pos){
return;
}
if(pos.html || pos.innerHTML){ //html
try{
var bounce=$(pos).getBounce();
switch(dir){
case "left":
toPos=[bounce.x,Math.floor(bounce.y+bounce.h/2)];
break;
case "right":
toPos=[bounce.x+bounce.w,Math.floor(bounce.y+bounce.h/2)];
break;
case "top":
toPos=[Math.floor(bounce.x+bounce.w/2),bounce.y];
break;
case "bottom":
toPos=[Math.floor(bounce.x+bounce.w/2),bounce.y+bounce.h];
break;
}
}catch(e){
return;
}
}else if($.isArray(pos)){
toPos=pos;
}else{
return;
}
$.closetips();
dir=dir?dir:"top";
var tipsbox=$('<div class="fm_popShowTips"><div class="relpos"></div></div>');
var arrow=$('<div class="fm_arrow '+dir+'"></div>');
var closeBut=$('<span><i class="fa fa-remove"></i></span>');
tipsbox.find(".relpos").append(arrow).append(closeBut);
var content=$('<div class="fm_tipsContent" style="padding:8px"></div>');
htmlStr=(typeof htmlStr=="function")?htmlStr():htmlStr;
(typeof htmlStr=="object")?content.append(htmlStr):content.html(htmlStr+"");
$("body").append(tipsbox);
tipsbox.append(content);
if(size){
size[0]?content.width(size[0]):null;
size[1]?content.height(size[1]):null;
}else{
content.getFitSize(4/3,80);
}
tipsbox.css({"position":"absolute","z-index":getIndex("tips")});
arrow.css({"position":"absolute"});
closeBut.css({"position":"absolute","cursor":"pointer","display":"block","width":"16px","height":"16px","line-height":"16px","font-size":"14px","text-align":"center","color":"#e68546"}).find("i").css({"cursor":"pointer"});
var arrowW=arrow.width()-1;
var arrowH=arrow.height();
var boxBounce={"w":tipsbox.outerWidth(),"h":tipsbox.outerHeight()};
switch(dir){
case "left":
tipsbox.css({"left":(toPos[0]-boxBounce.w-arrowW)+"px","top":Math.floor(toPos[1]-boxBounce.h/2)+"px"});
arrow.css({"top":Math.floor((boxBounce.h-arrowH)/2)+"px","right":-arrowW+"px"});
closeBut.css({"top":"0px","left":"2px"});
break;
case "right":
tipsbox.css({"left":(toPos[0]+arrowW)+"px","top":Math.floor(toPos[1]-boxBounce.h/2)+"px"});
arrow.css({"top":Math.floor((boxBounce.h-arrowH)/2)+"px","left":-arrowW+"px"});
closeBut.css({"top":"1px","right":"2px"});
break;
case "top":
tipsbox.css({"left":Math.floor(toPos[0]-boxBounce.w/2)+"px","top":(toPos[1]-boxBounce.h-arrowH)+"px"});
arrow.css({"left":Math.floor((boxBounce.w-arrowW)/2)+"px","top":(boxBounce.h-1)+"px"});
closeBut.css({"top":"1px","right":"2px"});
break;
case "bottom":
tipsbox.css({"left":Math.floor(toPos[0]-boxBounce.w/2)+"px","top":(toPos[1]+arrowH)+"px"});
arrow.css({"left":Math.floor((boxBounce.w-arrowW)/2)+"px","top":-arrowH+"px"});
closeBut.css({"top":(boxBounce.h-3-closeBut.outerHeight())+"px","right":"1px"});
break;
}
var stopEvent=function(e){
e.stopPropagation();
}
var destroy=function(){
if(hideTm){
clearTimeout(hideTm);
hideTm=null;
}
if(tipsbox){
tipsbox.css({"opacity":0}).del();//.unbind().empty().remove();
tipsbox=null;
}
$(window).unbind("resize",destroy).unbind("scroll",destroy);
$(document).unbind("mousedown",destroy).unbind("mouseup",destroy).unbind("CLEAR_MASK");
}
var hideToDestroy=function(){
tipsbox.css("opacity",0);
hideTm=setTimeout(destroy,1000);
}
tipsbox.data("destroy",destroy);
hideTm=setTimeout(hideToDestroy,timeout);
tipsbox.css({"opacity":1}).bind("mousedown",stopEvent).bind("mouseup",stopEvent).bind("mouseenter",function(){
if(hideTm){
clearTimeout(hideTm);
hideTm=null;
}
}).bind("mouseleave",function(){
hideTm=setTimeout(hideToDestroy,timeout);
});
$(window).one("resize",destroy).one("scroll",destroy);
$(document).one("mousedown",destroy).one("mouseup",destroy);
closeBut.one("click",destroy);
}
});
$.fn.Tips=function(mouseevent,msg,dir,size,forClick){
mouseevent=mouseevent?mouseevent:"mouseenter";
var but=$(this);
dir=dir?dir:"right";
but.bind(mouseevent,function(){
$.closetips();
$.tips(but,dir,msg,size);
if(!forClick){
but.unbind("mouseleave").one("mouseleave",$.closetips);
}
})
}
$.fn.ZoomBigPic=function(){
$(this).unbind("click").bind("click",function(){
var src;
if($(this).is("img")){
src=$(this).attr("src");
}else{
src=$(this).find("img:eq(0)").attr("src");
}
if(src){
new showPopBigPic(src);
}
});
}
$.fn.getFitSize=function(bili,min_w){
bili=bili?bili:(4/3);
min_w=min_w?min_w:60;
var container=$(this);
container.width("auto").height("auto");
var fromw=container.width();
if(fromw<=min_w){
container.width(min_w);
return;
}
while(container.width()/container.height()>bili){
fromw-=10;
if(fromw<=min_w){
container.width(min_w);
break;
}else{
container.width(fromw);
}}
container.css("overflow-y","auto");
}
function creatMsgBox(msg,type){
var icon="";
switch(type){
case "confirm":
icon="fa fa-question-circle"
break;
case "success":
icon="fa fa-check-circle"
break;
case "alert":
icon="fa fa-exclamation-circle"
break;
case "error":
icon="fa fa-times-circle"
break;
default:
icon="fa fa-warning"
break;
}
var msgAlertDiv=$('<div class="fm_alertContentDiv '+type+'"><i class="'+icon+'"></i></div>');
var msgbox=$('<div></div>');	//'+HTMLDecode(msg)+'
msgbox.text(msg);
msgAlertDiv.append(msgbox).append($('<p><a class="confirmbut" >\u786e\u5b9a</a>'+(type=="confirm"?'<a class="cancelbut" >\u53d6\u6d88</a>':'')+'</p>'));
return msgAlertDiv;
}
function alertFun(msg,type,callback){
var mask=new popMask(getIndex("messager")-1);
var msgAlert=creatMsgBox(msg,type||"alert");
$("body").append(msgAlert);
msgAlert.getFitSize($(window).width()/$(window).height(),180);
var Drag=new dragDivObj();
Drag.install(msgAlert,msgAlert);
var Center=new CenterInWindow(msgAlert);
msgAlert.css("z-index",getIndex("messager"));
var keyDownFun=function(e){
if(!msgAlert){
$(document).unbind("keydown",keyDownFun);
return;
}
if(e.keyCode==13 || e.keyCode==27){
destroyAlert(e.keyCode==13);
}}
var destroyAlert=function(type){
$(document).unbind("keydown",keyDownFun);
Drag.stopDrag();
Drag=null;
Center.destroy();
Center=null;
msgAlert.remove();
msgAlert=null;
mask.destroy();
mask=null;
if(typeof callback=="function"){
callback(type);
}}
$(document).one("keydown",keyDownFun);
msgAlert.find("p a").bind("click",function(){
destroyAlert($(this).hasClass("confirmbut"));
})
}
})(jQuery);
function popMask(index,maskname){
var p=this;
this.mask=$('<div class="fm_Mask"></div>');
this.mask.data("obj",p);
this.name=maskname||"mask";
this.install=function(){
$("body").append(p.mask);
p.mask.hide().css({"position":"fixed","top":"0px","left":"0px","z-index":index||999});
resizeFun();
p.mask.fadeIn("normal");
$(window).bind("resize",resizeFun).one("CLEAR_MASK",p.destroy);
p.mask.bind("mousewheel",delWheel);
}
function delWheel(event){
event.stopPropagation();
event.preventDefault();
}
this.hide=function(){
p.mask.stop(true,true).hide();
}
this.show=function(){
p.mask.stop(true,true).show();
}
function resizeFun(){
if(!p.mask){
p.destroy();
return;
}
var W=$(window).width();
var H=$(window).height();
p.mask.width(W).height(H);
}
this.destroy=function(){
$(window).unbind("resize",resizeFun).unbind("CLEAR_MASK",p.destroy);
if(!p.mask){
return;
}
p.mask.unbind();
p.mask.fadeOut("normal",function(){
p.mask.remove();
p.mask=null;
});
}
this.install();
}
function CenterInWindow(obj){
var p=this;
var isfirst=true;
this.install=function(){
obj.css({"position":"fixed"});
rePosDo();
isfirst=false;
$(window).bind("resize",rePos);
}
this.destroy=function(){
$(window).unbind("resize",rePos);
}
var resizeTm;
function rePos(){
if(resizeTm){
clearTimeout(resizeTm);
resizeTm=null;
}
resizeTm=setTimeout(rePosDo,100);
}
function rePosDo(){
var W=$(window).width();
var H=$(window).height();
var tot=Math.floor((H-obj.outerHeight(true))/2);
tot=tot>0?tot:0;
if(isfirst){
obj.css({"left":Math.floor((W-obj.outerWidth(true))/2)+"px","top":tot+"px"});
}else{
obj.stop().animate({"left":Math.floor((W-obj.outerWidth(true))/2)+"px","top":tot+"px"},500);
}}
this.install();
}
function popOutSelfMsg(content,timeout,size,unlock,zindex){
var msgContainer;
var loadingMask;
var TM;
var p=this;
var Center;
var z_index=zindex||getIndex("tips");
this.show=function(){
p.destroy();
if(!unlock){
loadingMask=new popMask(z_index-1);
}
msgContainer=$('<div id="fm_popMsgContainer"></div>');
msgContainer.css({
"position":"fixed",
"z-index":z_index,
"min-height": "40px",
"min-width":"40px",
"background-color":"#fff",
"border-radius":"6px",
"padding":"8px",
"box-shadow":"0px 0px 3px #666",
"overflow":"auto"
});
$("body").append(msgContainer);
msgContainer.append(content);
if(size){
msgContainer.setRealSize(size[0],size[1]);
}
Center=new CenterInWindow(msgContainer);
msgContainer.data("msgobj",p).hide().fadeIn("slow");
$(document).one("HIDE_MSG",p.destroy);
if(timeout && timeout>0){
TM=setTimeout(p.destroy,timeout);
}
return msgContainer;
}
this.destroy=function(){
$(document).unbind("HIDE_MSG",p.destroy);
if(TM){
clearTimeout(TM);
TM=null;
}
if(Center){
Center.destroy();
}
if(msgContainer){
msgContainer.del();//.empty().remove();
msgContainer=null;
}
if(loadingMask){
loadingMask.destroy();
loadingMask=null
}}
p.show();
}
function loadingRoll(){
var loadingTimer;
var loadingObj;
var loadingMask;
var loadingFrame=1;
var TM;
var p=this;
var Center;
this.show=function(unlock){
p.destroy();
if(!unlock){
loadingMask=new popMask(getIndex("loadingMask"));
}
loadingObj=$("<div id=\"fm_loading\"></div>");
loadingObj.css({
"position":"fixed",
"z-index":"9999",
"height": "40px",
"width":"40px",
"background-color":"#000",
"border-radius":"8px",
"opacity":"0.7",
"background-repeat":"no-repeat",
"background-position":"center 0px",
"overflow":"hidden"
})
$("body").append(loadingObj);
Center=new CenterInWindow(loadingObj);
loadingObj.data("loadobj",p).hide().fadeIn("slow");
loadingTimer = setInterval(animate_loading,66);
$(document).one("HIDE_LOADING",p.destroy);
}
this.progress=function(string){
var progressBar=loadingObj.find(".fm_progress");
if(progressBar.length==0){
progressBar=$('<div class="progressBar"><div></div></div>');
loadingObj.append(progressBar);
loadingObj.css({"overflow":"visible"});
progressBar.css({"position":"relative","height":"20px"}).find(">div").css({"position":"absolute","text-align":"center","margin":"0px","padding":"3px","padding-left":"15px","padding-right":"15px","border-radius":"15px","line-height":"18px","color":"#fff","background-color":"#000","opacity":1,"top":(loadingObj.height()+10)+"px","min-width":"140px","max-width":"600px"});
}
progressBar.find(">div").text(string);
progressBar.find(">div").css({"left":-Math.floor((progressBar.find(">div").outerWidth()-loadingObj.outerWidth())/2)+"px"});
}
function animate_loading(){
loadingObj.css("background-position","center "+(loadingFrame*-40)+"px");
loadingFrame=(loadingFrame+1)%12;
}
this.destroy=function(){
$(document).unbind("HIDE_LOADING",p.destroy);
if(TM){
clearTimeout(TM);
TM=null;
}
if(Center){
Center.destroy();
}
if(loadingObj){
loadingObj.del();//.empty().remove();
loadingObj=null;
}
if(loadingMask){
loadingMask.destroy();
loadingMask=null
}
if(loadingTimer){
clearInterval(loadingTimer);
loadingTimer=null;
}}}
function LoadingProgress(nolock,timeout){
var p=this;
var tm;
var mask;
var loadingBar;
this.showLoading=function(){
$("#fm_loadingbar").del();
if(!loadingBar){
loadingBar=$("<div id='fm_loadingbar'></div>");
$("body").append(loadingBar);
loadingBar.addClass("waiting");
}
loadingBar.show().width((50 + Math.random() * 30) + "%");
}
this.progress=function(){
if(!loadingBar){
return;
}
loadingBar.width("101%").delay(200).fadeOut(400, function() {
loadingBar.hide().width(0);
});
}
this.destroy=function(){
if(loadingBar){
loadingBar.remove();
loadingBar=null;
}}
}
function showPopBigPic(src){
var p=this;
var img;
var winw;
var winh;
var mask;
var maxPercent=0.9;
var closebut;
var Drag;
this.install=function(){
mask=new popMask(getIndex("image"));
closebut=$('<div class="closePicBut"></div>');
mask.mask.bind("click",p.destroy).append(closebut);
img=$('<img src="'+src+'"/>');
img.css({"position":"fixed","border": "1px solid #CCC","box-shadow":"2px 2px 8px #666666","z-index":getIndex("image")+1,"opacity":0,"transition":"opacity 0.5s","background-color":"#fff"});
$("body").append(img);
img.bind("dblclick",openBlankPic);
img.bind("load",p.resetSize);
img.bind("mousewheel",zoomPic);
img.fadeIn("normal");
$(window).bind("resize",p.resetSize);
Drag=new dragDivObj();
Drag.install(img,img);
}
function zoomPic(e,delta){
var dir=delta;
var zoomStep=0.1;
var oldW=$(this).width();
var oldH=$(this).height();
var oldPos=img.position();
var newW=Math.floor($(this).width()*(1+delta*zoomStep));
newW=(newW<32)?32:newW;
$(this).width(newW);
$(this).height("auto");
var newH=$(this).height();
$(this).css({"left":(oldPos.left-Math.floor((newW-oldW)/2))+"px","top":(oldPos.top-Math.floor((newH-oldH)/2))+"px"});
return false;
}
function openBlankPic(){
window.open(src);
}
this.resetSize=function(){
winw=$(window).width();
winh=$(window).height();
var imgw=img.width();
var imgh=img.height();
var h=winw/winh;
var boxw=Math.floor(winw*maxPercent);
var boxh=Math.floor(winh*maxPercent);
var marw=Math.floor(winw*(1-maxPercent)/2);
var marh=Math.floor(winh*(1-maxPercent)/2);
if(imgw<=boxw && imgh<=boxh){
img.height(imgh).width(imgw).css({"left":Math.floor((winw-img.width())/2)+"px","top":Math.floor((winh-img.height())/2)+"px"});
}else if((imgw/imgh)<h){
img.height(boxh).width("auto").css({"left":Math.floor((winw-img.width())/2)+"px","top":marh+"px"});
}else{
img.width(boxw).height("auto").css({"top":Math.floor((winh-img.height())/2)+"px","left":marw+"px"});
}
img.css("opacity",1);
}
this.destroy=function(){
$(window).unbind("resize",p.resetSize);
img.unbind().fadeOut("normal",function(){img.remove();});
mask.destroy();
Drag.destroy();
}
this.install();
}
function formatHostJson(JSONObj){
if(JSONObj){
if(JSONObj["value"]){
return JSONObj["value"];
}else{
return JSONObj;
}}
return null;
}
function sessionListener(){
$.ajaxSetup({
global: true,  
beforeSend:formatPostVars  
});
$(document).ajaxSuccess(function(e,jsonobj){  
checkResponseStatus(jsonobj);
})
}
function formatPostVars(e,XHR){
if(XHR.url.toLowerCase().indexOf(".html")<0){
XHR.url+=((XHR.url.indexOf("?")<0)?("?project="+projectName):("&project="+projectName));
}}
function checkResponseStatus(JsonObj){
var bkobj=JsonObj.responseText+"";
if(bkobj){
if(typeof bkobj=="string"){
try{
bkobj=JSON.parse(bkobj);
}catch(e){
return true;
}}
checkResponse(bkobj);
}
return true;
}
function checkResponse(jsonObj,silent){
if(jsonObj["head"]["code"]+""=="1"){
jsonObj["head"]["message"]?$.message(jsonObj["head"]["message"],2000):null;
return true;
}else{
switch(jsonObj["head"]["code"]+""){
case "0":
!silent?$.error(jsonObj["head"]["message"]||"\u64cd\u4f5c\u5931\u8d25!"):null;
break;
case "2": 
logoutDeal();
break;
case "3":
!silent?$.message(jsonObj["head"]["message"]||"\u64cd\u4f5c\u672a\u5b8c\u6210",2000):null;
break;
case "8":
logoutDeal(8,jsonObj["value"][0]["pevent"]||"none");
break;
case "9":
logoutDeal(9);
break;
}
return false;
}}
function AJAXObj(){
var p=this;
this.isasync=true;//true \u5f02\u6b65
this.silent=false;
this.timeout=60000;
var Loading=new LoadingProgress();
var loader;
function httpStatus(Http,str){
if(Loading){
Loading.destroy();
}
p.destroy();
if(Http.status=="success" || Http.status=="200"){  console.log(88888)
if(str=="parsererror"){   console.log(Http)
$(p).trigger("SYS_ERROR","\u8fd4\u56de\u6570\u636e\u683c\u5f0f\u9519\u8bef");
!p.silent?$.message('\u8fd4\u56de\u6570\u636e\u683c\u5f0f\u9519\u8bef!',2000):null;
}
return;
}
switch(Http.status.toString()){
case "0":
$(p).trigger("SYS_ABORT","\u8bf7\u6c42\u88ab\u7ec8\u6b62");
break;
case "404":
$(p).trigger("SYS_ERROR","\u7cfb\u7edf\u9519\u8bef404");
!p.silent?$.message('\u7f51\u7edc\u9519\u8bef\uff0c\u53ef\u80fd\u7f51\u7edc\u4e0d\u901a!',2000):null;
break;
case "500":
$(p).trigger("SYS_ERROR","\u7cfb\u7edf\u9519\u8bef500");
!p.silent?$.message('\u670d\u52a1\u5668\u9519\u8bef!',2000):null;
break;
default:
$(p).trigger("SYS_ERROR","\u7cfb\u7edf\u9519\u8bef");
!p.silent?$.message('\u672a\u77e5\u7f51\u7edc\u9519\u8bef!',2000):null;
break;
}}
function dataBack(jsonObj){
if(checkResponse(jsonObj,true)){
$(p).trigger("JSON_LOADED",jsonObj);
}else{
$(p).trigger("SYS_ERROR",jsonObj["head"]["message"]);
}}
this.Post=function(postUrl,postDataObj){
POSTDATA(postUrl,postDataObj);
}
this.POSTDATA=function(postUrl,postDataObj){
p.destroy();
if(postDataObj){
for(var na in postDataObj){
if(typeof postDataObj[na]=="object"){
postDataObj[na]=JSON.stringify(postDataObj[na]);//Json\u8f6c\u5b57\u7b26\u4e32
}}}
loader=$.ajax({
type: "post",
dataType: "json",
data: postDataObj||{},
url: postUrl,
async: p.isasync,
complete: httpStatus,//AJAX\u8bf7\u6c42\u5b8c\u6210\u65f6\u9690\u85cfloading\u63d0\u793a
timeout:p.timeout, 
success: dataBack,
beforeSend: Loading.showLoading
}).always(Loading.progress);
}
this.destroy=function(){
if(loader){
$(loader).unbind();
loader.abort();
loader=null;
}}
this.GetHtml=function(tempUrl,fatal){	 //ajaxGetHtml
var addstr="";
if(!useCache){
addstr=new Date();
addstr=addstr.getTime();
}
$.ajax({
type: "get",
dataType: "html",
url: tempUrl+"?i="+addstr,
async: p.isasync,
complete: httpStatus,//AJAX\u8bf7\u6c42\u5b8c\u6210\u65f6\u9690\u85cfloading\u63d0\u793a
success: function(htmlstr){
if(htmlstr.indexOf("{")==0){
var BkJson=JSON.parse(htmlstr);
checkResponse(BkJson); 
return;
}
$(p).trigger("HTML_LOADED",htmlstr);
},
beforeSend: Loading.showLoading
}).always(Loading.progress);
}}
function LoadHtml(url,condition,callback){
var Loader=new AJAXObj();
Loader.silent=true;
$(Loader).one("HTML_LOADED",function(e,htmlstr){
htmlstr=trim(htmlstr+"");
var firststr=htmlstr.substr(0,1);
if(firststr=="{" || firststr=="["){
try{
var backObj=JSON.parse(htmlstr);
checkResponse(backObj);
}catch(e){
}
return;
}
Loader.destroy();
Loader=null;
callback(e,htmlstr);
}).one("SYS_ERROR",function(e,msg){
Loader.destroy();
Loader=null;
var str404='<script type="text/javascript">function ACTION(){this.READY=function(){}}</script>'
+'<div class="fm_e404"><h1>:( <span>\u51fa\u9519\u5566~~</span></h1><p>\u60a8\u8bbf\u95ee\u7684\u9875\u9762\u4e0d\u5b58\u5728\uff0c\u8bf7\u68c0\u67e5\u914d\u7f6e\u6587\u4ef6\u3002</p><p>URL: '+url+'</p></div>';
callback(null,str404);
});
Loader.GetHtml(url);
}
function ajaxGetSelectOption(selectObj,inputtype,checkloaded){
var errorLoad=function(){
if(inputtype=="select"){
selectObj.empty().append($("<option>--\u6570\u636e\u9519\u8bef--</option>")).addClass("errorload");
}else{
selectObj.after($("<span>--\u6570\u636e\u9519\u8bef--</span>")).remove();
}
checkloaded();
}
var installSelect=function(e,backJson){
var selectJson=backJson["value"];
var Name=selectObj.attr("name");
switch(inputtype){
case "select":
var option="";
if(selectJson.length==0){
option+="<option value=\"\" selected=\"selected\">\u65e0</option>";
}else{
var defaultval=selectJson[0]["value"];
if(selectObj.hasClass("fm_forSelect")){ 
defaultval="";
option+="<option value=\"\" selected=\"selected\">\u8bf7\u9009\u62e9</option>";
}else  if(selectObj.hasClass("fm_selectAll")){ 
defaultval="";
option+="<option value=\"\" selected=\"selected\">\u5168\u90e8</option>";
}
for(var i=0;i<selectJson.length;i++){
option+="<option value=\""+selectJson[i]["value"]+"\">"+selectJson[i]["text"]+"</option>";
}}
selectObj.empty().append($(option)).val(defaultval);
break;
case "radio":
var rstr="";
for(var i=0;i<selectJson.length;i++){
var ck="";
if(i==0){
ck="checked=\"checked\""
}
rstr+="<label><input type=\"radio\" name=\""+Name+"\" id=\""+Name+"_"+i+"\" value=\""+selectJson[i]["value"]+"\" "+ck+" />"+selectJson[i]["text"]+"</label>";
}
selectObj.after($(rstr)).remove();
break;
case "checkbox":
var rstr="";
for(var i=0;i<selectJson.length;i++){
rstr+="<label><input type=\"checkbox\" name=\""+Name+"\" id=\""+Name+"_"+i+"\" value=\""+selectJson[i]["value"]+"\" />"+selectJson[i]["text"]+"</label>";
}
selectObj.after($(rstr)).remove();
break;
}
checkloaded();
}
var option=selectObj.dataOptions();
if(!option){
errorLoad();
return
}
var condition=option["param"];//PAGER.PAGES[PAGER.toShow]["CONDITION"];
LoadListData(option,selectObj.attr("name"),condition,installSelect,errorLoad);
}
function LoadListData(option,selectid,condition,callback,errorLoad){
if(!option || !option["url"]){
errorLoad();
return;
}
var postUrl=option["url"];
var postData={"event":selectid,"extend":{},"content":{"condition":condition||{}}};
var Loader=new AJAXObj();
Loader.silent=true;
$(Loader).one("JSON_LOADED",callback).one("SYS_ERROR",errorLoad);
Loader.POSTDATA(postUrl,postData);
}function globalSearch(container,GlobalSearchConfig){
var p=this;
var searchObj;
this.isSearch=false;
this.searchData={};
this.install=function(){
var dropStr=""
if(GlobalSearchConfig){
for(var i=0;i<GlobalSearchConfig.length;i++){
dropStr+='<p rev="'+GlobalSearchConfig[i]["value"]+'">'+GlobalSearchConfig[i]["text"]+'</p>';
}
dropStr='<div class="dropselect">'+dropStr+'</div>'
}
searchObj=$('<div class="gsearch"><dt><input name="gkey" value="\u8bf7\u8f93\u5165\u5173\u952e\u5b57" class="firstinput"/></dt><dd>'+dropStr+'<a class="gsearchsubmit"><i class="fa fa-search"></i> \u641c\u7d22</a></dd></div>');
searchObj.find("p:first").addClass("first");
container.empty().append(searchObj);
searchObj.find("a.gsearchsubmit").bind("click",startSearch);
searchObj.find(".firstinput").one("focus",function(){
$(this).removeClass("firstinput").val("");
})
searchObj.width(searchObj.find("dt").outerWidth(true)+searchObj.find(".dropselect").outerWidth(true)+searchObj.find("dd a").outerWidth(true));
searchObj.find(".dropselect p:gt(0)").hide();
searchObj.find(".dropselect").bind("mouseenter",showDrop).find("p").bind("click",dropSelected);
}
function showDrop(){
$(this).find("p").stop().slideDown("fast",function(){searchObj.find(".dropselect").unbind().bind("mouseleave",hideDrop)});
}
function hideDrop(){
searchObj.find(".dropselect p:gt(0)").stop().slideUp("fast",function(){searchObj.find(".dropselect").unbind().bind("mouseenter",showDrop)});
}
function dropSelected(){
searchObj.find("p.first").removeClass("first");
searchObj.find(".dropselect").prepend($(this));
$(this).addClass("first");
hideDrop();
return false;
}
function startSearch(){
var keyinput=searchObj.find("input[name=gkey]")
var key=keyinput.val();
if(trim(key).length==0 || keyinput.hasClass("firstinput")){
searchObj.find("input[name=gkey]").addClass("firstinput").val("\u8bf7\u8f93\u5165\u5173\u952e\u5b57");
return;
}
var pclick=searchObj.find(".dropselect p:first");
var scObj={};
scObj["condition"]={};
scObj["condition"]["key"]=key;
scObj["condition"]["type"]=pclick.attr("rev");
p.searchData=$.extend({},scObj["condition"]);
p.isSearch=true; 
scObj["item"]=$(this);
$(p).trigger("GLOBAL_SEARCH",scObj);
}
}function dragWindowSize(dragObj,resizeWin,option){
var p=this;
var dragDiv;
var nowpos;
this.install=function(){
dragObj.unbind().bind("mousedown",drag);
option=option?option:{"min":[100,100]};
option["min"]=option["min"]?option["min"]:[100,100];
option["min"][0]=option["min"][0]>100?option["min"][0]:100;
option["min"][1]=option["min"][1]>100?option["min"][0]:100;
}
function drag(e){
if(dragDiv){
dragDiv.del();//.remove();
dragDiv=null;
}
dragDiv=$('<div class="dragWindowLine"></div>');
var startPos=resizeWin.offset();
dragDiv.css({"position":"fixed","top":startPos.top-2+"px","left":startPos.left-2+"px","z-index":"9999999"})
.width(resizeWin.outerWidth()).height(resizeWin.outerHeight());
$("body").append(dragDiv);
e=e?e:window.event;
nowpos=[e.clientX,e.clientY];
option_max=option["max"]?option["max"]:[$(window).width(),$(window).height()];
var setDrag=function(e){
e=e?e:window.event;
var w=(e.clientX-startPos.left);
var h=(e.clientY-startPos.top);
w=w>option_max[0]?option_max[0]:w;
h=h>option_max[1]?option_max[1]:h;
w=w<option["min"][0]?option["min"][0]:w;
h=h<option["min"][1]?option["min"][1]:h;
dragDiv.css({"width":w+"px","height":h+"px"});
}
var stopDrag=function(e){
if(dragDiv){
$(p).trigger("DRAG_RESIZE",{"width":dragDiv.width(),"height":dragDiv.height()});
dragDiv.del();//.remove();
dragDiv=null;
}
if(browserIsIE8){
$("*").css({"-webkit-user-select":"","-moz-user-select": "","-khtml-user-select": "","user-select": ""}).attr("unselectable","");
}
$(document).unbind("mousemove",setDrag).unbind("mouseup",stopDrag);
}
$(document).bind("mousemove",setDrag).bind("mouseup",stopDrag);
if(browserIsIE8){
$("*").css({"-webkit-user-select":"none","-moz-user-select": "none","-khtml-user-select": "none","user-select": "none"}).attr("unselectable","on");
}
stopPP(e);
e.preventDefault();
}
this.enable=function(){
dragObj.unbind().bind("mousedown",drag);
}
this.disable=function(){
dragObj.unbind("mousedown",drag);
}
this.destroy=function(){
if(dragDiv){
dragDiv.del();//.remove();
dragDiv=null;
}
dragObj.unbind("mousedown",drag);
}
this.install();
}
function dragToMove(dragObj,fitTag){ 
var p=this;
var nowpos;
this.isdrag=false; 
this.enable=function(){
dragObj.unbind().bind("mousedown",dragTab);
}
this.disable=function(){
dragObj.unbind("mousedown",dragTab);
}
this.moveToTab=function(tab){
if(!tab || tab.length==0){
return;
}
var lipos=tab.position().left;
var maxdrag=(dragObj.width()-dragObj.parent().width());
lipos=lipos>=maxdrag?maxdrag:lipos;
lipos=lipos<0?0:lipos;
checkTabToFitPos(-lipos);
}
function dragTab(e){
p.isdrag=false;
e=e?e:window.event;
nowpos=e.clientX;
var nowleft=dragObj.css("left");
nowleft=parseInt(nowleft.replace("px",""));
nowleft=nowleft?nowleft:0;
var setDrag=function(e){
p.isdrag=true;
e=e?e:window.event;
var tox=nowleft+(e.clientX-nowpos);
dragObj.css("left",tox+"px");
}
var stopDrag=function(e){
if(fitTag){
checkTabToFitPos();
}
if(browserIsIE8){
$("*").css({"-webkit-user-select":"","-moz-user-select": "","-khtml-user-select": "","user-select": ""}).attr("unselectable","");
}
$(document).unbind("mousemove",setDrag).unbind("mouseup",stopDrag);
}
$(document).bind("mousemove",setDrag).bind("mouseup",stopDrag);
if(browserIsIE8){
$("*").css({"-webkit-user-select":"none","-moz-user-select": "none","-khtml-user-select": "none","user-select": "none"}).attr("unselectable","on");
}
stopPP(e);
e.preventDefault();
}
function checkTabToFitPos(toleft){
var nowleft;
if(toleft || toleft==0){
nowleft=toleft;
}else{
nowleft=dragObj.css("left");
nowleft=parseInt(nowleft.replace("px",""));
nowleft=nowleft?nowleft:0;
}
var maxdrag=(dragObj.width()-dragObj.parent().width());
nowleft=nowleft<-maxdrag?-maxdrag:nowleft;
nowleft=nowleft>0?0:nowleft;
var lipos=0;
var finded=false;
dragObj.find(">"+fitTag).each(function(){
var thisliw=$(this).outerWidth(true);
if(lipos<-nowleft && !finded){
lipos+=thisliw;
if(lipos>=-nowleft){
finded=true;
var dis=(nowleft+lipos);
if((toleft  || toleft==0) && dis>thisliw/2){
lipos-=thisliw;
}}}
});
lipos=-lipos;
dragObj.stop().animate({"left":lipos+"px"},"50");
}}
function DragResize(dragBar,SIZE,resizeFun){
var p=this;
this.dragSize;
this.install=function(){
if(resizeFun==null){
return;
}
p.dragSize=SIZE;
p.dragSize["dis"]=p.dragSize["dis"]||0;
if(!p.dragSize || typeof p.dragSize!=="object"){
p.dragSize={"min":0,"max":$(window).width()}
}
p.enabled();
}
this.enabled=function(){
dragBar.unbind().bind("mousedown",startDragPannal).show();
}
this.disabled=function(){
dragBar.unbind("mousedown",startDragPannal).hide();
}
function startDragPannal(e){
$(document).bind("mousemove",setDrag).bind("mouseup",stopDrag);
if(browserIsIE8){
$("*").css({"-webkit-user-select":"none","-moz-user-select": "none","-khtml-user-select": "none","user-select": "none"}).attr("unselectable","on");
}
stopPP(e);
e.preventDefault();
}
function stopDrag(e){
if(browserIsIE8){
$("*").css({"-webkit-user-select":"","-moz-user-select": "","-khtml-user-select": "","user-select": ""}).attr("unselectable","");
}
$(document).unbind("mousemove",setDrag).unbind("mouseup",stopDrag);
setDrag(e,true);
}
function setDrag(e,isend){
e=e?e:window.event;
var dagDis=e.clientX	;
dagDis-=p.dragSize["dis"];
dagDis=dagDis>p.dragSize["max"]?p.dragSize["max"]:dagDis;
dagDis=dagDis<p.dragSize["min"]?p.dragSize["min"]:dagDis;
resizeFun(dagDis,isend);
}
this.destroy=function(){
$(document).unbind("mousemove",setDrag).unbind("mouseup",stopDrag);
dragBar.unbind();
}}
function DragResizeV(dragBar,SIZE,resizeFun){
var p=this;
this.dragSize;
this.install=function(){
if(resizeFun==null){
return;
}
p.dragSize=SIZE;
if(!p.dragSize || typeof p.dragSize!=="object"){
p.dragSize={"min":0,"max":$(window).height()}
}
p.enabled();
}
this.enabled=function(){
dragBar.unbind().bind("mousedown",startDragPannal).show();
}
this.disabled=function(){
dragBar.unbind("mousedown",startDragPannal).hide();
}
function startDragPannal(e){
$(document).bind("mousemove",setDrag).bind("mouseup",stopDrag);
if(browserIsIE8){
$("*").css({"-webkit-user-select":"none","-moz-user-select": "none","-khtml-user-select": "none","user-select": "none"}).attr("unselectable","on");
}
stopPP(e);
e.preventDefault();
}
function stopDrag(e){
$(document).unbind("mousemove",setDrag).unbind("mouseup",stopDrag);
if(browserIsIE8){
$("*").css({"-webkit-user-select":"","-moz-user-select": "","-khtml-user-select": "","user-select": ""}).attr("unselectable","");
}
setDrag(e,true);
}
function setDrag(e,isend){
e=e?e:window.event;
var dagDis=e.clientY	;
dagDis=dagDis>p.dragSize["max"]?p.dragSize["max"]:dagDis;
dagDis=dagDis<p.dragSize["min"]?p.dragSize["min"]:dagDis;
resizeFun(dagDis,isend);
}}
function dragDivObj(){
var p=this;
var downPos;
var mousePos;
var targetDiv;
var dragDiv;
var maxLeft;
this.Enabled=true;
this.isDrag=false;
this.draged=false;
this.dispos=[0,0];
this.holdTop=true;
this.install=function(dragContainer,dragTarget,parentdis){ //
p.dispos=parentdis||[0,0];
p.stopDrag();
targetDiv=dragTarget;
dragDiv=dragContainer;
dragDiv.bind("mousedown",startMove);
}
function getParentDis(){
if(typeof p.dispos=="function"){
return p.dispos();
}else{
return p.dispos;
}}
function setDrag(e){
if(!p.Enabled){
return;
}
e=e?e:window.event;
var disX=e.clientX-mousePos[0];
var disY=e.clientY-mousePos[1];
p.draged=(disX!=0 || disY!=0)?true:false;
var totop=downPos.top+disY;
var toleft=downPos.left+disX;
toleft=(toleft>maxLeft)?maxLeft:toleft;
if(p.holdTop){
totop=(totop<0)?0:totop;
}
var dis=getParentDis();
var left=(toleft-dis[0]);
var top=(totop-dis[1]);
targetDiv.css({"left":left+"px","top":top+"px"});
$(p).trigger("DRAG_MOVE",{"x":left,"y":top});
}
this.destroy=function(){
$(p).unbind();
p.isDrag=false;
dragDiv.unbind("mousedown",startMove);
$(document).unbind("mousemove",setDrag).unbind("mouseup",p.stopDrag).unbind("mouseleave",p.stopDrag);
}
this.stopDrag=function(){
p.isDrag=false;
$(document).unbind("mousemove",setDrag).unbind("mouseup",p.stopDrag);
if(browserIsIE8){
$("*").css({"-webkit-user-select":"","-moz-user-select": "","-khtml-user-select": "","user-select": ""}).attr("unselectable","");
}
$(p).trigger("DRAG_END",{"targ":targetDiv,"container":dragDiv});
}
function startMove(e){
p.draged=false;
maxLeft=$(window).width()-40;
downPos=targetDiv.offset();
downPos.left-=$(window).scrollLeft();
downPos.top-=$(window).scrollTop();
e=e?e:window.event;
mousePos=[e.clientX,e.clientY];
$(document).bind("mousemove",setDrag).one("mouseup",p.stopDrag).one("mouseleave",p.stopDrag);
if(browserIsIE8){
$("*").css({"-webkit-user-select":"none","-moz-user-select": "none","-khtml-user-select": "none","user-select": "none"}).attr("unselectable","on");
}
p.isDrag=true;
stopPP(e);
e.preventDefault();
}
}(function($){
$.fn.menuButton=function(condition){
$(this).bind("click",function(){
var menuButton=$(this);
var option=menuButton.dataOptions();
$.extend(condition,(typeof option["param"]=="object")?option["param"]:{});
var winName=option["name"]||menuButton.data("windowName");
if(!winName){
winName=new Date();
winName="Window_"+winName.getTime()+Math.round(1000*Math.random());
menuButton.data("windowName",winName);	
}
option["name"]=winName;
option["target"]=option["target"]?option["target"]:"popwin";
if(option["target"]=="slide" || option["target"]=="panel"){
PAGER.OPEN(winName,option,condition);
}else{
var fromPos=menuButton.getCenter();
PAGER.OPEN(winName,option,condition,fromPos);
}
});
}
})(jQuery);
function MenuAction(){
var p=this;
$(document).bind("PAGE_REFRESH",function(e,winvar){
var WinID=winvar["winid"];
PAGER.reload(WinID);
})
this.open=function(option,condition,fromobj){
var winName=option["name"];
if(!winName){
winName=creatId();
option["name"]=winName;
}
var pwindow=PAGER.getWindowById(winName);
if(pwindow){
if(option["toggle"]==true){
PAGER.destroy(winName);
}else{
pwindow.Restore();
$(document).trigger("PREPARE_OPEN",{"winid":winName,"target":option["target"]});
}
return;
}
if(option["target"]=="slide" || option["target"]=="panel"){
PAGER.OPEN(winName,option,condition);
}else{
if(fromobj){
var fromPos;
if(fromobj.html || fromobj.innerHTML){ //html
try{
fromPos=$(fromobj).getCenter();
}catch(e){ 
fromPos=[Math.floor($(window).width()/2),Math.floor($(window).height()/2)];
}
}else{  
fromPos=fromobj;
}
}else{
fromPos=[Math.floor($(window).width()/2),Math.floor($(window).height()/2)];
}
fromPos[0]=fromPos[0]-$(window).scrollLeft();
fromPos[1]=fromPos[1]-$(window).scrollTop();
PAGER.OPEN(winName,option,condition,fromPos);
}}
function creatId(){
var id=new Date();
return "Window_"+id.getTime()+Math.round(1000*Math.random());
}}
function PageCtrl(){
var p=this;
this.PAGES={};
this.install=function(){
$(document).bind("WINDOW_DESTROY",function(e,data){
p.destroy(data["windowName"]);
})
}
this.OPEN=function(windowId,option,condition,fromPos){
var Window;
$(document).trigger("PREPARE_OPEN",{"winid":windowId,"target":option["target"]});
var PAGE=p.PAGES[windowId];
if(PAGE){
if(option["toggle"]==true){
p.destroy(windowId);
}else{
PAGE["WINDOW"].Restore();
}
return;
}
switch(option["target"]){
case "tab":
if(TAB){
Window=new tabPageWindow(TAB);
}else{
option["target"]="pop";
Window=new popOutWindow();
}
break;
case "panel":
Window=new sidePanel();
break;
case "slide":
Window=SLIDEWIN[option["side"]];
if(Window.ID){
p.destroy(Window.ID,true);
}
$(Window).unbind();
break;
case "still":
Window=new stillPanel();
break;
default:
Window=new popOutWindow();
break;
}
p.PAGES[windowId]=PAGE={"WINDOW":Window,"CONDITION":condition,"TARGET":option["target"]};
LoadHtml(option["url"],condition,function(e,htmlStr){
var actionid=new Date();
actionid="Window_"+actionid.getTime()+Math.round(1000*Math.random());
htmlStr=htmlStr.replace(/function ACTION\(\)/g,"function ACTION_"+actionid+"\(\)");
var htmlObj=$(htmlStr);
PAGE["WINDOW"].ID=windowId;
PAGE["WINDOW"].Show(htmlObj,option,fromPos);
var theClass;
if(htmlStr.indexOf('ACTION_'+actionid)>-1){
theClass=eval('ACTION_'+actionid);
}else{
theClass=function(){}
}
PAGE.pageClass=theClass;
htmlObj.find("script").remove();
var Str=$("<div></div>")
Str.append(htmlObj.clone()).find("script").remove();
htmlStr=Str.html();
Str.del();
Str=null
PAGE.html=htmlStr;	//---------------\u8fc7\u6ee4\u6389<scripts>??
PAGE["ACTION"]=new theClass();
PAGE["ACTION"]["WINDOW"]=Window;
PAGE["ACTION"]["CONTAINER"]=Window.container;
PAGE["ACTION"]["WRAPER"]=Window.scrollBox;
PAGE["ACTION"]["WINID"]=windowId;
PAGE["ACTION"]["CONDITION"]=condition||{};
PAGE["ACTION"].find=function(selector){
return Window.container.find(selector);
}
formatHtml(PAGE,600);
});
}
function formatHtml(PAGE,tm){
setTimeout(function(){
$.parser.onComplete=function(){
if(PAGE["ACTION"] && typeof PAGE["ACTION"].READY=="function"){
PAGE["ACTION"].READY();
}
$.parser.onComplete=function(){};
$(PAGE["WINDOW"]).trigger("PAGE_LOADED",{"windowName":PAGE["WINDOW"].ID});
}
$.parser.parse("#"+PAGE["WINDOW"].ID);
},tm);
}
this.reload=function(windowId,condition){
var PAGE=p.PAGES[windowId]
if(PAGE){
try{
$(PAGE["ACTION"]["WINDOW"]).unbind();
PAGE["ACTION"].DESTROY();
}catch(e){
console.log(e)
}
if(condition){
$.extend(PAGE["CONDITION"],condition);
$.extend(PAGE["ACTION"]["CONDITION"],condition);
}
PAGE["WINDOW"].renew((typeof PAGE.html=="string")?$(PAGE.html):PAGE.html);
formatHtml(PAGE,30);
}}
this.getWindowById=function(windowId){
return p.PAGES[windowId]?p.PAGES[windowId]["WINDOW"]:null;
}
this.getActionById=function(windowId){
return p.PAGES[windowId]?p.PAGES[windowId]["ACTION"]:null;
}
this.getWraperById=function(windowId){
var PAGE=p.PAGES[windowId];
return PAGE?PAGE["WINDOW"]?PAGE["WINDOW"].scrollBox:null:null;
}
this.destroy=function(windowId,nomove){
if(!p.PAGES[windowId])return;
var PAGE=p.PAGES[windowId];
try{
if(PAGE){
if(PAGE["ACTION"]){
if(PAGE["ACTION"]["CONTAINER"]){
PAGE["ACTION"]["CONTAINER"].clearWidget();
}
if(typeof PAGE["ACTION"]["DESTROY"]=="function"){
try{
PAGE["ACTION"]["DESTROY"]();
}catch(e){
console.log("PAGE DESTROY:",e);
}}
$(PAGE["WINDOW"]).unbind();
try{
PAGE["WINDOW"].clearContent();
}catch(e){
console.log("PAGE CLEAR:",e);
}
if(PAGE["ACTION"]["CONTAINER"]){
PAGE["TARGET"]!="slide"?PAGE["ACTION"]["CONTAINER"].del():null;
PAGE["ACTION"]["CONTAINER"]=null;
}
delete PAGE["ACTION"];
PAGE["ACTION"]=null;
}
delete p.PAGES[windowId];	
PAGE.pageClass?delete PAGE.pageClass:null;		
}
}catch(e){
console.log("WINDOW DESTROY:",e);
}
PAGE?delete PAGE:null;
p.PAGES[windowId]=null;
delete p.PAGES[windowId];
}
this.install();
}
(function($){
$.fn.widget=function(condition){
$(this).each(function(){
var container=$(this);
var option=container.dataOptions();
var winName=option["name"];
if(!winName){
winName="WIDGET"+(option["name"]||"")+"_"+(new Date()).getTime();
option["name"]=winName;
}
option["container"]=container;
option["target"]="still";
PAGER.OPEN(winName,option,condition);
container.attr({"data-widget":"is","data-widgetName":winName});
})
$.fn.destroyWidget=function(){
var obj=$(this);
var winName=obj.attr("data-widgetName");
if(winName){
PAGER.destroy(winName);
}
return obj;
}
$.fn.removeWidget=function(){
var container=$(this);
container.find("[data-widget='is']").each(function(){
$(this).destroyWidget();
})
container.destroyWidget();
return container;
}
$.fn.clearWidget=function(){
var container=$(this);
container.find("[data-widget='is']").each(function(){
$(this).destroyWidget();
})
return container;
}}
})(jQuery);
function stillPanel(){
var p=this;
this.scrollBox;
this.ID="";
this.container;
this.option={};
var resizetm;
this.renew=function(content){
p.scrollBox.empty().append(content);
}
this.Show=function(content,option,fromPos,isreload){
$.extend(p.option,option);
p.scrollBox=p.container=option["container"];
p.scrollBox.empty().append(content);
p.container.css("opacity",0);
setTimeout(function(){
p.container.css("opacity",1);
},400);
$(window).bind("resize",p.resize);
}
this.disAutoResize=function(){
$(window).unbind("resize",p.resize);
}
this.Restore =function(){
}
this.close=function(){
}
this.toFront=function(){
}
this.resize=function(){
if(resizetm){
clearTimeout(resizetm);
resizetm=null;
}
resizetm=setTimeout(resizeDo,100);
}
function resizeDo(){
$(p).trigger("WINDOW_RESIZE",{"windowname":p.ID,"width":p.container.width(),"height":p.container.height()});
}
this.reload=function(){
$(document).trigger("PAGE_REFRESH",{"winid":p.ID});
}
this.clearContent=function(){
$(window).unbind("resize",p.resize);
p.scrollBox.empty();
}
this.destroy=function(){
$(document).trigger("WINDOW_DESTROY",{"windowName":p.ID});
}
this.clear=function(){
p.scrollBox.empty();
}
}function pageTab(){      
var p=this;
this.container;
var tabBox;
var scrollBox;
var boxW;
var contW;
var Drag;
this.install=function(container){
tabBox=container;
p.container=$('<div class="fm_pagetabbox"></div>');
tabBox.append(p.container);
p.container.css({"position":"relative","overflow":"hidden"}).width(tabBox.width()).height(tabBox.height());
scrollBox=$("<div></div>");
scrollBox.css({"position":"absolute","left":"0px","bottom":"0px"});
p.container.empty().append(scrollBox);
Drag=new dragToMove(scrollBox,"a");
}
this.addTab=function(title,pageName,fix){
var newtab=scrollBox.find("a[rel="+pageName+"]");
scrollBox.find("a.nowid").removeClass("nowid");
if(newtab.length>0){
p.movetabTo(pageName);
return;
}
newtab=$('<a rel="'+pageName+'" class="nowid" title="'+title+'"><span>'+title.substr(0,20)+'</span>'+(fix?'':'<p></p>')+'</a>');
newtab.disableSelect();
newtab.find("p").unbind().bind("click",delTab);
newtab.find("span").unbind().bind("click",tabClick);
scrollBox.append(newtab);
p.resizeTab();
$(p).trigger("TAB_ADDTAB",pageName);
}
this.resizeTab=function(){
p.container.width(tabBox.width()).height(tabBox.height());
boxW=p.container.width();
contW=0;
scrollBox.find("a").each(function(){
contW+=$(this).outerWidth(true);
})
scrollBox.width(contW);
if(contW>boxW){
Drag.enable();
}else{
Drag.disable();
}
if(scrollBox.find("a.nowid").length>0){
var nowevent=scrollBox.find("a.nowid").attr("rel");
p.movetabTo(nowevent);
}}
this.movetabTo=function(pageName){
scrollBox.find("a.nowid").removeClass("nowid");
var targtab=scrollBox.find("a[rel="+pageName+"]");
targtab.addClass("nowid");
Drag.moveToTab(targtab);
}
function delTab(){
var pageName=$(this).parent().attr("rel");
$(p).trigger("TAB_DESTROY",pageName);
}
this.removeTab=function(pageName){
var todel=scrollBox.find("a[rel="+pageName+"]");
if(todel.length==0){
return false;
}
if(todel.hasClass("nowid")){
var id=todel.index();
var toshow=scrollBox.find("a:eq("+(id-1)+")");
toshow=(toshow.length==0)?scrollBox.find("a:eq("+(id+1)+")"):toshow;
var toevent=toshow.attr("rel");
if(toshow.length==0 || pageName==toevent){
$(document).trigger("SHOW_HOMEPAGE");
}else{
$(p).trigger("TAB_SHOW",toevent);
}}
todel?todel.del():null;
p.resizeTab();
if(toevent){
p.movetabTo(toevent);
}
return true;
}
this.delTabOutSide=function(pageName){
scrollBox.find("a[rel="+pageName+"]").del();
p.resizeTab();
}
function tabClick(){
if(Drag.isdrag){
return;
}
scrollBox.find("a.nowid").removeClass("nowid");
var pageName=$(this).parent().attr("rel");
$(p).trigger("TAB_SHOW",pageName);
p.movetabTo(pageName);
}}
function TABObj(container){
var p=this;
var tabWraper;
var tabDiv;
var Tab;
this.TabContDiv;
this.onShow="";
var option={"pos":"top"};
this.install=function(){
var toption=container.dataOptions();
$.extend(option,toption);
tabWraper=$('<div class="fm_tabWraper"></div>');
tabDiv=$('<div class="tabWraper"></div>');
p.TabContDiv=$('<div></div>');
tabWraper.append(tabDiv).append(p.TabContDiv);
container.append(tabWraper);
tabWraper.css({"position":"relative","width":"100%","height":"100%","overflow":"hidden"});
if(option["pos"]=="bottom"){
tabDiv.css({"position":"absolute","left":"0px","right":"0px","bottom":"0px"})
tabWraper.addClass("fm_tabBottom");
p.TabContDiv.css({"position":"absolute","left":"0px","right":"0px","top":"0px"});
}else{
tabDiv.css({"position":"absolute","left":"0px","right":"0px","top":"0px"});
p.TabContDiv.css({"position":"absolute","left":"0px","right":"0px","bottom":"0px"});
}
Tab=new pageTab();
Tab.install(tabDiv);
$(Tab).bind("TAB_SHOW",function(e,PageName){
showPage(PageName);
}).bind("TAB_DESTROY",function(e,PageName){
$(document).trigger("WINDOW_DESTROY",{"windowName":PageName});
}).bind("TAB_HOME",function(e){
$(document).trigger("SHOW_HOMEPAGE");
});
p.TabContDiv.hide();
tabDiv.hide();
resizeDo();
$(window).unbind("resize",resize).bind("resize",resize);
}
this.AddPage=function(title,Page,PageName,fix){
var OldPage=findPageByName(PageName);
if(OldPage){
p.ChgToPage(PageName);
return;
}
p.TabContDiv.show();
tabDiv.show();
Tab.addTab(title,PageName,fix);
p.TabContDiv.append(Page);
Page.data("PageName",PageName);
p.ChgToPage(PageName);
}
this.RemovePage=function(PageName){
Tab.removeTab(PageName);
var len=p.TabContDiv.find(">div").length;
if(len==0){
p.TabContDiv.hide();
tabDiv.hide();
$(document).trigger("SHOW_HOMEPAGE");
}}
function findPageByName(PageName){
var Page=null;
p.TabContDiv.find(">div").each(function(){
if($(this).data("PageName")==PageName){
Page= $(this);
return false;
}
});
return Page;
}
this.ChgToPage=function(PageName){
p.onShow=PageName;
Tab.movetabTo(PageName);
showPage(PageName);
}
function showPage(PageName){
p.TabContDiv.find(">div").hide().removeClass("onshow");
var Page=findPageByName(PageName);
if(Page){
Page.show().addClass("onshow");
var PageAction=Page.data("action");
if(PageAction.needResize){
PageAction.resize();
}}}
var resizeTm;
function resize(){
if(resizeTm){
clearTimeout(resizeTm);
resizeTm=null;
}
resizeTm=setTimeout(resizeDo,300);
}
function resizeDo(){
var H=container.height();
Tab.resizeTab();
H-=tabDiv.outerHeight(true);
p.TabContDiv.height(H);
$(p).trigger("TAB_RESIZE",{"w":container.width(),"h":H});
}
this.getSize=function(){
return {"w":container.width(),"h":container.height()}
}}
function tabPageWindow(tabObj){
var p=this;
this.scrollBox;
this.ID="";
this.container;
this.option={};
this.needResize=false;
var ondestroy=false;
this.renew=function(content){
p.scrollBox.empty().append(content);
}
this.Show=function(content,option,fromPos,isreload){
$.extend(p.option,option);
p.container=$('<div class="contentContainer"></div>');
p.scrollBox=$('<div class="fm_tabPageBox"></div>');
p.scrollBox.css({"overflow":"hidden"});
p.container.empty().append(p.scrollBox);
p.container.data("action",p);
tabObj.AddPage(option["title"],p.container,p.ID,false);
p.scrollBox.empty().append(content).css("opacity",0);
setTimeout(function(){
p.scrollBox.css("opacity",1);
},400);
p.resize();
$(tabObj).bind("TAB_RESIZE",p.resize);
}
this.Restore =function(){
tabObj.ChgToPage(p.ID);
}
this.close=function(){
p.destroy();
tabObj.RemovePage(p.ID);
}
this.toFront=function(){
tabObj.ChgToPage(p.ID);
}
this.reload=function(){
$(document).trigger("PAGE_REFRESH",{"winid":p.ID});
}
this.clearContent=function(){
tabObj.RemovePage(p.ID);
$(tabObj).unbind("TAB_RESIZE",p.resize);
}
this.destroy=function(){
tabObj.RemovePage(p.ID);
}
this.clear=function(){
}
this.resize=function(){
if(!p.container.hasClass("onshow")){
p.needResize=true;
return;
}
p.needResize=false;
p.container.setRealSize(tabObj.TabContDiv.width(),tabObj.TabContDiv.height());
p.scrollBox.setRealSize(p.container.width(),p.container.height());
$(p).trigger("WINDOW_RESIZE");
}
}// data-option="{'name':'window_001','width':800,'height':600,'url':'pages/dataGrid_tab.html','title':'\u6307\u6325\u8c03\u5ea6\u4e2d\u5fc3','locksize':true,'fullcreen':true,'lock':true,'position':'left_top','toggle':true}"
function popOutWindow(zindex){
var p=this;
this.option={"width":0.8,"height":0.6,"title":"\u672a\u547d\u540d","minw":130,"minh":130,"topdis":0,"leftdis":0,"rightdis":0,"bottomdis":0};
this.popWin;
var WindowDrag;
this.PageCondition;
this.container;
this.scrollBox;
this.ID="";
var eventTm;
var mask;
var padingdis=[0,0];
var resizeDrag;
this.baseIndex=zindex?zindex:ZINDEX["pop"];
var activeIndex=zindex?zindex+2:ZINDEX["popActive"];
var lockmaskIndex=zindex?zindex-1:ZINDEX["popLockMask"];
var frontClass=ZINDEX["frontClass"];
var realH;
var realW;
if(typeof GLOBAL=="object" && GLOBAL["windis"]){
$.extend(p.option,GLOBAL["windis"]);
p.option["topdis"]+=0;
p.option["leftdis"]+=0;
p.option["rightdis"]+=20;
p.option["bottomdis"]+=15;
realW=$(window).width()-p.option["leftdis"]-p.option["rightdis"];
realH=$(window).height()-p.option["topdis"]-p.option["bottomdis"];
}
this.renew=function(content){
p.scrollBox.empty().append(content);
}
this.Show=function(content,option,fromPos,isreload){
$.extend(p.option,option);
p.option["width"]=(p.option["width"]>1)?p.option["width"]:Math.floor(realW*p.option["width"]);
p.option["height"]=(p.option["height"]>1)?p.option["height"]:Math.floor(realH*p.option["height"]);
p.option["width"]=(p.option["width"]>p.option["minw"])?p.option["width"]:p.option["minw"];
p.option["height"]=(p.option["height"]>p.option["minh"])?p.option["height"]:p.option["minh"];
p.popWin=$('<div class="popoutWindow">'
+'<h1 class="dragBar" title="'+p.option["title"]+'" >'
+'<i class="fa fa-th-large"></i><strong>'+(p.option["title"].substr(0,20))+'</strong>'
+'<span>'
+'<a class="reloadbut"><i class="fa fa-refresh"></i></a>'
+'<a class="minbut"><i class="fa fa-minus"></i></a>'
+'<a class="closebut"><i class="fa fa-times"></i></a>'
+'</span>'
+'</h1>'
+'<div class="contentContainer">'
+'</div>'
+'</div>'
);
p.popWin.css("z-index",p.baseIndex);//p.option["zindex"]);
p.scrollBox=$('<div class="scrollContent"></div>');
p.scrollBox.empty().append(content);
p.container=p.popWin.find(".contentContainer");
p.container.append(p.scrollBox).css("opacity",0);
p.popWin.data("obj",p);
$("body").append(p.popWin);
if(!p.option["locksize"]){
var dragRsize=$('<div class="dragSizeBox"><a></a></div>');
p.popWin.append(dragRsize);
dragRsize.css({"position":"relative","height":"0px","overflow":"visible"})
.find("a").css({"position":"absolute","top":"-10px","right":"-10px","width":"20px","height":"20px","cursor":"nw-resize"});
resizeDrag=new dragWindowSize(dragRsize.find(">a"),p.popWin);
$(resizeDrag).bind("DRAG_RESIZE",function(e,size){
size["width"]-=20;
size["height"]-=15;
setSize(size["width"],size["height"]);
p.option["width"]=	size["width"];
p.option["height"]=size["height"];
})
}
popout(fromPos);
}
function popout(fromPos){
if(fromPos){
p.popWin.css({"top":fromPos[1]+"px","left":fromPos[0]+"px"});
}
padingdis=[(p.scrollBox.outerWidth(true)-p.scrollBox.width()),(p.scrollBox.outerHeight(true)-p.scrollBox.height())];
setSize(p.option["width"],p.option["height"]);
var topos;
if(typeof p.option["position"]=="string"){
switch(p.option["position"]){
case "center_top":
topos=[Math.floor(($(window).width()-p.option["width"])/2),p.option["topdis"]];
break;
case "center_bottom":
topos=[Math.floor(($(window).width()-p.option["width"])/2),($(window).height()-p.option["height"])-p.option["bottomdis"]];
break;
case "left_top":
topos=[p.option["leftdis"],p.option["topdis"]];
break;
case "left_bottom":
topos=[p.option["leftdis"],($(window).height()-p.option["height"])-p.option["bottomdis"]];
break;
case "left_center":
topos=[p.option["leftdis"],Math.floor(($(window).height()-p.option["height"])/2)];
break;
case "right_top":
topos=[($(window).width()-p.option["width"])-p.option["rightdis"],p.option["leftdis"]];
break;
case "right_bottom":
topos=[($(window).width()-p.option["width"])-p.option["rightdis"],($(window).height()-p.option["height"])-p.option["bottomdis"]];
break;
case "right_center":
topos=[($(window).width()-p.option["width"])-p.option["rightdis"],Math.floor(($(window).height()-p.option["height"])/2)];
break;
default:
topos=[Math.floor(($(window).width()-p.option["width"])/2),Math.floor(($(window).height()-p.option["height"])/2)];
break;
}
}else if($.isArray(p.option["position"])){
topos=p.option["position"];
}else{
topos=[Math.floor(($(window).width()-p.option["width"])/2),Math.floor(($(window).height()-p.option["height"])/2)];
}
setPos(topos[0],topos[1]);
setTimeout(function(){p.container.css("opacity",1);},300);
installAction();
var dragBar=p.popWin.find(".dragBar");
WindowDrag=new dragDivObj();
WindowDrag.install(dragBar,p.popWin);
if(p.option["fullscreen"]){
p.fullScreen();
}
p.toFront();
if(p.option["lock"]){
mask=new popMask(lockmaskIndex);
mask.mask.bind("mouseenter",p.toFront);
}}
function setSize(w,h,minirize){
if(!p.popWin){
p.destroy();
return;
}
w=(w>realW)?(realW):w;
h=(h>realH)?(realH):h;		 // realH-
if(!minirize){
w=(w<p.option["minw"])?p.option["minw"]:w;
h=(h<p.option["minh"])?p.option["minh"]:h;
}
var contH=(h-p.popWin.find(".dragBar").outerHeight(true));
if(browserIsIE6 || browserIsIE7 || browserIsIE8 || browserIsIE9){
p.popWin.animate({"width":w+"px","height":h+"px"},500);
p.container.animate({"height":contH+"px","width":w+"px"},500)
.find(".scrollContent").animate({"height":(contH-padingdis[1])+"px","width":(w-padingdis[0])+"px"},500);
}else{
p.popWin.css({"width":w+"px","height":h+"px"});
p.container.css({"height":contH+"px","width":w+"px"})
.find(".scrollContent").css({"height":(contH-padingdis[1])+"px","width":(w-padingdis[0])+"px"});
}
eventTm?clearTimeout(eventTm):null;
eventTm=setTimeout(function(){
$(p).trigger("WINDOW_RESIZE",{"windowname":p.ID,"width":p.container.width(),"height":p.container.height()});
},600);
}
function setPos(x,y){
p.popWin.addClass("divMove");
p.popWin.css({"left":(typeof x=="string")?x:((x<0)?0:x+"px"),
"top":(typeof y=="string")?y:((y<0)?0:y+"px")});
}
var backpos;
function installAction(){
p.popWin.find(".dragBar a.minbut").bind("click",function(){
p.popWin.removeClass("max");
p.popWin.addClass("mini");
setSize(100,32,true);
$(p).trigger("WINDOW_MINI");
WindowDrag.Enabled=true;
if(backpos){
setPos(backpos[0],backpos[1]);
backpos=null;
}
})
p.popWin.find(".dragBar").bind("dblclick",function(){
$(window).unbind("resize",resize);
if(p.popWin.hasClass("mini") || p.popWin.hasClass("max")){
p.normal();
}else{
p.fullScreen();
}
eventTm?clearTimeout(eventTm):null;
eventTm=setTimeout(function(){
$(p).trigger("WINDOW_RESIZE",{"windowname":p.ID,"width":p.container.width(),"height":p.container.height()});
},800);
})
p.popWin.find(".dragBar a.reloadbut").bind("click",p.reload);
p.popWin.find(".dragBar a.closebut").bind("click",p.destroy);
p.popWin.find(".dragBar").bind("mousedown",function(){
p.popWin.removeClass("divMove");
p.toFront();
})
p.popWin.bind("mousedown",function(){
p.toFront();
})
}
this.fullScreen=function(){
if(!p.popWin){
p.destroy();
return;
}
resizeDo();
backpos=[p.popWin.css("left"),p.popWin.css("top")];
setPos(0,0);
p.popWin.removeClass("mini");
p.popWin.addClass("max").css({"left":p.option["leftdis"]+"px","top":p.option["topdis"]+"px","bottom":p.option["bottomdis"]+"px","right":p.option["rightdis"]+"px"});
WindowDrag.Enabled=false;
$(window).unbind("resize",resize).bind("resize",resize);
}
this.normal=function(){
if(!p.popWin){
p.destroy();
return;
}
setSize(p.option["width"],p.option["height"]);
if(backpos){
setPos(backpos[0],backpos[1]);
backpos=null;
}
p.popWin.removeClass("max");
p.popWin.removeClass("mini");
WindowDrag.Enabled=true;
}
var resizeTm;
function resize(){
if(resizeTm){
clearTimeout(resizeTm);
resizeTm=null;
}
resizeTm=setTimeout(resizeDo,100);
}
function resizeDo(){
realW=$(window).width()-p.option["leftdis"]-p.option["rightdis"];
realH=$(window).height()-p.option["topdis"]-p.option["bottomdis"];
setSize(realW,realH);
}
this.Restore=function(){
p.toFront();
p.normal();
}
this.reload=function(){
$(document).trigger("PAGE_REFRESH",{"winid":p.ID});
}
this.toFront=function(){
if(!p.popWin){
p.destroy();
return;
}
$("body").find("."+frontClass).each(function(){
var winobj=$(this).data("obj");
try{$(this).css("z-index",winobj.baseIndex).removeClass(frontClass);}catch(e){}
})
p.popWin.css("z-index",activeIndex).addClass(frontClass);
}
this.clear=function(){
p.popWin.empty();
}
this.clearContent=function(){
if(p.popWin){
p.popWin.del();
p.popWin=null;
}else{
return;
}
if(mask){
mask.destroy();
mask=null;
}
if(eventTm){
clearTimeout(eventTm);
eventTm=null;
}
if(WindowDrag){
WindowDrag.destroy();
WindowDrag=null;
}
if(resizeDrag){
$(resizeDrag).unbind();
resizeDrag.destroy();
resizeDrag=null;
}
$(window).unbind("resize",resize);
$(p).trigger("WINDOW_CLOSE");
}
this.destroy=function(nomove){
$(p).trigger("WINDOW_BEFORE_CLOSE");
$(document).trigger("WINDOW_DESTROY",{"windowName":p.ID});
}
}function slideWindow(index){
var p=this;
this.container=SLIDER.container(index);
this.ID="";
this.scrollBox;
var defaultOption={"width":200,"maxw":null,"minw":100,"title":"\u672a\u547d\u540d","locksize":false,"side":"left"};
this.option;
var realPageWidth;
var realPageHeight;
var ondestroy=false;
this.renew=function(content){
p.scrollBox.empty().append(content);
}
this.Show=function(content,option){
p.option={};
$.extend(p.option,defaultOption,option);
p.scrollBox=p.container.find(".scrollContent");
p.scrollBox.empty().append(content);
p.container.css("opacity",0);
setTimeout(function(){
p.container.css("opacity",1);
},400);
p.option["width"]=(p.option["fullscreen"])?SLIDER.maxWidth():p.option["width"]||300;
p.option["dragable"]=(p.option["dragable"]==false)?false:true;
SLIDER.dragable=p.option["dragable"];
SLIDER.lockwidth=p.option["lockwidth"]?true:false;
SLIDER.slideTo(index,p.option["width"]||300);
$(SLIDER).unbind("RESIZE",p.resize).unbind("SLIDE_CLOSE",p.destroy).unbind("SLIDE_RELOAD",p.reload).unbind("SLIDE_DRAG");
$(SLIDER).bind("RESIZE",p.resize).bind("SLIDE_CLOSE",p.destroy).bind("SLIDE_RELOAD",p.reload).bind("SLIDE_DRAG",p.resize);
}
var resizeTm;
this.resize=function(){
if(resizeTm){
clearTimeout(resizeTm);
resizeTm=null;
}
resizeTm=setTimeout(resizeDo,100);
}
function resizeDo(){
$(p).trigger("WINDOW_RESIZE");
}
this.Restore=function(){
SLIDER.dragable=p.option["dragable"];
SLIDER.slideTo(index,p.option["width"]||300);
}
this.reload=function(e,pos){
if(p.option["side"]==pos["pos"]){
$(document).trigger("PAGE_REFRESH",{"winid":p.ID});
}}
this.clear=function(){
p.container.clear();//.empty();
}
this.clearContent=function(){
p.scrollBox.clear();//.empty();
if(index!=1){
SLIDER.slideTo(1);
}
var mapBox=SLIDER.container("map");
mapBox.find(">*").css({"float":"none"}).setRealSize(SLIDER.pageWidth());
}
this.destroy=function(nomove){
if(ondestroy){
return;
}
ondestroy=true;
$(document).trigger("WINDOW_DESTROY",{"windowName":p.ID});
ondestroy=false;
}}
function PageSlider(container){
var p=this;
var pages;
this.blankDis=30;
var dragLeft;
var dragRight;
var defaultIndex=1;
var nowSlide={"id":1,"w":0};
this.option={"topdis":0,"leftdis":0,"rightdis":0,"bottomdis":0};
this.dragable=true;
this.lockwidth=false;//true\u5bbd\u5ea6\u4e0d\u8ddf\u968f
var pageWraper;
var SlideWraper;
var realPageWidth;//=$(window).width();
var realPageHeight;//=$(window).height();
var baseIndex=ZINDEX["slide"];
if(typeof GLOBAL=="object" && GLOBAL["windis"]){
$.extend(p.option,GLOBAL["windis"]);
}
this.install=function(){
pages=container.find(">*");
pageWraper=$('<div></div>');
SlideWraper=$('<div></div>');
SlideWraper.append(pages);
pageWraper.append(SlideWraper);
container.append(pageWraper);
container.css({"position":"fixed","top":p.option["topdis"]+"px","left":p.option["leftdis"]+"px","bottom":p.option["bottomdis"]+"px","right":p.option["rightdis"]+"px","z-index":baseIndex});
pageWraper.css({"position":"relative","overflow":"hidden"});
SlideWraper.css({"position":"absolute","overflow":"hidden"});
resizeWraper();
pages.css({"float":"left","position":"relative"});
pages.each(function(id){
var page=$(this);
page.css("z-index",Math.abs(id-defaultIndex));
if(id==defaultIndex){
page.find(">div.contentContainer").css({"position":"absolute","top":"0px","bottom":"0px","left":"0px","right":"0px"});
return;
}
var dragBar=$('<div class="dragbar"></div>');
var closeBar=$('<div class="closebar"><i class="fa '+(id>defaultIndex?"fa-chevron-right":"fa-chevron-left")+'"></i></div>');
var reloadBar=$('<div class="refreshbar" rel="'+(id>defaultIndex?"right":"left")+'"><i class="fa fa-refresh"></i></div>');
var contentbox=$('<div class="scrollContent"></div>');
var pageBox=page.find(">div.contentContainer");
pageBox.append(contentbox);
page.append(dragBar).append(closeBar).append(reloadBar);
closeBar.bind("click",p.close);
reloadBar.bind("click",reloadPage);
if(id!=defaultIndex){
var  resizeFun=function(dragDis,isEnd){
if(!p.dragable){return}
var windir=id>defaultIndex?"right":"left";
SlideWraper.css("transition","");
if(windir=="right"){
SlideWraper.css("left",-realPageWidth-(realPageWidth-dragDis)+"px");
}else if(windir=="left"){
SlideWraper.css("left",-(realPageWidth-dragDis)+"px");
}
if(isEnd){
var pagew=realPageWidth;
if(windir=="right"){
pagew=(realPageWidth-dragDis);
pageBox.css({"left":"0px"});
}else if(windir=="left"){
pagew=dragDis;
pageBox.css({"left":(realPageWidth-dragDis)+"px"});
}
if(p.lockwidth){ 
pagew=nowSlide.w;
if(windir=="left"){
pageBox.css({"left":(realPageWidth-pagew)+"px"});
}}
pageBox.setRealSize(pagew,null);
$(p).trigger("SLIDE_DRAG",{"side":windir});
}}}
if(id>defaultIndex){
pageBox.css({"position":"absolute","top":"0px","bottom":"0px","left":"0px","width":"100%"});
dragBar.css({"position":"absolute","top":"0px","bottom":"0px"});
closeBar.css({"position":"absolute","top":"0px","left":"-20px"});
reloadBar.css({"position":"absolute","top":"28px","left":"-20px"});
page.css("padding-right",p.blankDis+"px");
dragBar.css({"left":"-5px"});
dragRight=new DragResize(dragBar,{"dis":p.option["leftdis"],"min":p.blankDis,"max":(realPageWidth-p.blankDis)},resizeFun);
dragRight.install();
}else if(id<defaultIndex){
pageBox.css({"position":"absolute","top":"0px","bottom":"0px","right":"0px","width":"100%"});
dragBar.css({"position":"absolute","top":"0px","bottom":"0px"});
closeBar.css({"position":"absolute","top":"0px","right":"-20px"}).show();
reloadBar.css({"position":"absolute","top":"28px","right":"-20px"});
page.css("padding-left",p.blankDis+"px");
dragBar.css({"right":"-5px"});
dragLeft=new DragResize(dragBar,{"dis":p.option["leftdis"],"min":p.blankDis,"max":(realPageWidth-p.blankDis)},resizeFun);
dragLeft.install();
}
})
SlideWraper.find(".closebar,.dragbar,.refreshbar").hide();
resize();
$(window).unbind("resize",resize).bind("resize",resize);
SlideWraper.css("left",-(defaultIndex*realPageWidth)+"px");
}
function resizeWraper(){
realPageWidth=$(window).width()-(p.option["leftdis"]+p.option["rightdis"]);
realPageHeight=$(window).height()-(p.option["topdis"]+p.option["bottomdis"]);
pageWraper.height(realPageHeight).width(realPageWidth);
SlideWraper.height(realPageHeight).width(pages.length*realPageWidth);
}
this.pageWidth=function(){
return realPageWidth;
}
this.maxWidth=function(){
return realPageWidth-p.blankDis;//-(p.option["leftdis"]+p.option["rightdis"]);
}
function reloadPage(){
$(p).trigger("SLIDE_RELOAD",{"pos":$(this).attr("rel")});
}
this.close=function(){
p.hide();
$(p).trigger("SLIDE_CLOSE");
}
this.container=function(type){
switch(type){
case "left":
case 0:
return pages.eq(0).find(">.contentContainer");
break;
case "right":
case 2:
return pages.eq(2).find(">.contentContainer");
break;
case "center":
case 1:
return pages.eq(1).find(">.contentContainer");
break;
case "map":
return pages.eq(1);
break;
}}
this.hide=function(){
p.slideTo(1);
}
this.slideTo=function(index,width,direct,fitScreen){   
width=width?width:realPageWidth;
nowSlide={"id":index,"w":width};
if(!direct){
SlideWraper.css("transition","left 0.5s ease-out");
}else{
SlideWraper.css("transition","");
}
var nowPos=-realPageWidth;//-$(window).width();//container.css("left");
width=(width>p.maxWidth())?p.maxWidth():width;
SlideWraper.find(".closebar,.dragbar,.refreshbar").hide();
if(index>defaultIndex){	 //right
pages.eq(2).find(".closebar,.refreshbar").show();
(!p.dragable)?	pages.eq(2).find(".dragbar").hide():pages.eq(2).find(".dragbar").show();
if(browserIsIE6 || browserIsIE7 || browserIsIE8 || browserIsIE9){
SlideWraper.stop().animate({"left":(nowPos-width)+"px"},500);
}else{
SlideWraper.css("left",(nowPos-width)+"px");
}
}else if(index<defaultIndex){ //left
if(browserIsIE6 || browserIsIE7 || browserIsIE8 || browserIsIE9){
SlideWraper.stop().animate({"left":(nowPos+width)+"px"},500);
}else{
SlideWraper.css("left",(nowPos+width)+"px");
}
pages.eq(0).find(">.contentContainer").css({"left":(realPageWidth-width)+"px"});
pages.eq(0).find(".closebar,.refreshbar").show();
(!p.dragable)?pages.eq(0).find(".dragbar").hide():pages.eq(0).find(".dragbar").show();
}else{	 //center
if(browserIsIE6 || browserIsIE7 || browserIsIE8 || browserIsIE9){
SlideWraper.stop().animate({"left":nowPos+"px"},500);
}else{
SlideWraper.css("left",nowPos+"px");
$(p).trigger("SLIDE_OUT",{"side":"center"});
}
pages.find("div.scrollContent,>div.contentContainer").css("width","auto");
}
p.fitScreen(direct);
}
this.fitScreen=function(direct){
pages.eq(nowSlide["id"]).find(">div.contentContainer").width(nowSlide["w"]);
var centerContainer=pages.eq(1).find(">div.contentContainer");
if(!direct){
centerContainer.css({"transition":"left 0.5s  ease-out,right 0.5s  ease-out"});
}else{
centerContainer.css({"transition":""});
}
if(p.dragable){
centerContainer.css({"right":"0px","left":"0px","width":"auto"});
return;
}
if(nowSlide["id"]>1){
centerContainer.css({"right":"0px","left":(nowSlide["w"])+"px","width":"auto"});
}else if(nowSlide["id"]<1){
centerContainer.css({"right":(nowSlide["w"])+"px","left":"0px","width":"auto"});
}else{
centerContainer.css({"right":"0px","left":"0px","width":"auto"});
}}
function resize(){
resizeWraper();
pages.width(realPageWidth-p.blankDis).height(realPageHeight);
pages.eq(1).width(realPageWidth);
dragLeft.dragSize["min"]=p.blankDis;
dragLeft.dragSize["max"]=realPageWidth-p.blankDis;
pages.find("div.scrollContent,>div.contentContainer").setRealSize(null,realPageHeight);
dragRight.dragSize["min"]=p.blankDis;
dragRight.dragSize["max"]=realPageWidth-p.blankDis;
if(nowSlide){
p.slideTo(nowSlide["id"],nowSlide["w"],true);
}
var center=Math.floor($(window).height()/2-50);
SlideWraper.find(".closebar").css("top",center+"px");
SlideWraper.find(".refreshbar").css("top",(center+28)+"px");
$(p).trigger("RESIZE");
}
this.install();
}function sidePanel(){
var p=this;
var panel;
var resizeDrag;
this.scrollBox;
this.ID="";
this.container;
this.option={"width":200,"maxw":null,"minw":100,"title":"\u672a\u547d\u540d","locksize":false,"side":"left","topdis":0,"leftdis":0,"rightdis":0,"bottomdis":0};//,"zindex":880
this.blankDis=30;
this.dragable=true;
var realHeight;
var baseIndex=ZINDEX["panal"];
var ondestroy=false;
if(typeof GLOBAL=="object" && GLOBAL["windis"]){
$.extend(p.option,GLOBAL["windis"]);
realHeight=$(window).height()-p.option["topdis"]-p.option["bottomdis"];
}
this.renew=function(content){
p.scrollBox.empty().append(content);
}
this.Show=function(content,option,fromPos,isreload){
$.extend(p.option,option);
p.option["width"]=(p.option["width"]>1)?p.option["width"]:Math.floor($(window).width()*p.option["width"]);
p.option["width"]=(p.option["width"]>100)?p.option["width"]:100;
p.option["minw"]=(p.option["minw"]<100)?100:p.option["minw"];
panel=$('<div class="fm_sidePanel '+p.option["side"]+'">'
+'<div class="fm_sideTabs">'
+'<div class="dragBar"></div>'
+'<div class="titleBar noselect hand" title="'+p.option["title"]+'"><a class="destroy"><i class="fa fa-remove"></i></a>'
+((p.option["side"]=="left")?'<a class="close"><i class="fa fa-chevron-left"></i></a>':'<a class="close"><i class="fa fa-chevron-right"></i></a>')
+'<a class="refresh"><i class="fa fa-refresh"></i></a><span>'+p.option["title"]+'</span></div>'
+'</div>'
+'<div class="contentContainer">'
+'</div>'
+'</div>');
p.scrollBox=$('<div class="scrollContent"></div>');
p.scrollBox.empty().append(content);
p.container=panel.find(".contentContainer");
p.container.append(p.scrollBox).css("opacity",0);
$("body").append(panel);
setTimeout(function(){
p.container.css("opacity",1);
},400);
panel.css({"position":"fixed","top":p.option["topdis"]+"px","z-index":baseIndex,"width":p.option["width"]+"px"});	//p.option["width"]+
panel.find(".fm_sideTabs").css({"position":"relative","height":"0px","overflow":"visible"});
panel.find(".titleBar").css({"position":"absolute","width":"24px"});
var dragBar=panel.find(".dragBar");
dragBar.hide();
if(p.option["side"]=="left"){
panel.css({"left":-p.option["width"]+"px"});
dragBar.css({"position": "absolute","right":"-5px","cursor":"w-resize"});
panel.find(".titleBar").css({"right":"-24px","border-radius":"0px 4px 4px 0px"});
}else{
panel.css({"right":-p.option["width"]+"px"});
dragBar.css({"position": "absolute","left":"-5px","cursor":"w-resize"});
panel.find(".titleBar").css({"left":"-24px","border-radius":"4px 0px 0px 4px"});
}
if(!p.option["locksize"]){
dragBar.show();
var  resizeFun=function(dragDis,isEnd){
if(!p.dragable || dragDis<p.option["minw"]){return}
if(p.option["side"]=="left"){
panel.css("width",(dragDis)+"px");
}else{
panel.css("width",($(window).width()-dragDis)+"px");
}
if(isEnd){
p.scrollBox.setRealSize(p.container.width());
p.option["width"]=p.container.width();
$(p).trigger("WINDOW_RESIZE");
}}
resizeDrag=new  DragResize(dragBar,{"min":p.option["minw"],"max":($(window).width()-p.option["minw"])},resizeFun);
resizeDrag.install();
}
panel.bind("click",p.toFront);
resizeDo();
$(window).bind("resize",resize);
p.slideOut();
panel.find(".titleBar a").bind("click",panelClick);
$(panel).data("winid",p);
p.resetBarPos();
}
this.slideOut=function(){
if(browserIsIE6 || browserIsIE7 || browserIsIE8 || browserIsIE9){
if(p.option["side"]=="left"){
panel.stop().animate({"left":p.option["leftdis"]+"px"},500);
}else{
panel.stop().animate({"right":p.option["rightdis"]+"px"},500);
}
}else{
if(p.option["side"]=="left"){
panel.css({"transition":"left  0.5s  cubic-bezier(0.86, 0, 0.03, 1),opacity 1s ease-out"});
panel.css({"left":p.option["leftdis"]+"px"});
}else{
panel.css({"transition":"right  0.5s  cubic-bezier(0.86, 0, 0.03, 1),opacity 1s ease-out"});
panel.css({"right":p.option["rightdis"]+"px"});
}}
p.toFront();
panel.find(".titleBar a").show();
if(!p.option["locksize"]){
panel.find(".dragBar").show();
}
var otherPanel=$("body").find(".fm_sidePanel."+p.option["side"]);
otherPanel.each(function(){
var Apanel=$(this);
var win=$(Apanel).data("winid");
if(win && win.ID!=p.ID){
win.close();
}
});
}
this.resetBarPos=function(){
var pna=$("body").find(".fm_sidePanel."+p.option["side"]);
var index=pna.index(panel);
var step=Math.floor(($(window).height()-100)/pna.length);
step=(step>58)?58:(step<20)?20:step;
panel.find(".titleBar").css("top",(step*index)+"px");
}
function resetAllBarPos(){
var pna=$("body").find(".fm_sidePanel."+p.option["side"]);
var step=Math.floor(($(window).height()-100)/pna.length);
step=(step>58)?58:(step<20)?20:step;
pna.each(function(index){
$(this).find(".titleBar").css("top",(step*index)+"px");
})
}
this.close=function(){
if(browserIsIE6 || browserIsIE7 || browserIsIE8 || browserIsIE9){
if(p.option["side"]=="left"){
panel.stop().animate({"left":(-p.option["width"]+p.option["leftdis"])+"px"},500);
}else{
panel.stop().animate({"right":(-p.option["width"]+p.option["rightdis"])+"px"},500);
}
}else{
if(p.option["side"]=="left"){
panel.css({"transition":"left  0.5s  cubic-bezier(0.86, 0, 0.03, 1),opacity 1s ease-out"});
panel.css({"left":(-p.option["width"]+p.option["leftdis"])+"px"});
}else{
panel.css({"transition":"right  0.5s  cubic-bezier(0.86, 0, 0.03, 1),opacity 1s ease-out"});
panel.css({"right":(-p.option["width"]+p.option["rightdis"])+"px"});
}}
panel.removeClass("open");
panel.find(".titleBar a").hide();
panel.find(".dragBar").hide();
panel.find(".titleBar").one("click",p.slideOut);
}
this.Restore =function(){
p.slideOut();
p.toFront();
panel.find(".titleBar a").show();
if(!p.option["locksize"]){
panel.find(".dragBar").show();
}}
this.toFront=function(){
if(!panel){
p.destroy();
return;
}
$("body").find(".fm_sidePanel."+p.option["side"]).css("z-index",baseIndex-1).removeClass("open");
panel.css("z-index",baseIndex+2).addClass("open");
panel.find(".titleBar").unbind();
}
function panelClick(e){
switch($(this).attr("class")){
case "close":
p.close();
return false;
break;
case "refresh":
$(document).trigger("PAGE_REFRESH",{"winid":p.ID});
return false;
break;
case "destroy":
p.destroy();
return false;
break;
}}
this.clearContent=function(){
if(resizeDrag){
$(resizeDrag).unbind();
resizeDrag.destroy();
resizeDrag=null;
}
panel.find(".titleBar").unbind().find("a").unbind();
$(window).unbind("resize",resize);
panel.unbind("click");
panel.del();
}
this.destroy=function(){
if(ondestroy){
return;
}
ondestroy=true;
$(document).trigger("WINDOW_DESTROY",{"windowName":p.ID});
resetAllBarPos();
ondestroy=false;
}
this.clear=function(){
panel.empty();
}
var resizeTm;
function resize(){
if(resizeTm){
clearTimeout(resizeTm);
resizeTm=null;
}
resizeTm=setTimeout(resizeDo,100);
}
function resizeDo(){
if(!p.scrollBox || p.scrollBox.length==0){
p.destroy();
return;
}
realHeight=$(window).height()-p.option["topdis"]-p.option["bottomdis"];
panel.setRealSize(null,realHeight)
p.container.setRealSize(null,panel.height());
p.scrollBox.setRealSize(p.container.width(),panel.height());
panel.find(".dragBar").height(realHeight);
var maxw=$(window)-p.blankDis;
p.option["maxw"]=(p.option["maxw"]>maxw)?maxw:p.option["maxw"];
$(p).trigger("WINDOW_RESIZE");
}
}
(function($) {
$.fn.DatePicker=function(){
$(this).each(installDatePicker);
}
function installDatePicker(){
$(this).data("type","dateinput");
$(this).bind("click",function(){
if($(this).attr("disabled")==true || $(this).hasClass("readonly")){
return;
}
var option=$(this).dataOptions();
var DATEPICKER=new DateTimePicker();
DATEPICKER.install($(this),option);
})
}
$.fn.DateSelector=function(){
$(this).each(installDateSelector);
}
function installDateSelector(){
$(this).bind("click",function(){
if($(this).attr("disabled")==true || $(this).hasClass("readonly")){
return;
}
var option=$(this).dataOptions();
var DATESELECTOR=new DateSelector();
DATESELECTOR.install($(this),option);
})
}
})(jQuery);
function DateTimePicker(){
this.option={
"format":"normal",  
"data":"y,m,d", 
"force2":true,
"field":["1900-1-1","2999-11-30"]  
};
this.input;
this.ID="dpicker_"+Math.floor(Math.random()*10000);
var PICKER;
this.nowSelectedDate;
var oldSelectedDate;
var defaultOrder=["dateSelectPanal","monthSelectPanal","yearSelectPanal","timeSelectPanal"];
var nowFormatStr;
var weekStr="\u4e00\u4e8c\u4e09\u56db\u4e94\u516d\u65e5";
var monthHanzistr="\u4e00\u6708,\u4e8c\u6708,\u4e09\u6708,\u56db\u6708,\u4e94\u6708,\u516d\u6708,\u4e03\u6708,\u516b\u6708,\u4e5d\u6708,\u5341\u6708,\u5341\u4e00\u6708,\u5341\u4e8c\u6708";
var minDate;
var maxDate;
var nowShowDate;
var closetimeout;
var p=this;
this.install=function(inputObj,poption){
p.input=$(inputObj);
if(poption){
$.extend(p.option,poption);
}
resetFormat();
minDate=getLimited(p.option["field"][0],true);
maxDate=getLimited(p.option["field"][1],false);
$(".dateTimePicker").remove();
PICKER=$('<div class="dateTimePicker" id="'+p.ID+'"><div class="selectorPanal"></div></div>');
PICKER.css({"visibility":"hidden"});
$("body").append(PICKER);
PICKER.css({"min-width":(inputObj.outerWidth()-7)+"px"});
if(document.all){
PICKER.prepend($('<div class="relpos" style="z-index:-1"><iframe width="210" height="200" frameborder="none"></iframe></div>'));
PICKER.find("iframe").show();
}
PICKER.unbind().bind("mouseenter",clearCloseTimeout).bind("mouseleave",setCloseTimeout).bind("mousedown",stopEvent);
var defaultdate=trim(p.input.val());
p.nowSelectedDate=getDateFromStr(defaultdate);
if(!p.nowSelectedDate || !p.nowSelectedDate.getFullYear()){
p.nowSelectedDate=new Date();
}
if(p.nowSelectedDate>maxDate){
p.nowSelectedDate=cloneDate(maxDate);
}else if(p.nowSelectedDate<minDate){
p.nowSelectedDate=cloneDate(minDate);
}
oldSelectedDate=cloneDate(p.nowSelectedDate);
nowShowDate=cloneDate(p.nowSelectedDate);
creatPannal(nowShowDate);
inputObj.unbind("mousemove").bind("mousemove",stopEvent);
PICKER.bind("mousemove",stopEvent).bind("mousewheel",stopEvent);
showSelceted(nowShowDate);
$(document).unbind("mousemove",setCloseTimeout).one("mousemove",setCloseTimeout).one("mousedown",p.destroy);
resetThisPos();
PICKER.css({"visibility":"inherit"});
$(window).bind("resize",resetThisPos).bind("scroll",resetThisPos).bind("mousewheel",p.destroy);
}
function getLimited(limt,ismini){
if(limt){
if(typeof limt=="string"){
return getDateFromFormatStr(limt);
}else if(typeof limt=="object"){
var thedate=new Date();
limt["y"]?thedate.setYear(thedate.getFullYear()+parseInt(limt["y"])||0):null;
limt["m"]?thedate.setMonth(thedate.getMonth()+parseInt(limt["m"])||0):null;
limt["d"]?thedate.setDate(thedate.getDate()+parseInt(limt["d"])||0):null;
limt["h"]?thedate.setHours(thedate.getHours()+parseInt(limt["h"])||0):null;
limt["t"]?thedate.setMinutes(thedate.getMinutes()+parseInt(limt["t"])||0):null;
limt["s"]?thedate.setSeconds(thedate.getSeconds()+parseInt(limt["s"])||0):null;
return 	thedate;
}
}else if(limt==0){
return new Date();
}
if(ismini){
return new Date(1900,0,1);
}else{
return new Date(3000,0,1);
}}
function stopEvent(e){
e.stopPropagation();
}
function clearCloseTimeout(){
if(closetimeout){
clearTimeout(closetimeout);
closetimeout=null;
}}
function setCloseTimeout(){
clearCloseTimeout();
closetimeout=setTimeout(function(){PICKER.fadeOut("normal",p.destroy)},3000);
}
function resetThisPos(){
if(PICKER){
var poppos=p.input.offset();
var footSpace=$(window).height()-poppos.top;
if(footSpace<PICKER.outerHeight()+20){
PICKER.css({"left":(poppos.left)+"px","top":(poppos.top-PICKER.outerHeight()+p.input.outerHeight())+"px"});
}else{
PICKER.css({"left":(poppos.left)+"px","top":(poppos.top)+"px"});
}
}else{
p.destroy();
}}
this.destroy=function(){
$(window).unbind("resize",resetThisPos).unbind("scroll",resetThisPos);
$(document).unbind("mousemove",setCloseTimeout);
clearCloseTimeout();
if(PICKER){
PICKER.del();//.unbind().empty().remove();
PICKER=null;
}
p.ID=null;
}
function creatPannal(nowdate){
var datebox=$('<div class="selectedDateContainer"></div>');
var timebox=$('<div class="selectedTimeContainer"></div>');
if(p.option["data"].indexOf("h")>-1 || p.option["data"].indexOf("t")>-1 || p.option["data"].indexOf("s")>-1 ){
PICKER.prepend(timebox).find(".selectorPanal").append($('<div id="timeSelectPanal">'+timeselectorStr+'</div>'));
var col=PICKER.find("#timeSelectPanal tr:eq(0)").find("td").length;
var timAddPan=$('<tr class="hd"><td colspan="'+col+'" id="timeAddPannal"></td></div>')
PICKER.find("#timeSelectPanal tr:last").before(timAddPan);
}
if(p.option["data"].indexOf("y")>-1 || p.option["data"].indexOf("m")>-1 || p.option["data"].indexOf("d")>-1 ){
PICKER.prepend(datebox);
}
PICKER.prepend($('<div class="smallClosebut"><div></div></div>'));
for(var i=0;i<p.option["data"].length;i++){
switch(p.option["data"].substr(i,1)){
case "y":
datebox.append("<span id=\"selected_year\"></span>");
var yearSelector=$('<div id="yearSelectPanal"></div>');
PICKER.find(".selectorPanal").append(yearSelector);
break;
case "m":
datebox.append("<span id=\"selected_month\"></span>");
var monthSelector=$('<div id="monthSelectPanal"></div>');
PICKER.find(".selectorPanal").append(monthSelector);
break;
case "d":
datebox.append("<span id=\"selected_date\"></span>");
var dateSelector=$('<div id="dateSelectPanal"></div>');
PICKER.find(".selectorPanal").append(dateSelector);
break;
case "h":
timebox.append("<span id=\"selected_hours\"></span>");
PICKER.find("#timeSelectPanal tr").find("td:eq(0)").addClass("toremove").find("span").attr("rel","hours");
break;
case "t":
timebox.append("<span id=\"selected_minutes\"></span>");
PICKER.find("#timeSelectPanal tr").find("td:eq(1) ,  td:eq(2) ").addClass("toremove").find("span").attr("rel","minutes");;
break;
case "s":
timebox.append("<span id=\"selected_seconds\"></span>");
PICKER.find("#timeSelectPanal tr").find("td:eq(3),td:eq(4)").addClass("toremove").find("span").attr("rel","seconds");;
break;
}}
if(p.option["data"].indexOf("d")>-1){
PICKER.	find("#dateSelectPanal").before($('<div class="chgDatePagebut" id="dateChangeBut"><span class="pre"></span> <span></span></div>'));
}
if(p.option["data"].indexOf("y")>-1){
PICKER.	find("#yearSelectPanal").before($('<div class="chgDatePagebut" id="yearChangeBut"><span class="pre"></span> <span></span></div>'));
}
if(PICKER.find("#timeSelectPanal tr:eq(1) td:eq(0)").html()==":"){
PICKER.find("#timeSelectPanal tr").find("td:eq(0)").remove();
}
PICKER.find("#timeSelectPanal tr td").each(function(){
if(!$(this).hasClass("toremove")){
$(this).remove();
}else{
$(this).removeClass("toremove");
}
})	;
for(var j=0;j<defaultOrder.length;j++){
if(PICKER.find(".selectorPanal #"+defaultOrder[j]).length>0){
PICKER.find(".selectorPanal #"+defaultOrder[j]).show();
break;
}}
PICKER.append($('<div class="DateButsPanal"><span id="picker_cleardate">\u6e05\u7a7a</span><span id="picker_confirmdate">\u786e\u5b9a</span><span id="picker_closedate">\u5173\u95ed</span></div>'));
p.setPickerPannal(nowdate);
if(p.option["data"].indexOf("h")>-1){
timAddPan.find("td#timeAddPannal").append($('<div id="hourSelectPanal" class="hd">'+hourselectorStr(1,24,8)+'</div>'));
}
if(p.option["data"].indexOf("t")>-1 ){
timAddPan.find("td#timeAddPannal").append($('<div id="minuteSelectPanal" class="hd">'+hourselectorStr(5,60,6)+'</div>'));
}
if(p.option["data"].indexOf("s")>-1){
timAddPan.find("td#timeAddPannal").append($('<div id="secondSelectPanal" class="hd">'+hourselectorStr(5,60,6)+'</div>'));
}
PICKER.	find(".chgDatePagebut span").unbind().bind("click",changePannal);
bindAction();
PICKER.find("#timeSelectPanal td span").unbind().bind("click",changeTime);
PICKER.find("#timeSelectPanal td p").unbind().bind("click",showPartSelector);
PICKER.find(".selectorPanal>div[class=chgDatePagebut]").hide();
PICKER.find(".selectorPanal>div[class!=chgDatePagebut]").hide().css({"background-color":"#fff"});
PICKER.find(".smallClosebut div").unbind().bind("click",p.destroy);
PICKER.find(".DateButsPanal span").bind("click",pannalButClick);
if(p.option["data"].indexOf("d")>-1){
nowOnshow=PICKER.find("#dateSelectPanal,.chgDatePagebut[id=dateChangeBut]");
}else{
switch(p.option["data"].replace(/,/g,"").substr(p.option["data"].replace(/,/g,"").length-1,1)){
case "s":
case "t":
case "h":
nowOnshow=PICKER.find("#timeSelectPanal");
break;
case "d":
nowOnshow=PICKER.find("#dateSelectPanal,.chgDatePagebut[id=dateChangeBut]");
break ;
case "m":
nowOnshow=PICKER.find("#monthSelectPanal");
break ;
case "y":
nowOnshow=PICKER.find("#yearSelectPanal,.chgDatePagebut[id=yearChangeBut]");
break ;
}}
nowOnshow.show();
}
function pannalButClick(){
var id=$(this).attr("id");
switch(id){
case "picker_closedate":
p.destroy();
break;
case "picker_confirmdate":
confirmSelected();
break;
case "picker_cleardate":
p.input.val("");
try{
ev = document.createEvent("HTMLEvents");
ev.initEvent("change", false, true);
p.input.get(0).dispatchEvent(ev);
}catch(e){
if(document.all){//IE6\u89e6\u53d1change
p.input.get(0).fireEvent('onchange');
}}
p.destroy();
break;
}}
function confirmSelected(){
var datestr=formatDate(p.nowSelectedDate);
p.input.val(datestr);
try{
ev = document.createEvent("HTMLEvents");
ev.initEvent("change", false, true);
p.input.get(0).dispatchEvent(ev);
}catch(e){
if(document.all){//IE6\u89e6\u53d1change
p.input.get(0).fireEvent('onchange');
}}
p.destroy();
}
function showPartSelector(){
var id=$(this).attr("id");
var targte=$(this);
if(targte.hasClass("onshow")){
hideAddTimePannal();
return;
}
PICKER.find("#timeSelectPanal .onshow").removeClass("onshow");
var setpart;
var setValue=function(){
var num=$(this).find("span").html();
setpart(num);
targte.html(format0(num+"",2,"0"));
if(p.nowSelectedDate<minDate || p.nowSelectedDate>maxDate){
targte.addClass("disabled");
}else{
targte.removeClass("disabled");
}
p.nowSelectedDate=(p.nowSelectedDate<minDate)?cloneDate(minDate):p.nowSelectedDate;
p.nowSelectedDate=(p.nowSelectedDate>maxDate)?cloneDate(maxDate):p.nowSelectedDate;
showSelceted(p.nowSelectedDate);
tdpicker.slideUp("fast",function(){tdpicker.parent().parent().hide()});
targte.removeClass("onshow");
}
var tdpicker;
switch(id){
case "select_hours":
tdpicker=PICKER.find("#hourSelectPanal");
setpart=function(data){p.nowSelectedDate.setHours(data)};
break;
case  "select_minutes":
tdpicker=PICKER.find("#minuteSelectPanal");
setpart=function(data){p.nowSelectedDate.setMinutes(data)};
break;
case  "select_seconds":
tdpicker=PICKER.find("#secondSelectPanal");
setpart=function(data){p.nowSelectedDate.setSeconds(data)};
break;
}
tdpicker.parent().parent().show().find("div").hide();
tdpicker.slideDown("fast").find("td").unbind().bind("click",setValue);
targte.addClass("onshow");
}
function hideAddTimePannal(){
PICKER.find("#timeSelectPanal .onshow").removeClass("onshow");
PICKER.find("#timeAddPannal").parent().hide();
}
function changeTime(){
var dir=0;
if($(this).html()=="+"){
dir=1;
}else if($(this).html()=="-"){
dir=-1;
}else{
return;
}
var type=$(this).attr("rel");
setTimeTo(type,dir);
}
function setTimeTo(type,dis){
var targ="";
var val=0;
var maxval=0;
var resetFun;
switch(type){
case "hours":
targ=PICKER.find("#timeSelectPanal  #select_hours");
maxval=24;
resetFun=function(num){p.nowSelectedDate.setHours(num);}
break;
case "minutes":
targ=PICKER.find("#timeSelectPanal  #select_minutes");
maxval=60;
resetFun=function(num){p.nowSelectedDate.setMinutes(num);}
break;
case "seconds":
targ=PICKER.find("#timeSelectPanal  #select_seconds");
resetFun=function(num){p.nowSelectedDate.setSeconds(num);}
maxval=60;
break;
}
val=parseInt(targ.html());
val+=dis;
if(val>=maxval){
val=0;
}else if(val<0){
val=maxval-1;
}
targ.html(format0(val,2,"0"));
resetFun(val);
if(p.nowSelectedDate<minDate || p.nowSelectedDate>maxDate){
targ.addClass("disabled");
}else{
targ.removeClass("disabled");
}
p.nowSelectedDate=(p.nowSelectedDate<minDate)?cloneDate(minDate):p.nowSelectedDate;
p.nowSelectedDate=(p.nowSelectedDate>maxDate)?cloneDate(maxDate):p.nowSelectedDate;
showSelceted(p.nowSelectedDate);
}
function bindAction(){
PICKER.find("#yearSelectPanal tr td").unbind().bind("click",setYearValue);
PICKER.find("#monthSelectPanal tr td").unbind().bind("click",setMonthValue);
PICKER.find("#dateSelectPanal tr td").unbind().bind("click",setDateValue);
PICKER.find(".selectedDateContainer span,.selectedTimeContainer span").unbind().bind("click",showPannalHandle)	;
}
var nowOnshow;
var nowshowid;
function showPannalHandle(){
var id=$(this).attr("id");
showPannal(id);
}
function showPannal(id){
if(nowshowid==id || (("selected_hours selected_minutes selected_seconds").indexOf(id)>-1 && ("selected_hours selected_minutes selected_seconds").indexOf(nowshowid)>-1)){
return;
}
nowshowid=id;
if(nowOnshow){
nowOnshow.slideUp("fast");
}
switch(id){
case "selected_hours":
case "selected_minutes":
case "selected_seconds":
nowOnshow=PICKER.find("#timeSelectPanal");
break;
case "selected_year":
nowOnshow=PICKER.find("#yearSelectPanal,.chgDatePagebut[id=yearChangeBut]");
break;
case "selected_month":
nowOnshow=PICKER.find("#monthSelectPanal");
break;
case "selected_date":
nowOnshow=PICKER.find("#dateSelectPanal,.chgDatePagebut[id=dateChangeBut]");
break;
}
if(document.all){
nowOnshow.slideDown("fast",function(){nowOnshow.css({"overflow":"visible"})});//IE6 BUG CSS
}else{
nowOnshow.slideDown("fast");
}}
function setYearValue(){
var num=parseInt($(this).find("span").html());
if(!num){
return;
}
PICKER.find("#yearSelectPanal tr td.selectedtd").removeClass("selectedtd");
$(this).addClass("selectedtd");
p.nowSelectedDate.setYear(num);
p.setDateTime();
if(p.option["data"].substr(p.option["data"].length-1,1)=="y"){
confirmSelected();
return;
}else if(p.option["data"].indexOf("m")>-1){
showPannal("selected_month");
}
PICKER.find("#monthSelectPanal").html(monthselectorStr(p.nowSelectedDate));
PICKER.find("#dateSelectPanal").html(dateselectorStr(new Date(p.nowSelectedDate.getFullYear(),p.nowSelectedDate.getMonth(),p.nowSelectedDate.getDate())));
bindAction();
}
function setMonthValue(){
PICKER.find("#monthSelectPanal tr td.selectedtd").removeClass("selectedtd");
$(this).addClass("selectedtd");
var num=parseInt($(this).find("span").attr("rel"));
p.nowSelectedDate.setMonth(num);
p.setDateTime();
if(p.option["data"].substr(p.option["data"].length-1,1)=="m"){
confirmSelected();
return;
}else if(p.option["data"].indexOf("d")>-1){
showPannal("selected_date");
}
PICKER.find("#monthSelectPanal").html(monthselectorStr(p.nowSelectedDate));
PICKER.find("#dateSelectPanal").html(dateselectorStr(new Date(p.nowSelectedDate.getFullYear(),p.nowSelectedDate.getMonth(),p.nowSelectedDate.getDate())));
bindAction();
}
function setDateValue(){
var num=parseInt($(this).find("span").html());
var m=parseInt($(this).find("span").attr("rel"));
if(!num || (!m && m!==0)){
return;
}
p.nowSelectedDate.setMonth(m);
p.nowSelectedDate.setDate(num);
p.setDateTime();
if(p.option["data"].substr(p.option["data"].length-1,1)=="d"){
confirmSelected();
return;
}else if(p.option["data"].indexOf("h")>-1 || p.option["data"].indexOf("t")>-1 || p.option["data"].indexOf("s")>-1){
showPannal("selected_hours");
}
PICKER.find("#monthSelectPanal").html(monthselectorStr(p.nowSelectedDate));
PICKER.find("#dateSelectPanal").html(dateselectorStr(new Date(p.nowSelectedDate.getFullYear(),p.nowSelectedDate.getMonth(),p.nowSelectedDate.getDate())));
bindAction();
}
this.setDateTime=function(newDate){
p.nowSelectedDate=newDate?newDate:p.nowSelectedDate;
if(p.nowSelectedDate>maxDate){
p.nowSelectedDate=cloneDate(maxDate);
}else if(p.nowSelectedDate<minDate){
p.nowSelectedDate=cloneDate(minDate);
}
p.nowSelectedDate=(p.nowSelectedDate<minDate)?cloneDate(minDate):p.nowSelectedDate;
p.nowSelectedDate=(p.nowSelectedDate>maxDate)?cloneDate(maxDate):p.nowSelectedDate;
showSelceted(p.nowSelectedDate);
p.setPickerPannal(p.nowSelectedDate);
}
function changePannal(){
var pid=$(this).parent().attr("id");
if(pid=="yearChangeBut"){
if($(this).hasClass("pre")){
if(nowShowDate.getFullYear()<(minDate.getFullYear())){
return;
}
nowShowDate.setYear(nowShowDate.getFullYear()-24);
if(nowShowDate.getFullYear()<(minDate.getFullYear()+13)){
nowShowDate.setYear(minDate.getFullYear()+13);
}
}else{
if(nowShowDate.getFullYear()>=(maxDate.getFullYear()-10)){
return;
}
nowShowDate.setYear(nowShowDate.getFullYear()+24);
if(nowShowDate.getFullYear()>=(maxDate.getFullYear()-10)){
nowShowDate.setYear(maxDate.getFullYear()-10);
}}
PICKER.find("#yearSelectPanal").html(yearselectorStr(nowShowDate.getFullYear()));
}else  if(pid=="dateChangeBut"){
var nowdate=p.nowSelectedDate.getDate();
p.nowSelectedDate.setDate(1);
if($(this).hasClass("pre")){
p.nowSelectedDate.setMonth(p.nowSelectedDate.getMonth()-1);
}else{
p.nowSelectedDate.setMonth(p.nowSelectedDate.getMonth()+1);
}
var maxend=maxDay(p.nowSelectedDate.getYear(),p.nowSelectedDate.getMonth())
if(maxend<nowdate){
nowdate=maxend;
}
p.nowSelectedDate.setDate(nowdate);
p.nowSelectedDate.setYear(p.nowSelectedDate.getFullYear());
if(p.nowSelectedDate<minDate){
p.nowSelectedDate=cloneDate(minDate);
}else if(p.nowSelectedDate>maxDate){
p.nowSelectedDate=cloneDate(maxDate);
}
p.setPickerPannal(p.nowSelectedDate);
p.nowSelectedDate=(p.nowSelectedDate<minDate)?cloneDate(minDate):p.nowSelectedDate;
p.nowSelectedDate=(p.nowSelectedDate>maxDate)?cloneDate(maxDate):p.nowSelectedDate;
showSelceted(p.nowSelectedDate);
}
bindAction();
}
p.setPickerPannal=function(nowDate){
for(var i=0;i<p.option["data"].length;i++){
switch(p.option["data"].substr(i,1)){
case "y":
PICKER.find("#yearSelectPanal").html(yearselectorStr(nowDate.getFullYear()));
break;
case "m":
PICKER.find("#monthSelectPanal").html(monthselectorStr(nowDate));
break;
case "d":
PICKER.find("#dateSelectPanal").html(dateselectorStr(new Date(p.nowSelectedDate.getFullYear(),nowDate.getMonth(),p.nowSelectedDate.getDate())));
break;
case "h":
PICKER.find("#timeSelectPanal #select_hours").html(format0(nowDate.getHours()+"",2,"0"));
break;
case "t":
PICKER.find("#timeSelectPanal #select_minutes").html(format0(nowDate.getMinutes()+"",2,"0"));
break;
case "s":
PICKER.find("#timeSelectPanal #select_seconds").html(format0(nowDate.getSeconds()+"",2,"0"));
break;
}}
bindAction();
}
function showSelceted(dateObj){
PICKER.find("#selected_year").html(dateObj.getFullYear()+"\u5e74");
PICKER.find("#selected_month").html((dateObj.getMonth()+1)+"\u6708");
PICKER.find("#selected_date").html(dateObj.getDate()+"\u65e5");
PICKER.find("#selected_hours").html(format0(dateObj.getHours(),2,"0")+"\u65f6");
PICKER.find("#selected_minutes").html(format0(dateObj.getMinutes(),2,"0")+"\u5206");
PICKER.find("#selected_seconds").html(format0(dateObj.getSeconds(),2,"0")+"\u79d2");
}
function getDateFromStr(str){
if(!str || str==""){return null}
var datearr={"y":2000,"m":1,"d":1,"h":0,"t":0,"s":0};
var dateStr=trim(str).replace("\u5e74","-").replace("\u6708","-").replace("\u65e5","-").replace("\u65f6",":").replace("\u5206",":").replace("\u79d2","").replace(/\//g,"-");
dateStr=dateStr.replace(/:/g,"-").replace(/ /g,"-");
while(dateStr.indexOf("--")>-1){
dateStr=dateStr.replace("--","-");
}
dateStr=dateStr.split("-");
var format=p.option["data"].split(",");
for(var i=0;i<format.length;i++){
datearr[format[i]]= dateStr[i] ? getIntFromStr(dateStr[i]) : 0;
}
try{
return new Date(datearr["y"],datearr["m"]-1,datearr["d"],datearr["h"],datearr["t"],datearr["s"]);
}catch(e){
return null;
}
return null;
}
function getIntFromStr(str){
str=str.toString();
while(str.indexOf("0")==0 && str.length>1){
str=str.substr(1,str.length);
}
return parseInt(str);
}
function formatDate(dateObj){
var datestr=nowFormatStr;
var m=p.option["force2"] ? format0((dateObj.getMonth()+1),2,"0") : (dateObj.getMonth()+1);
var d=p.option["force2"] ? format0(dateObj.getDate(),2,"0") : dateObj.getDate();
var h=p.option["force2"] ? format0(dateObj.getHours(),2,"0") : dateObj.getHours();
var t=p.option["force2"] ? format0(dateObj.getMinutes(),2,"0") : dateObj.getMinutes();
var s=p.option["force2"] ? format0(dateObj.getSeconds(),2,"0") : dateObj.getSeconds();
datestr=datestr.replace("y",dateObj.getFullYear()+"").replace("m",m).replace("d",d).replace("h",h).replace("t",t).replace("s",s);
return datestr;
}
function format0(toformat,num,plusstr){ 
var str=toformat+"";
if(str.length>=num){
return str.substr(str.length-num,num);
}
while(str.length<num){
str=plusstr+str;
}
return str;
}
function resetFormat(){
nowFormatStr="";
var dataArr=p.option["data"].split(",");
for(var i=0;i<dataArr.length;i++){
switch(dataArr[i]){
case "y":
nowFormatStr+="y\u5e74";
break;
case "m":
nowFormatStr+="m\u6708";
break;
case "d":
nowFormatStr+="d\u65e5 ";
break;
case "h":
nowFormatStr+=" h\u65f6";
break;
case "t":
nowFormatStr+="t\u5206";
break;
case "s":
nowFormatStr+="s\u79d2";
break;
}}
nowFormatStr=nowFormatStr.replace("  "," ");
switch(p.option["format"]){
case "normal":
nowFormatStr=nowFormatStr.replace("\u5e74","-").replace("\u6708","-").replace("\u65e5","").replace("\u65f6",":").replace("\u5206",":").replace("\u79d2","");
break;
case "unix":
nowFormatStr=nowFormatStr.replace("\u5e74","/").replace("\u6708","/").replace("\u65e5","").replace("\u65f6",":").replace("\u5206",":").replace("\u79d2","");
break;
}
if(nowFormatStr.substr(nowFormatStr.length-1,1)=="-" ||  nowFormatStr.substr(nowFormatStr.length-1,1)=="/" || nowFormatStr.substr(nowFormatStr.length-1,1)==":"){
nowFormatStr=nowFormatStr.substr(0,nowFormatStr.length-1);
}
nowFormatStr=trim(nowFormatStr);
}
function trim(str){
return (str+'').replace(/^\s*|\s*$/g,'');
}
function dateselectorStr(dateObj){
var startday=new Date(dateObj.getFullYear(),dateObj.getMonth(),1);
startday.setDate(1);
var startpos=startday.getDay()-1;
if(startpos<0){startpos=6};
startday.setDate(1);
startday.setDate(startday.getDate()-startpos-1);
var len=Math.ceil((startpos+(maxDay(dateObj.getFullYear(),dateObj.getMonth())))/7)*7;
var mstrarr=new Array();
for(var i=0;i<len;i++){
startday.setDate(startday.getDate()+1);
if(startday>=minDate &&  startday<=maxDate){
mstrarr.push([startday.getMonth(),startday.getDate()]);
}else  if(startday.getDate()==minDate.getDate() && startday.getMonth()==minDate.getMonth()){
mstrarr.push([startday.getMonth(),startday.getDate()]);
}else{
mstrarr.push(["","\u00d7"]);
}}
var mstr='<table width="100%" border="0" cellspacing="0" cellpadding="0"><tr>';
for(var i=0;i<weekStr.length;i++){
mstr+='<th>'+weekStr.substr(i,1)+'</th>';
}
mstr+='</tr><tr>';
var today=new Date();
for(var i=0;i<mstrarr.length;i++){
var sclass="";
if(mstrarr[i][0]==p.nowSelectedDate.getMonth() && mstrarr[i][1]==p.nowSelectedDate.getDate()){
sclass='class="selectedtd"';
}else if(mstrarr[i][0]==oldSelectedDate.getMonth() && mstrarr[i][1]==oldSelectedDate.getDate()){
sclass='class="defaulttd"';
}else if(mstrarr[i][0]==today.getMonth() && mstrarr[i][1]==today.getDate()){
sclass='class="todaytd"';
}else if(mstrarr[i][0]!=dateObj.getMonth()){
sclass='class="othermonth"';
}
mstr+='<td '+sclass+'><span rel="'+mstrarr[i][0]+'">'+mstrarr[i][1]+'</span></td>';
if(i%7==6){
mstr+="</tr><tr>";
}}
mstr+='</tr></table>';
return mstr;
}
function maxDay(year,month){
var d= new Date(year,month,1);
d.setMonth(d.getMonth()+1);
d.setDate(0);
return d.getDate();
}
function monthselectorStr(dateObj){
var mstrarr=monthHanzistr.split(",");
var mstr='<table width="100%" border="0" cellspacing="0" cellpadding="0"><tr>';
var today=new Date();
for(var i=0;i<mstrarr.length;i++){
var sclass="";
if(i==p.nowSelectedDate.getMonth()){
sclass='class="selectedtd"';
}else if(i==oldSelectedDate.getMonth()){
sclass='class="defaulttd"';
}else if(i==today.getMonth()){
sclass='class="todaytd"';
}
mstr+='<td width="25%" '+sclass+'><span rel="'+i+'">'+mstrarr[i]+'</span></td>';
if(i%3==2){
mstr+="</tr><tr>";
}}
mstr+='</tr></table>';
return mstr;
}
function getDateFromFormatStr(datestr){
var str=trim(datestr);
str=str.split(" ")[0];
str=str.split("-");
try{
return new Date(parseInt(str[0]),parseInt(str[1])-1,parseInt(str[2]));
}catch(e){
return null;
}}
function cloneDate(date){
return 	new Date(date.getFullYear(),date.getMonth(),date.getDate(),date.getHours(),date.getMinutes(),date.getSeconds());
}
function yearselectorStr(defaultYear,dispos){
if(!defaultYear){
defaultYear=new Date().getFullYear();
}
if(!dispos){
dispos=13;
}
var startYear=defaultYear-dispos;
if(startYear<minDate.getFullYear()){startYear=minDate.getFullYear()};
var endYear=maxDate.getFullYear();
var mstrarr=new Array();
for(var i=0;i<24;i++){
if(endYear && (startYear+i)>endYear){
mstrarr.push("\u00d7");
}else{
mstrarr.push((startYear+i)+"");
}}
var mstr='<table width="100%" border="0" cellspacing="0" cellpadding="0"><tr>';
var today=new Date();
for(var i=0;i<mstrarr.length;i++){
var sclass="";
if(mstrarr[i]==p.nowSelectedDate.getFullYear()){
if(mstrarr[i]==oldSelectedDate.getFullYear()){
sclass='class="selectedtd defaulttd"';
}else{
sclass='class="selectedtd"';
}
}else if(mstrarr[i]==oldSelectedDate.getFullYear()){
sclass='class="defaulttd"';
}else if(mstrarr[i]==today.getFullYear()){
sclass='class="todaytd"';
}
mstr+='<td width="25%" '+sclass+'><span>'+mstrarr[i]+'</span></td>';
if(i%4==3){
mstr+="</tr><tr>";
}}
mstr+='</tr></table>';
return mstr;
}
var timeselectorStr='<table width="100%" border="0" cellspacing="0" cellpadding="0"><tr><td><span>+</span></td><td width="6">&nbsp;</td><td><span>+</span></td><td width="6">&nbsp;</td><td><span>+</span></td></tr><tr><td><p id="select_hours"></p></td><td>:</td><td><p id="select_minutes"></p></td><td>:</td><td><p id="select_seconds"></p></td></tr><tr><td><span>-</span></td><td>&nbsp;</td><td><span>-</span></td><td>&nbsp;</td><td><span>-</span></td></tr></table>'
function hourselectorStr(step,maxNum,clum){
var mstr='<table width="100%" border="0" cellspacing="0" cellpadding="0"><tr>';
var tm=0;
var i=0;
while(tm<maxNum){
mstr+='<td><span>'+tm+'</span></td>';
if(i%clum==(clum-1)){
mstr+="</tr><tr>";
}
i++;
tm+=step;
}
mstr+='</tr></table>';
return mstr
}}
function DateSelector(){
var p=this;
var calanderBox;
var nowDay;
var calanderDateBox;
var calanderTitleBox;
var calanderSubmitBox;
var weekStr="\u4e00\u4e8c\u4e09\u56db\u4e94\u516d\u65e5";
var enableTitle=[];
this.selectedDate={};
this.option={"field":["1900-1-1","2999-11-30"],"format":"normal","width":600,"height":400,"readonly":false};
var minDate;
var maxDate;
var mask;
var baseIndex;//=zindex?zindex:ZINDEX["messager"];
var inputObj;
var selectLine=false;
var startPoint;
this.install=function(input,option){
inputObj=input;
var defaultVal=inputObj.val()+"";
defaultVal=defaultVal.split(",");
for(var i=0;i<defaultVal.length;i++){
defaultVal[i]?p.selectedDate[cutDateString(defaultVal[i])]=defaultVal[i]:null;
}
$.extend(p.option,option);
$(".fm_dateSelector").each(function(){
try{
var obj=$(this).data("object");
if(typeof obj=="function"){
obj.destroy();
obj=null;
}
}catch(e){
}
})
baseIndex=p.option["zindex"]?p.option["zindex"]:ZINDEX["messager"];
minDate=getLimited(p.option["field"][0],true);
maxDate=getLimited(p.option["field"][1],false);
calanderBox=$('<div class="fm_dateSelector"></div>');
calanderBox.css({"overflow":"hidden","position":"fixed","width":getRealSize(p.option["width"],$(window).width())+"px","height":getRealSize(p.option["height"],$(window).height())+"px","z-index":999999});
$("body").append(calanderBox);
calanderBox.centerInWindow();
calanderDateBox=$('<table width="100%" border="0" cellspacing="0" cellpadding="0"></table>');
calanderTitleBox=$('<div class="calander_title"><a class="prev"><</a><span></span><a class="next">></a></div>');
calanderSubmitBox=$('<div class="canbutbox  relpos"></div>');
if(p.option["readonly"]){
calanderSubmitBox.html('<div style="text-align:center">'+
'<a class="but-normal but-green"  id="can_close"><i class="fa fa-remove"/>\u5173\u95ed</a>'+
'</div>');
}else{
calanderSubmitBox.html('<i class="fa fa-exchange typeswitch" title="\u8fde\u7eed\u9009\u62e9"/>'+
'<div class="but-group">'+
'<a class="but-normal but-red" id="can_confirm"><i class="fa fa-check"/>\u786e\u5b9a</a>'+
'<a class="but-normal but-orange" id="can_clear"><i class="fa fa-refresh"/>\u6e05\u9664</a>'+
'<a class="but-normal but-green"  id="can_close"><i class="fa fa-remove"/>\u5173\u95ed</a>'+
'</div>');
}
calanderBox.append(calanderTitleBox).append(calanderDateBox).append(calanderSubmitBox);
for(var i=0;i<7;i++){
var tr='<tr>';
for(var j=0;j<7;j++){
tr+=(i==0)?'<th width="14.28%">'+weekStr.substr(j,1)+'</th>':'<td>'+(i+j)+'</td>';
}
tr+='</tr>';
calanderDateBox.append($(tr));
}
mask=$.lockMask(baseIndex-1,null,"dateSelectorMask")
nowDay=new Date();
creatCalander(nowDay);
calanderTitleBox.find(">a").bind("click",changeMonth);
calanderDateBox.find("tr:eq(0) th:gt(4)").addClass("calander_weekend");
if(!p.option["readonly"]){
calanderDateBox.find("tr >td").bind("click",checkSelected);
calanderSubmitBox.find(".typeswitch").bind("click",setSelectType);
}
calanderSubmitBox.find("a").bind("click",butaction);
p.resize();
}
function  setSelectType(){
if($(this).hasClass("nowid")){
$(this).removeClass("nowid");
selectLine=false;
startPoint=null;
calanderDateBox.find("td.selectStart").removeClass("selectStart");
}else{
$(this).addClass("nowid");
selectLine=true;
}}
function cutDateString(dateStr){
return dateStr.replace(/\-0/g,"\-");
}
function getRealSize(csize,Wsize){
csize=Math.abs(csize);
if(csize<1){
return Math.floor(Wsize*csize);
}else{
return csize;
}}
function butaction(){
switch($(this).attr("id")){
case "can_close":
p.destroy();
break;
case "can_clear":
p.selectedDate={};
creatCalander(nowDay);
break;
case "can_confirm":
selectConfirm();
p.destroy();
break;
}}
function selectConfirm(){
var selectedDataStr="";
for(var na in p.selectedDate){
selectedDataStr+=(p.selectedDate[na]?p.selectedDate[na]+",":"");
}
if(selectedDataStr.length>0){
selectedDataStr=selectedDataStr.substr(0,selectedDataStr.length-1);
}
inputObj.changeValue(selectedDataStr);
}
function checkSelected(){
var box=$(this);
if(box.hasClass("disabled")){
if(box.hasClass("checked")){
var id=box.attr("id");
if(p.selectedDate[id]){
delete 	p.selectedDate[id];
}
box.removeClass("checked")
}
return;
}
var id=box.attr("id");
if(selectLine){
if(!startPoint){
box.addClass("selectStart")
startPoint=box.attr("id");
return;
}
var endPoint=box.attr("id");
setDatePartSelect(startPoint,endPoint);
startPoint=null;
calanderDateBox.find("td.selectStart").removeClass("selectStart");
return;
}
if(box.hasClass("checked")){
if(p.selectedDate[id]){
delete 	p.selectedDate[id];
}
box.removeClass("checked")
return;
}
box.addClass("checked");
p.selectedDate[id]=formatDateStr(box.data("y"),box.data("m"),box.data("d"));
}
function setDatePartSelect(startPoint,endPoint){
var dataDif=dateDiff("d",startPoint,endPoint);
var dir=dataDif>0?-1:1;
var i=0;
var startDate=getDateFromStr(startPoint);
dataDif-=dir;
while(dataDif!=0)	{
var D=startDate.getDate();
var M=startDate.getMonth()+1;
var Y=startDate.getFullYear();
var id=Y+"-"+M+"-"+D;
p.selectedDate[id]=formatDateStr(Y,M,D);
startDate.setDate(startDate.getDate()-dir);
dataDif+=dir;
}
checkMemory();
}
function formatDateStr(Y,M,D){
var datestr="";
if(p.option["force2"]){
datestr=Y+(p.option["format"]=="chinese"?"\u5e74":p.option["format"]=="unix"?"/":"-")+formatTo2(M)+(p.option["format"]=="chinese"?"\u6708":p.option["format"]=="unix"?"/":"-")+formatTo2(D)+(p.option["format"]=="chinese"?"\u65e5":"");
}else{
datestr=Y+(p.option["format"]=="chinese"?"\u5e74":p.option["format"]=="unix"?"/":"-")+M+(p.option["format"]=="chinese"?"\u6708":p.option["format"]=="unix"?"/":"-")+D+(p.option["format"]=="chinese"?"\u65e5":"");
}
return datestr;
}
function getLimited(limt,ismini){
var thedate;
if(limt){
if(typeof limt=="string"){
thedate=getDateFromStr(limt);
}else if(typeof limt=="object"){
thedate=new Date();
limt["y"]?thedate.setYear(thedate.getFullYear()+parseInt(limt["y"])||0):null;
limt["m"]?thedate.setMonth(thedate.getMonth()+parseInt(limt["m"])||0):null;
limt["d"]?thedate.setDate(thedate.getDate()+parseInt(limt["d"])||0):null;
}
}else if(limt==0){
thedate= new Date();
}else{
if(ismini){
thedate= new Date(1900,0,1);
}else{
thedate= new Date(3000,0,1);
}}
return thedate;
}
function checkEnable(dateStr){
dateStr=dateStr.replace(/_/g,"\-");
var date=getDateFromStr(dateStr);
if(date>maxDate || date<minDate){
return false;
}
return true;
}
function changeMonth(){
if($(this).hasClass("prev")){
nowDay.setMonth(nowDay.getMonth()-1);
}else if($(this).hasClass("next")){
nowDay.setMonth(nowDay.getMonth()+1);
}
creatCalander(nowDay);
}
function creatCalander(dateObj){
var today=new Date();
var todayM=today.getMonth();
var todayD=today.getDate();
var todayY=today.getFullYear();
var TM=dateObj.getMonth();
var TY=dateObj.getFullYear();
var startday=new Date(TY,TM,1);
startday.setDate(1);
calanderTitleBox.find(">span").text(TY+"\u5e74 "+(TM+1)+"\u6708");
calanderDateBox.find("td").removeClass("calander_otherMonth").removeClass("calander_today");
var startpos=startday.getDay()-1;
if(startpos<0){startpos=6};
startday.setDate(1);
startday.setDate(startday.getDate()-startpos-1);
var len=42;//Math.ceil((startpos+(maxDay(dateObj.getFullYear(),dateObj.getMonth())))/7)*7;
for(var i=0;i<len;i++){
startday.setDate(startday.getDate()+1);
var D=startday.getDate();
var M=startday.getMonth()+1;
var Y=startday.getFullYear();
var row=Math.floor(i/7)+1;
var clum=i%7;
var box=calanderDateBox.find("tr:eq("+row+") td:eq("+clum+")");
box.html('<span>'+D+'</span>');
box.data({"y":Y,"m":M,"d":D,"id":Y+"-"+M+"-"+D});
box.attr("id",Y+"-"+M+"-"+D);
if(TM!=M){
box.addClass("calander_otherMonth");
}
if(todayY==Y && todayM==(M-1) && todayD==D){
box.addClass("calander_today");
}
if(startday<minDate || startday>=maxDate){
box.addClass("disabled");
}else if(getDateStingForce2(startday)==getDateStingForce2(maxDate)){
box.addClass("disabled");
}else{
box.removeClass("disabled");
}}
checkMemory();
}
function checkMemory(){
calanderDateBox.find("tr:gt(0) td").each(function(){
var box=$(this);
var id=box.data("id");
if(p.selectedDate[id]){		
box.addClass("checked");
}else{
box.removeClass("checked");
}
})
}
this.destroy=function(){
$(p).unbind();
$(window).unbind("resize",p.resize);
if(mask){
$.clearMask("dateSelectorMask");
mask=null;
}
if(calanderBox){
calanderBox.del();
calanderBox=null;
}}
this.resize=function(){
if(!calanderBox){
p.destroy();
}
calanderBox.centerInWindow();
var H=calanderBox.height();
dateH=H-calanderTitleBox.outerHeight(true)-calanderDateBox.find("tr:eq(0)").outerHeight()-calanderSubmitBox.outerHeight();
var RH=Math.floor(dateH/6);
calanderDateBox.find("tr:gt(0) td").setRealSize(null,RH);
$(window).one("resize",p.resize);
}}
(function($) {
$.fn.DatePartPicker=function(){
$(this).each(installDatePartPicker);
}
function installDatePartPicker(){
$(this).data("type","dateinput");
$(this).bind("click",function(){
if($(this).attr("disabled")==true || $(this).hasClass("readonly")){
return;
}
var option=$(this).dataOptions();
var DATEPICKER=new MdateTimePartSelector();
DATEPICKER.install($(this),option);
})
}
})(jQuery);
function MdateTimePartSelector(){
var p=this;
this.option={
"format":"normal",  
"data":"y,m,d", 
"fast":"td,ld,lw,tw,lm,tm,ls,ts,ly,ty", 
"force2":true,
"split":"\u81f3",
"field":["1900-1-1","2999-11-30"]  
};
this.input;
this.ID="dpartpicker_"+Math.floor(Math.random()*10000);
var PICKER;
this.nowSelectedDate;
var oldSelectedDate;
var closetimeout;
var START;
var END;
this.install=function(inputObj,poption){
p.input=$(inputObj);
if(poption){
$.extend(p.option,poption);
}
$(".dateTimePicker").remove();
var defaultdate=trim(p.input.val());
PICKER=$('<div class="dateTimePicker timePartPicker" id="'+p.ID+'"><table><tr><td valign="top" width="200"><div class="selectPanal start"></div></td><td width="30" valign="top" align="center"><h3>'+p.option["split"]+'</h3></td><td valign="top" width="200"><div class="selectPanal end"></div></td></tr></table></div>');
PICKER.css({"visibility":"hidden"});
$("body").append(PICKER);
PICKER.css({"min-width":(inputObj.outerWidth()-7)+"px"});
if(document.all){
PICKER.prepend($('<div class="relpos" style="z-index:-1"><iframe width="210" height="200" frameborder="none"></iframe></div>'));
PICKER.find("iframe").show();
}
PICKER.prepend($('<div class="smallClosebut"><div></div></div>'));
START=new MdateTimePart(PICKER.find("div.start"));
END=new MdateTimePart(PICKER.find("div.end"));
defaultdate=defaultdate.split(p.option["split"]);
if(defaultdate.length!=2){
var today=new Date();
var yestoday=new Date();
yestoday.setDate(today.getDate()-1);
defaultdate[0]=yestoday;
defaultdate[1]=today;
}
START.install(p.option,defaultdate[0]);
END.install(p.option,defaultdate[1]);
inputObj.unbind("mousemove").bind("mousemove",stopEvent);
PICKER.unbind().bind("mouseenter",clearCloseTimeout).bind("mouseleave",setCloseTimeout).bind("mousedown",stopEvent);
PICKER.bind("mousemove",stopEvent).bind("mousewheel",stopEvent);
$(document).unbind("mousemove",setCloseTimeout).one("mousemove",setCloseTimeout).one("mousedown",p.destroy);
resetThisPos();
PICKER.css({"visibility":"inherit"});
$(window).bind("resize",resetThisPos).bind("scroll",resetThisPos).bind("mousewheel",p.destroy);
if(p.option["fast"]){
PICKER.append($('<div class="PartButsPanal">'+
((p.option["fast"].indexOf("td")>-1)?'<span id="picker_parttoday">\u4eca\u5929</span>':'')+
((p.option["fast"].indexOf("ld")>-1)?'<span id="picker_partyestoday">\u6628\u5929</span>':'')+
((p.option["fast"].indexOf("lw")>-1)?'<span id="picker_partlastweek">\u4e0a\u5468</span>':'')+
((p.option["fast"].indexOf("tw")>-1)?'<span id="picker_partweek">\u672c\u5468</span>':'')+
((p.option["fast"].indexOf("lm")>-1)?'<span id="picker_partlastmonth">\u4e0a\u6708</span>':'')+
((p.option["fast"].indexOf("tm")>-1)?'<span id="picker_partmonth">\u672c\u6708</span>':'')+
((p.option["fast"].indexOf("ls")>-1)?'<span id="picker_partlastseason">\u4e0a\u5b63</span>':'')+
((p.option["fast"].indexOf("ts")>-1)?'<span id="picker_partseason">\u672c\u5b63</span>':'')+
((p.option["fast"].indexOf("ly")>-1)?'<span id="picker_partlastyear">\u53bb\u5e74</span>':'')+
((p.option["fast"].indexOf("ty")>-1)?'<span id="picker_partyear">\u672c\u5e74</span>':'')+
'</div>'));
}
PICKER.append($('<div class="DateButsPanal"><span id="picker_cleardate">\u6e05\u7a7a</span><span id="picker_confirmdate">\u786e\u5b9a</span><span id="picker_closedate">\u5173\u95ed</span></div>'));
PICKER.find(".DateButsPanal span,.PartButsPanal span").bind("click",pannalButClick);
PICKER.find(".smallClosebut div").unbind().bind("click",p.destroy);
}
function creatTimePart(dateObj,start){
if(start){
dateObj.setHours(0);
dateObj.setMinutes(0);
dateObj.setSeconds(0);
}else{
dateObj.setHours(23);
dateObj.setMinutes(59);
dateObj.setSeconds(59);
}
return dateObj;
}
function pannalButClick(){
var id=$(this).attr("id");
switch(id){
case "picker_parttoday":
var start=new Date();
var end=new Date();
start=creatTimePart(start,true);
end=creatTimePart(end,false);
START.setDateTime(start);
END.setDateTime(end);
break;
case "picker_partyestoday":
var start=new Date();
var end=new Date();
start=creatTimePart(start,true);
end=creatTimePart(end,false);
start.setDate(start.getDate()-1);
end.setDate(end.getDate()-1);
START.setDateTime(start);
END.setDateTime(end);
break;
case "picker_partlastweek":
var today=new Date();
today.setDate(today.getDate()-7);
var start=getWeekStartDate(today);
var end=getWeekEndDate(today);
start=creatTimePart(start,true);
end=creatTimePart(end,false);
START.setDateTime(start);
END.setDateTime(end);
break;
case "picker_partweek":
var today=new Date();
var start=getWeekStartDate(today);
var end=getWeekEndDate(today);
start=creatTimePart(start,true);
end=creatTimePart(end,false);
START.setDateTime(start);
END.setDateTime(end);
break;
case "picker_partlastmonth":
var start=new Date();
var end=new Date();
start=creatTimePart(start,true);
end=creatTimePart(end,false);
start.setDate(1);
end.setDate(1);
start.setMonth(start.getMonth()-1);
end.setMonth(start.getMonth()+1);
end.setDate(end.getDate()-1);
START.setDateTime(start);
END.setDateTime(end);
break;
case "picker_partmonth":
var start=new Date();
var end=new Date();
start=creatTimePart(start,true);
end=creatTimePart(end,false);
start.setDate(1);
end.setDate(1);
start.setMonth(start.getMonth());
end.setMonth(start.getMonth()+1);
end.setDate(end.getDate()-1);
START.setDateTime(start);
END.setDateTime(end);
break;
case "picker_partlastseason":
var start=new Date();
var end=new Date();
start=creatTimePart(start,true);
end=creatTimePart(end,false);
start.setDate(1);
end.setDate(1);
var startm=getQuarterStartMonth(start.getMonth());
start.setMonth(startm-3);
end.setMonth(startm);
end.setDate(end.getDate()-1);
START.setDateTime(start);
END.setDateTime(end);
break;
case "picker_partseason":
var start=new Date();
var end=new Date();
start=creatTimePart(start,true);
end=creatTimePart(end,false);
start.setDate(1);
end.setDate(1);
var startm=getQuarterStartMonth(start.getMonth());
start.setMonth(startm);
end.setMonth(startm+3);
end.setDate(end.getDate()-1);
START.setDateTime(start);
END.setDateTime(end);
break;
case "picker_partyear":
var start=new Date();
var end=new Date();
start=creatTimePart(start,true);
end=creatTimePart(end,false);
start.setDate(1);
end.setDate(1);
start.setMonth(0);
end.setMonth(0);
start.setYear(start.getFullYear());
end.setYear(start.getFullYear()+1);
end.setDate(end.getDate()-1);
START.setDateTime(start);
END.setDateTime(end);
break;
case "picker_partlastyear":
var start=new Date();
var end=new Date();
start=creatTimePart(start,true);
end=creatTimePart(end,false);
start.setDate(1);
end.setDate(1);
start.setMonth(0);
end.setMonth(0);
start.setYear(start.getFullYear()-1);
end.setYear(end.getFullYear());
end.setDate(end.getDate()-1);
START.setDateTime(start);
END.setDateTime(end);
break;
case "picker_closedate":
p.destroy();
break;
case "picker_confirmdate":
confirmSelected();
break;
case "picker_cleardate":
p.input.val("");
try{
ev = document.createEvent("HTMLEvents");
ev.initEvent("change", false, true);
p.input.get(0).dispatchEvent(ev);
}catch(e){
if(document.all){//IE6\u89e6\u53d1change
p.input.get(0).fireEvent('onchange');
}}
p.destroy();
break;
}}
function getQuarterStartMonth(nowMonth){
var quarterStartMonth = 0;
if(nowMonth<3){
quarterStartMonth = 0;
}
if(2<nowMonth && nowMonth<6){
quarterStartMonth = 3;
}
if(5<nowMonth && nowMonth<9){
quarterStartMonth = 6;
}
if(nowMonth>8){
quarterStartMonth = 9;
}
return quarterStartMonth;
}
function getWeekStartDate(dateObj){
var nowDayOfWeek = dateObj.getDay();         
var nowDay = dateObj.getDate();              
var nowMonth = dateObj.getMonth();           
var nowYear = dateObj.getFullYear();             
var weekStartDate = new Date(nowYear, nowMonth, nowDay-nowDayOfWeek);
return weekStartDate;
}
function getWeekEndDate(dateObj){
var nowDayOfWeek = dateObj.getDay();         
var nowDay = dateObj.getDate();              
var nowMonth = dateObj.getMonth();           
var nowYear = dateObj.getFullYear();             
var weekEndDate = new Date(nowYear, nowMonth, nowDay + (6 - nowDayOfWeek));
return weekEndDate;
}
function confirmSelected(){
var datestr="";
var startDate=START.getSelectDate();
var endDate=END.getSelectDate();
if(startDate>endDate){
datestr=END.getSelectDateStr()+p.option["split"]+START.getSelectDateStr()
}else{
datestr=START.getSelectDateStr()+p.option["split"]+END.getSelectDateStr()
}
p.input.val(datestr);
try{
ev = document.createEvent("HTMLEvents");
ev.initEvent("change", false, true);
p.input.get(0).dispatchEvent(ev);
}catch(e){
if(document.all){//IE6\u89e6\u53d1change
p.input.get(0).fireEvent('onchange');
}}
p.destroy();
}
function stopEvent(e){
e.stopPropagation();
}
function clearCloseTimeout(){
if(closetimeout){
clearTimeout(closetimeout);
closetimeout=null;
}}
function setCloseTimeout(){
clearCloseTimeout();
closetimeout=setTimeout(function(){PICKER.fadeOut("normal",p.destroy)},3000);
}
function resetThisPos(){
if(PICKER){
var poppos=p.input.offset();
var footSpace=$(window).height()-poppos.top;
if(footSpace<PICKER.outerHeight()+20){
PICKER.css({"left":(poppos.left)+"px","top":(poppos.top-PICKER.outerHeight()+p.input.outerHeight())+"px"});
}else{
PICKER.css({"left":(poppos.left)+"px","top":(poppos.top)+"px"});
}
}else{
p.destroy();
}}
this.destroy=function(){
$(window).unbind("resize",resetThisPos).unbind("scroll",resetThisPos);
$(document).unbind("mousemove",setCloseTimeout);
clearCloseTimeout();
if(PICKER){
PICKER.del();//.unbind().empty().remove();
PICKER=null;
}
p.ID=null;
}
}
function MdateTimePart(container){
this.option={
"format":"normal",  
"data":"y,m,d", 
"force2":true,
"field":["1900-1-1","2999-11-30"]  
};
this.input;
this.ID="dpartpicker_"+Math.floor(Math.random()*10000);
this.PICKER;
this.nowSelectedDate;
var oldSelectedDate;
var defaultOrder=["dateSelectPanal","monthSelectPanal","yearSelectPanal","timeSelectPanal"];
var nowFormatStr;
var weekStr="\u4e00\u4e8c\u4e09\u56db\u4e94\u516d\u65e5";
var monthHanzistr="\u4e00\u6708,\u4e8c\u6708,\u4e09\u6708,\u56db\u6708,\u4e94\u6708,\u516d\u6708,\u4e03\u6708,\u516b\u6708,\u4e5d\u6708,\u5341\u6708,\u5341\u4e00\u6708,\u5341\u4e8c\u6708";
var minDate;
var maxDate;
var nowShowDate;
var p=this;
this.getSelectDate=function(){
return 	p.nowSelectedDate;
}
this.getSelectDateStr=function(){
return 	formatDate(p.nowSelectedDate);
}
this.install=function(poption,defaultdate){
if(poption){
$.extend(p.option,poption);
}
resetFormat();
minDate=getLimited(p.option["field"][0],true);
maxDate=getLimited(p.option["field"][1],false);
p.PICKER=$('<div class="mulitselectorBox"><div class="selectorPanal"></div></div>');
container.append(p.PICKER);
p.nowSelectedDate=(typeof defaultdate=="string")?getDateFromStr(defaultdate):new Date(defaultdate);
if(!p.nowSelectedDate || !p.nowSelectedDate.getFullYear()){
p.nowSelectedDate=new Date();
}
if(p.nowSelectedDate>maxDate){
p.nowSelectedDate=cloneDate(maxDate);
}else if(p.nowSelectedDate<minDate){
p.nowSelectedDate=cloneDate(minDate);
}
oldSelectedDate=cloneDate(p.nowSelectedDate);
nowShowDate=cloneDate(p.nowSelectedDate);
creatPannal(nowShowDate);
showSelceted(nowShowDate);
}
function getLimited(limt,ismini){
if(limt){
if(typeof limt=="string"){
return getDateFromFormatStr(limt);
}else if(typeof limt=="object"){
var thedate=new Date();
limt["y"]?thedate.setYear(thedate.getFullYear()+parseInt(limt["y"])||0):null;
limt["m"]?thedate.setMonth(thedate.getMonth()+parseInt(limt["m"])||0):null;
limt["d"]?thedate.setDate(thedate.getDate()+parseInt(limt["d"])||0):null;
limt["h"]?thedate.setHours(thedate.getHours()+parseInt(limt["h"])||0):null;
limt["t"]?thedate.setMinutes(thedate.getMinutes()+parseInt(limt["t"])||0):null;
limt["s"]?thedate.setSeconds(thedate.getSeconds()+parseInt(limt["s"])||0):null;
return 	thedate;
}
}else if(limt==0){
return new Date();
}
if(ismini){
return new Date(1900,0,1);
}else{
return new Date(3000,0,1);
}}
function creatPannal(nowdate){
var datebox=$('<div class="selectedDateContainer"></div>');
var timebox=$('<div class="selectedTimeContainer"></div>');
if(p.option["data"].indexOf("h")>-1 || p.option["data"].indexOf("t")>-1 || p.option["data"].indexOf("s")>-1 ){
p.PICKER.prepend(timebox).find(".selectorPanal").append($('<div id="timeSelectPanal">'+timeselectorStr+'</div>'));
var col=p.PICKER.find("#timeSelectPanal tr:eq(0)").find("td").length;
var timAddPan=$('<tr class="hd"><td colspan="'+col+'" id="timeAddPannal"></td></div>')
p.PICKER.find("#timeSelectPanal tr:last").before(timAddPan);
}
if(p.option["data"].indexOf("y")>-1 || p.option["data"].indexOf("m")>-1 || p.option["data"].indexOf("d")>-1 ){
p.PICKER.prepend(datebox);
}
for(var i=0;i<p.option["data"].length;i++){
switch(p.option["data"].substr(i,1)){
case "y":
datebox.append("<span id=\"selected_year\"></span>");
var yearSelector=$('<div id="yearSelectPanal"></div>');
p.PICKER.find(".selectorPanal").append(yearSelector);
break;
case "m":
datebox.append("<span id=\"selected_month\"></span>");
var monthSelector=$('<div id="monthSelectPanal"></div>');
p.PICKER.find(".selectorPanal").append(monthSelector);
break;
case "d":
datebox.append("<span id=\"selected_date\"></span>");
var dateSelector=$('<div id="dateSelectPanal"></div>');
p.PICKER.find(".selectorPanal").append(dateSelector);
break;
case "h":
timebox.append("<span id=\"selected_hours\"></span>");
p.PICKER.find("#timeSelectPanal tr").find("td:eq(0)").addClass("toremove").find("span").attr("rel","hours");
break;
case "t":
timebox.append("<span id=\"selected_minutes\"></span>");
p.PICKER.find("#timeSelectPanal tr").find("td:eq(1) ,  td:eq(2) ").addClass("toremove").find("span").attr("rel","minutes");;
break;
case "s":
timebox.append("<span id=\"selected_seconds\"></span>");
p.PICKER.find("#timeSelectPanal tr").find("td:eq(3),td:eq(4)").addClass("toremove").find("span").attr("rel","seconds");;
break;
}}
if(p.option["data"].indexOf("d")>-1){
p.PICKER.	find("#dateSelectPanal").before($('<div class="chgDatePagebut" id="dateChangeBut"><span class="pre"></span> <span></span></div>'));
}
if(p.option["data"].indexOf("y")>-1){
p.PICKER.	find("#yearSelectPanal").before($('<div class="chgDatePagebut" id="yearChangeBut"><span class="pre"></span> <span></span></div>'));
}
if(p.PICKER.find("#timeSelectPanal tr:eq(1) td:eq(0)").html()==":"){
p.PICKER.find("#timeSelectPanal tr").find("td:eq(0)").remove();
}
p.PICKER.find("#timeSelectPanal tr td").each(function(){
if(!$(this).hasClass("toremove")){
$(this).remove();
}else{
$(this).removeClass("toremove");
}
})	;
for(var j=0;j<defaultOrder.length;j++){
if(p.PICKER.find(".selectorPanal #"+defaultOrder[j]).length>0){
p.PICKER.find(".selectorPanal #"+defaultOrder[j]).show();
break;
}}
p.setPickerPannal(nowdate);
if(p.option["data"].indexOf("h")>-1){
timAddPan.find("td#timeAddPannal").append($('<div id="hourSelectPanal" class="hd">'+hourselectorStr(1,24,8)+'</div>'));
}
if(p.option["data"].indexOf("t")>-1 ){
timAddPan.find("td#timeAddPannal").append($('<div id="minuteSelectPanal" class="hd">'+hourselectorStr(5,60,6)+'</div>'));
}
if(p.option["data"].indexOf("s")>-1){
timAddPan.find("td#timeAddPannal").append($('<div id="secondSelectPanal" class="hd">'+hourselectorStr(5,60,6)+'</div>'));
}
p.PICKER.	find(".chgDatePagebut span").unbind().bind("click",changePannal);
bindAction();
p.PICKER.find("#timeSelectPanal td span").unbind().bind("click",changeTime);
p.PICKER.find("#timeSelectPanal td p").unbind().bind("click",showPartSelector);
p.PICKER.find(".selectorPanal>div[class=chgDatePagebut]").hide();
p.PICKER.find(".selectorPanal>div[class!=chgDatePagebut]").hide().css({"background-color":"#fff"});
if(p.option["data"].indexOf("d")>-1){
nowOnshow=p.PICKER.find("#dateSelectPanal,.chgDatePagebut[id=dateChangeBut]");
}else{
switch(p.option["data"].replace(/,/g,"").substr(p.option["data"].replace(/,/g,"").length-1,1)){
case "s":
case "t":
case "h":
nowOnshow=p.PICKER.find("#timeSelectPanal");
break;
case "d":
nowOnshow=p.PICKER.find("#dateSelectPanal,.chgDatePagebut[id=dateChangeBut]");
break ;
case "m":
nowOnshow=p.PICKER.find("#monthSelectPanal");
break ;
case "y":
nowOnshow=p.PICKER.find("#yearSelectPanal,.chgDatePagebut[id=yearChangeBut]");
break ;
}}
nowOnshow.show();
}
function showPartSelector(){
var id=$(this).attr("id");
var targte=$(this);
if(targte.hasClass("onshow")){
hideAddTimePannal();
return;
}
p.PICKER.find("#timeSelectPanal .onshow").removeClass("onshow");
var setpart;
var setValue=function(){
var num=$(this).find("span").html();
setpart(num);
targte.html(format0(num+"",2,"0"));
if(p.nowSelectedDate<minDate || p.nowSelectedDate>maxDate){
targte.addClass("disabled");
}else{
targte.removeClass("disabled");
}
p.nowSelectedDate=(p.nowSelectedDate<minDate)?cloneDate(minDate):p.nowSelectedDate;
p.nowSelectedDate=(p.nowSelectedDate>maxDate)?cloneDate(maxDate):p.nowSelectedDate;
showSelceted(p.nowSelectedDate);
tdpicker.slideUp("fast",function(){tdpicker.parent().parent().hide()});
targte.removeClass("onshow");
}
var tdpicker;
switch(id){
case "select_hours":
tdpicker=p.PICKER.find("#hourSelectPanal");
setpart=function(data){p.nowSelectedDate.setHours(data)};
break;
case  "select_minutes":
tdpicker=p.PICKER.find("#minuteSelectPanal");
setpart=function(data){p.nowSelectedDate.setMinutes(data)};
break;
case  "select_seconds":
tdpicker=p.PICKER.find("#secondSelectPanal");
setpart=function(data){p.nowSelectedDate.setSeconds(data)};
break;
}
tdpicker.parent().parent().show().find("div").hide();
tdpicker.slideDown("fast").find("td").unbind().bind("click",setValue);
targte.addClass("onshow");
}
function hideAddTimePannal(){
p.PICKER.find("#timeSelectPanal .onshow").removeClass("onshow");
p.PICKER.find("#timeAddPannal").parent().hide();
}
function changeTime(){
var dir=0;
if($(this).html()=="+"){
dir=1;
}else if($(this).html()=="-"){
dir=-1;
}else{
return;
}
var type=$(this).attr("rel");
setTimeTo(type,dir);
}
function setTimeTo(type,dis){
var targ="";
var val=0;
var maxval=0;
var resetFun;
switch(type){
case "hours":
targ=p.PICKER.find("#timeSelectPanal  #select_hours");
maxval=24;
resetFun=function(num){p.nowSelectedDate.setHours(num);}
break;
case "minutes":
targ=p.PICKER.find("#timeSelectPanal  #select_minutes");
maxval=60;
resetFun=function(num){p.nowSelectedDate.setMinutes(num);}
break;
case "seconds":
targ=p.PICKER.find("#timeSelectPanal  #select_seconds");
resetFun=function(num){p.nowSelectedDate.setSeconds(num);}
maxval=60;
break;
}
val=parseInt(targ.html());
val+=dis;
if(val>=maxval){
val=0;
}else if(val<0){
val=maxval-1;
}
targ.html(format0(val,2,"0"));
resetFun(val);
if(p.nowSelectedDate<minDate || p.nowSelectedDate>maxDate){
targ.addClass("disabled");
}else{
targ.removeClass("disabled");
}
p.nowSelectedDate=(p.nowSelectedDate<minDate)?cloneDate(minDate):p.nowSelectedDate;
p.nowSelectedDate=(p.nowSelectedDate>maxDate)?cloneDate(maxDate):p.nowSelectedDate;
showSelceted(p.nowSelectedDate);
}
function bindAction(){
p.PICKER.find("#yearSelectPanal tr td").unbind().bind("click",setYearValue);
p.PICKER.find("#monthSelectPanal tr td").unbind().bind("click",setMonthValue);
p.PICKER.find("#dateSelectPanal tr td").unbind().bind("click",setDateValue);
p.PICKER.find(".selectedDateContainer span,.selectedTimeContainer span").unbind().bind("click",showPannalHandle)	;
}
var nowOnshow;
var nowshowid;
function showPannalHandle(){
var id=$(this).attr("id");
showPannal(id);
}
function showPannal(id){
if(nowshowid==id || (("selected_hours selected_minutes selected_seconds").indexOf(id)>-1 && ("selected_hours selected_minutes selected_seconds").indexOf(nowshowid)>-1)){
return;
}
nowshowid=id;
if(nowOnshow){
nowOnshow.slideUp("fast");
}
switch(id){
case "selected_hours":
case "selected_minutes":
case "selected_seconds":
nowOnshow=p.PICKER.find("#timeSelectPanal");
break;
case "selected_year":
nowOnshow=p.PICKER.find("#yearSelectPanal,.chgDatePagebut[id=yearChangeBut]");
break;
case "selected_month":
nowOnshow=p.PICKER.find("#monthSelectPanal");
break;
case "selected_date":
nowOnshow=p.PICKER.find("#dateSelectPanal,.chgDatePagebut[id=dateChangeBut]");
break;
}
if(document.all){
nowOnshow.slideDown("fast",function(){nowOnshow.css({"overflow":"visible"})});//IE6 BUG CSS
}else{
nowOnshow.slideDown("fast");
}}
function setYearValue(){
var num=parseInt($(this).find("span").html());
if(!num){
return;
}
p.PICKER.find("#yearSelectPanal tr td.selectedtd").removeClass("selectedtd");
$(this).addClass("selectedtd");
p.nowSelectedDate.setYear(num);
p.setDateTime();
if(p.option["data"].substr(p.option["data"].length-1,1)=="y"){
return;
}else if(p.option["data"].indexOf("m")>-1){
showPannal("selected_month");
}
p.PICKER.find("#monthSelectPanal").html(monthselectorStr(p.nowSelectedDate));
p.PICKER.find("#dateSelectPanal").html(dateselectorStr(new Date(p.nowSelectedDate.getFullYear(),p.nowSelectedDate.getMonth(),p.nowSelectedDate.getDate())));
bindAction();
}
function setMonthValue(){
p.PICKER.find("#monthSelectPanal tr td.selectedtd").removeClass("selectedtd");
$(this).addClass("selectedtd");
var num=parseInt($(this).find("span").attr("rel"));
p.nowSelectedDate.setMonth(num);
p.setDateTime();
if(p.option["data"].substr(p.option["data"].length-1,1)=="m"){
return;
}else if(p.option["data"].indexOf("d")>-1){
showPannal("selected_date");
}
p.PICKER.find("#monthSelectPanal").html(monthselectorStr(p.nowSelectedDate));
p.PICKER.find("#dateSelectPanal").html(dateselectorStr(new Date(p.nowSelectedDate.getFullYear(),p.nowSelectedDate.getMonth(),p.nowSelectedDate.getDate())));
bindAction();
}
function setDateValue(){
var num=parseInt($(this).find("span").html());
var m=parseInt($(this).find("span").attr("rel"));
if(!num || (!m && m!==0)){
return;
}
p.nowSelectedDate.setMonth(m);
p.nowSelectedDate.setDate(num);
p.setDateTime();
if(p.option["data"].substr(p.option["data"].length-1,1)=="d"){
return;
}else if(p.option["data"].indexOf("h")>-1 || p.option["data"].indexOf("t")>-1 || p.option["data"].indexOf("s")>-1){
showPannal("selected_hours");
}
p.PICKER.find("#monthSelectPanal").html(monthselectorStr(p.nowSelectedDate));
p.PICKER.find("#dateSelectPanal").html(dateselectorStr(new Date(p.nowSelectedDate.getFullYear(),p.nowSelectedDate.getMonth(),p.nowSelectedDate.getDate())));
bindAction();
}
this.setDateTime=function(newDate){
p.nowSelectedDate=newDate?newDate:p.nowSelectedDate;
if(p.nowSelectedDate>maxDate){
p.nowSelectedDate=cloneDate(maxDate);
}else if(p.nowSelectedDate<minDate){
p.nowSelectedDate=cloneDate(minDate);
}
p.nowSelectedDate=(p.nowSelectedDate<minDate)?cloneDate(minDate):p.nowSelectedDate;
p.nowSelectedDate=(p.nowSelectedDate>maxDate)?cloneDate(maxDate):p.nowSelectedDate;
showSelceted(p.nowSelectedDate);
p.setPickerPannal(p.nowSelectedDate);
}
function changePannal(){
var pid=$(this).parent().attr("id");
if(pid=="yearChangeBut"){
if($(this).hasClass("pre")){
if(nowShowDate.getFullYear()<(minDate.getFullYear())){
return;
}
nowShowDate.setYear(nowShowDate.getFullYear()-24);
if(nowShowDate.getFullYear()<(minDate.getFullYear()+13)){
nowShowDate.setYear(minDate.getFullYear()+13);
}
}else{
if(nowShowDate.getFullYear()>=(maxDate.getFullYear()-10)){
return;
}
nowShowDate.setYear(nowShowDate.getFullYear()+24);
if(nowShowDate.getFullYear()>=(maxDate.getFullYear()-10)){
nowShowDate.setYear(maxDate.getFullYear()-10);
}}
p.PICKER.find("#yearSelectPanal").html(yearselectorStr(nowShowDate.getFullYear()));
}else  if(pid=="dateChangeBut"){
var nowdate=p.nowSelectedDate.getDate();
p.nowSelectedDate.setDate(1);
if($(this).hasClass("pre")){
p.nowSelectedDate.setMonth(p.nowSelectedDate.getMonth()-1);
}else{
p.nowSelectedDate.setMonth(p.nowSelectedDate.getMonth()+1);
}
var maxend=maxDay(p.nowSelectedDate.getYear(),p.nowSelectedDate.getMonth())
if(maxend<nowdate){
nowdate=maxend;
}
p.nowSelectedDate.setDate(nowdate);
p.nowSelectedDate.setYear(p.nowSelectedDate.getFullYear());
if(p.nowSelectedDate<minDate){
p.nowSelectedDate=cloneDate(minDate);
}else if(p.nowSelectedDate>maxDate){
p.nowSelectedDate=cloneDate(maxDate);
}
p.setPickerPannal(p.nowSelectedDate);
p.nowSelectedDate=(p.nowSelectedDate<minDate)?cloneDate(minDate):p.nowSelectedDate;
p.nowSelectedDate=(p.nowSelectedDate>maxDate)?cloneDate(maxDate):p.nowSelectedDate;
showSelceted(p.nowSelectedDate);
}
bindAction();
}
p.setPickerPannal=function(nowDate){
for(var i=0;i<p.option["data"].length;i++){
switch(p.option["data"].substr(i,1)){
case "y":
p.PICKER.find("#yearSelectPanal").html(yearselectorStr(nowDate.getFullYear()));
break;
case "m":
p.PICKER.find("#monthSelectPanal").html(monthselectorStr(nowDate));
break;
case "d":
p.PICKER.find("#dateSelectPanal").html(dateselectorStr(new Date(p.nowSelectedDate.getFullYear(),nowDate.getMonth(),p.nowSelectedDate.getDate())));
break;
case "h":
p.PICKER.find("#timeSelectPanal #select_hours").html(format0(nowDate.getHours()+"",2,"0"));
break;
case "t":
p.PICKER.find("#timeSelectPanal #select_minutes").html(format0(nowDate.getMinutes()+"",2,"0"));
break;
case "s":
p.PICKER.find("#timeSelectPanal #select_seconds").html(format0(nowDate.getSeconds()+"",2,"0"));
break;
}}
bindAction();
}
function showSelceted(dateObj){
p.PICKER.find("#selected_year").html(dateObj.getFullYear()+"\u5e74");
p.PICKER.find("#selected_month").html((dateObj.getMonth()+1)+"\u6708");
p.PICKER.find("#selected_date").html(dateObj.getDate()+"\u65e5");
p.PICKER.find("#selected_hours").html(format0(dateObj.getHours(),2,"0")+"\u65f6");
p.PICKER.find("#selected_minutes").html(format0(dateObj.getMinutes(),2,"0")+"\u5206");
p.PICKER.find("#selected_seconds").html(format0(dateObj.getSeconds(),2,"0")+"\u79d2");
}
function getDateFromStr(str){
if(!str || str==""){return null}
var datearr={"y":2000,"m":1,"d":1,"h":0,"t":0,"s":0};
var dateStr=trim(str).replace("\u5e74","-").replace("\u6708","-").replace("\u65e5","-").replace("\u65f6",":").replace("\u5206",":").replace("\u79d2","").replace(/\//g,"-");
dateStr=dateStr.replace(/:/g,"-").replace(/ /g,"-");
while(dateStr.indexOf("--")>-1){
dateStr=dateStr.replace("--","-");
}
dateStr=dateStr.split("-");
var format=p.option["data"].split(",");
for(var i=0;i<format.length;i++){
datearr[format[i]]= dateStr[i] ? getIntFromStr(dateStr[i]) : 0;
}
try{
return new Date(datearr["y"],datearr["m"]-1,datearr["d"],datearr["h"],datearr["t"],datearr["s"]);
}catch(e){
return null;
}
return null;
}
function getIntFromStr(str){
str=str.toString();
while(str.indexOf("0")==0 && str.length>1){
str=str.substr(1,str.length);
}
return parseInt(str);
}
function formatDate(dateObj){
var datestr=nowFormatStr;
var m=p.option["force2"] ? format0((dateObj.getMonth()+1),2,"0") : (dateObj.getMonth()+1);
var d=p.option["force2"] ? format0(dateObj.getDate(),2,"0") : dateObj.getDate();
var h=p.option["force2"] ? format0(dateObj.getHours(),2,"0") : dateObj.getHours();
var t=p.option["force2"] ? format0(dateObj.getMinutes(),2,"0") : dateObj.getMinutes();
var s=p.option["force2"] ? format0(dateObj.getSeconds(),2,"0") : dateObj.getSeconds();
datestr=datestr.replace("y",dateObj.getFullYear()+"").replace("m",m).replace("d",d).replace("h",h).replace("t",t).replace("s",s);
return datestr;
}
function format0(toformat,num,plusstr){ 
var str=toformat+"";
if(str.length>=num){
return str.substr(str.length-num,num);
}
while(str.length<num){
str=plusstr+str;
}
return str;
}
function resetFormat(){
nowFormatStr="";
var dataArr=p.option["data"].split(",");
for(var i=0;i<dataArr.length;i++){
switch(dataArr[i]){
case "y":
nowFormatStr+="y\u5e74";
break;
case "m":
nowFormatStr+="m\u6708";
break;
case "d":
nowFormatStr+="d\u65e5 ";
break;
case "h":
nowFormatStr+=" h\u65f6";
break;
case "t":
nowFormatStr+="t\u5206";
break;
case "s":
nowFormatStr+="s\u79d2";
break;
}}
nowFormatStr=nowFormatStr.replace("  "," ");
switch(p.option["format"]){
case "normal":
nowFormatStr=nowFormatStr.replace("\u5e74","-").replace("\u6708","-").replace("\u65e5","").replace("\u65f6",":").replace("\u5206",":").replace("\u79d2","");
break;
case "unix":
nowFormatStr=nowFormatStr.replace("\u5e74","/").replace("\u6708","/").replace("\u65e5","").replace("\u65f6",":").replace("\u5206",":").replace("\u79d2","");
break;
}
if(nowFormatStr.substr(nowFormatStr.length-1,1)=="-" ||  nowFormatStr.substr(nowFormatStr.length-1,1)=="/" || nowFormatStr.substr(nowFormatStr.length-1,1)==":"){
nowFormatStr=nowFormatStr.substr(0,nowFormatStr.length-1);
}
nowFormatStr=trim(nowFormatStr);
}
function trim(str){
return (str+'').replace(/^\s*|\s*$/g,'');
}
function dateselectorStr(dateObj){
var startday=new Date(dateObj.getFullYear(),dateObj.getMonth(),1);
startday.setDate(1);
var startpos=startday.getDay()-1;
if(startpos<0){startpos=6};
startday.setDate(1);
startday.setDate(startday.getDate()-startpos-1);
var len=Math.ceil((startpos+(maxDay(dateObj.getFullYear(),dateObj.getMonth())))/7)*7;
var mstrarr=new Array();
for(var i=0;i<len;i++){
startday.setDate(startday.getDate()+1);
if(startday>=minDate &&  startday<=maxDate){
mstrarr.push([startday.getMonth(),startday.getDate()]);
}else  if(startday.getDate()==minDate.getDate() && startday.getMonth()==minDate.getMonth()){
mstrarr.push([startday.getMonth(),startday.getDate()]);
}else{
mstrarr.push(["","\u00d7"]);
}}
var mstr='<table width="100%" border="0" cellspacing="0" cellpadding="0"><tr>';
for(var i=0;i<weekStr.length;i++){
mstr+='<th>'+weekStr.substr(i,1)+'</th>';
}
mstr+='</tr><tr>';
var today=new Date();
for(var i=0;i<mstrarr.length;i++){
var sclass="";
if(mstrarr[i][0]==p.nowSelectedDate.getMonth() && mstrarr[i][1]==p.nowSelectedDate.getDate()){
sclass='class="selectedtd"';
}else if(mstrarr[i][0]==oldSelectedDate.getMonth() && mstrarr[i][1]==oldSelectedDate.getDate()){
sclass='class="defaulttd"';
}else if(mstrarr[i][0]==today.getMonth() && mstrarr[i][1]==today.getDate()){
sclass='class="todaytd"';
}else if(mstrarr[i][0]!=dateObj.getMonth()){
sclass='class="othermonth"';
}
mstr+='<td '+sclass+'><span rel="'+mstrarr[i][0]+'">'+mstrarr[i][1]+'</span></td>';
if(i%7==6){
mstr+="</tr><tr>";
}}
mstr+='</tr></table>';
return mstr;
}
function maxDay(year,month){
var d= new Date(year,month,1);
d.setMonth(d.getMonth()+1);
d.setDate(0);
return d.getDate();
}
function monthselectorStr(dateObj){
var mstrarr=monthHanzistr.split(",");
var mstr='<table width="100%" border="0" cellspacing="0" cellpadding="0"><tr>';
var today=new Date();
for(var i=0;i<mstrarr.length;i++){
var sclass="";
if(i==p.nowSelectedDate.getMonth()){
sclass='class="selectedtd"';
}else if(i==oldSelectedDate.getMonth()){
sclass='class="defaulttd"';
}else if(i==today.getMonth()){
sclass='class="todaytd"';
}
mstr+='<td width="25%" '+sclass+'><span rel="'+i+'">'+mstrarr[i]+'</span></td>';
if(i%3==2){
mstr+="</tr><tr>";
}}
mstr+='</tr></table>';
return mstr;
}
function getDateFromFormatStr(datestr){
var str=trim(datestr);
str=str.split(" ")[0];
str=str.split("-");
try{
return new Date(parseInt(str[0]),parseInt(str[1])-1,parseInt(str[2]));
}catch(e){
return null;
}}
function cloneDate(date){
return 	new Date(date.getFullYear(),date.getMonth(),date.getDate(),date.getHours(),date.getMinutes(),date.getSeconds());
}
function yearselectorStr(defaultYear,dispos){
if(!defaultYear){
defaultYear=new Date().getFullYear();
}
if(!dispos){
dispos=13;
}
var startYear=defaultYear-dispos;
if(startYear<minDate.getFullYear()){startYear=minDate.getFullYear()};
var endYear=maxDate.getFullYear();
var mstrarr=new Array();
for(var i=0;i<24;i++){
if(endYear && (startYear+i)>endYear){
mstrarr.push("\u00d7");
}else{
mstrarr.push((startYear+i)+"");
}}
var mstr='<table width="100%" border="0" cellspacing="0" cellpadding="0"><tr>';
var today=new Date();
for(var i=0;i<mstrarr.length;i++){
var sclass="";
if(mstrarr[i]==p.nowSelectedDate.getFullYear()){
if(mstrarr[i]==oldSelectedDate.getFullYear()){
sclass='class="selectedtd defaulttd"';
}else{
sclass='class="selectedtd"';
}
}else if(mstrarr[i]==oldSelectedDate.getFullYear()){
sclass='class="defaulttd"';
}else if(mstrarr[i]==today.getFullYear()){
sclass='class="todaytd"';
}
mstr+='<td width="25%" '+sclass+'><span>'+mstrarr[i]+'</span></td>';
if(i%4==3){
mstr+="</tr><tr>";
}}
mstr+='</tr></table>';
return mstr;
}
var timeselectorStr='<table width="100%" border="0" cellspacing="0" cellpadding="0"><tr><td><span>+</span></td><td width="6">&nbsp;</td><td><span>+</span></td><td width="6">&nbsp;</td><td><span>+</span></td></tr><tr><td><p id="select_hours"></p></td><td>:</td><td><p id="select_minutes"></p></td><td>:</td><td><p id="select_seconds"></p></td></tr><tr><td><span>-</span></td><td>&nbsp;</td><td><span>-</span></td><td>&nbsp;</td><td><span>-</span></td></tr></table>'
function hourselectorStr(step,maxNum,clum){
var mstr='<table width="100%" border="0" cellspacing="0" cellpadding="0"><tr>';
var tm=0;
var i=0;
while(tm<maxNum){
mstr+='<td><span>'+tm+'</span></td>';
if(i%clum==(clum-1)){
mstr+="</tr><tr>";
}
i++;
tm+=step;
}
mstr+='</tr></table>';
return mstr
}
}//JQ\u6269\u5c55\u9a8c\u8bc1\u65b9\u6cd5
(function($) {
$.fn.isEmpty=function(){
var va=trim($(this).val());
return (va.length<1)?true:false;
}
$.fn.isNumber=function(){
var va=trim($(this).val());
var reg = new RegExp("^[0-9]*$");
var reg2 = new RegExp(/^\d+\.{0,1}\d+$/);
return (reg.test(va) || reg2.test(va))?true:false;
}
$.fn.isUint=function(){
var va=trim($(this).val());
var reg = new RegExp("^[0-9]*$");
return (reg.test(va))?true:false;
}
$.fn.isInt=function(){
var va=trim($(this).val());
var reg = new RegExp("^-?[0-9]*$");
return (reg.test(va))?true:false;
}
$.fn.isID=function(){
var va=trim($(this).val());
var isIDCard1 = new Object();
var isIDCard2 = new Object();
isIDCard1=/^[1-9]\d{7}((0\d)|(1[0-2]))(([0|1|2]\d)|3[0-1])\d{3}$/;
isIDCard2=/^[1-9]\d{5}[1-9]\d{3}((0\d)|(1[0-2]))(([0|1|2]\d)|3[0-1])((\d{4})|\d{3}[A-Z])$/;
return (isIDCard1.test(va) || isIDCard2.test(va))?true:false;
}
$.fn.isEmail=function(){
var va=trim($(this).val());
var emailPat =/^\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$/;
var matchArray = va.match(emailPat);
return (matchArray == null)?false:true;
}
$.fn.isQQ=function(){
var va=trim($(this).val());
var qqPat = /[1-9][0-9]{4,}/;
var matchArray = va.match(qqPat);
return (matchArray == null)?false:true;
}
$.fn.isPhone=function(){
var va=trim($(this).val());
return ($(this).isTel(va) || $(this).isMoble(va));
}
$.fn.isTel=function(){
var va=trim($(this).val());
var isTel=new Object();
isTel=/\d{3}-\d{8}|\d{4}-\d{7}/;
return (!isTel.test(va))?false:true;
}
$.fn.isMobile=function(){
var va=trim($(this).val());
var isphoneno=new Object();
isphoneno=/^(13[0-9]|14[5|7]|15[0|1|2|3|5|6|7|8|9]|18[0|1|2|3|5|6|7|8|9])\d{8}$/;
return (!isphoneno.test(va))?false:true;
}
$.fn.isUrl=function(){
var va=trim($(this).val());
var strRegex = "^((https|http|ftp|rtsp|mms)?://)"
+ "?(([0-9a-z_!~*'().&=+$%-]+: )?[0-9a-z_!~*'().&=+$%-]+@)?" //ftp\u7684user@
+ "(([0-9]{1,3}.){3}[0-9]{1,3}" // IP\u5f62\u5f0f\u7684URL- 199.194.52.184
+ "|" // \u5141\u8bb8IP\u548cDOMAIN\uff08\u57df\u540d\uff09
+ "([0-9a-z_!~*'()-]+.)*" // \u57df\u540d- www.
+ "([0-9a-z][0-9a-z-]{0,61})?[0-9a-z]." // \u4e8c\u7ea7\u57df\u540d
+ "[a-z]{2,6})" // first level domain- .com or .museum
+ "(:[0-9]{1,4})?" // \u7aef\u53e3- :80
+ "((/?)|" // a slash isn't required if there is no file name
+ "(/[0-9a-z_!~*'().;?:@&=+$,%#-]+)+/?)$";
var re=new RegExp(strRegex);
return (!re.test(va))?false:true;
}
$.fn.isMoney=function(){
var va=trim($(this).val());
var reg = new RegExp(/^\d+(\d|(\.[0-9]{1,2}))$/);//0-2\u4f4d\u5c0f\u6570
return (!reg.test(va))?false:true;
}
$.fn.isPostcode=function(){
var va=trim($(this).val());
var reg = new RegExp(/^[a-zA-Z0-9 ]{3,12}$/);
return (!reg.test(va))?false:true;
}
$.fn.isEnglish=function(){
var va=trim($(this).val());
return (!/^[A-Za-z]+$/.test(va))?false:true;
}
$.fn.isEnglishNumber=function(){
var va=trim($(this).val());
return (!/^[A-Za-z0-9]+$/.test(va))?false:true;
}
$.fn.isEnglish_Number=function(){
var va=trim($(this).val());
va=va.replace(/\_/g,"");
return (!/^[A-Za-z0-9]+$/.test(va))?false:true;
}
$.fn.isIP=function(){
var va=trim($(this).val());
return (!/^\d+\.\d+\.\d+\.\d+/.test(va))?false:true;
}
$.fn.isChinese=function(){
var va=trim($(this).val());
return (!/^[\u4e00-\u9fa5]/.test(va))?false:true;
}
$.fn.isDate=function(){
var va=trim($(this).val());
var reg=/^(\d{1,4})(-|\/)(\d{1,2})\2(\d{1,2})$/; 
var r=value.match(reg);
if(r==null){return false;}
str=value.split(" ")[0];
str=str.split("-");
try{
new Date(parseInt(str[0]),parseInt(str[1])-1,parseInt(str[2]));
return true;
}catch(e){
return null;
}}
$.fn.isTime=function(){
var reg=/^(\d{1,2}):(\d{1,2}):(\d{1,2})$/;
var r=value.match(reg);
if(r==null){return false;}
try{
str=str.split(":");
new Date(2000,1,1,parseInt(str[0]),parseInt(str[1]),parseInt(str[2]));
return true;
}catch(e){
return false;
}}
$.fn.isDateTime=function(){
var reg=/^(\d{1,4})(-|\/)(\d{1,2})\2(\d{1,2}) (\d{1,2}):(\d{1,2}):(\d{1,2})$/;
var r=value.match(reg);
if(r==null){return false;}
try{
str=value.split(" ")[0];
str=str.split("-");
new Date(parseInt(str[0]),parseInt(str[1])-1,parseInt(str[2]));
try{
str=value.split(" ")[1];
str=str.split(":");
new Date(2000,1,1,parseInt(str[0]),parseInt(str[1]),parseInt(str[2]));
}catch(e){
return false;
}
return true;
}catch(e){
return false;
}}
$.fn.isLength=function(){
var va=trim($(this).val())+"";
var minl=$(this).attr("minlength");
var maxl=$(this).attr("maxlength");
var nowl=va.length;
if(minl && minl>nowl){
return false;
}
if(maxl && maxl<nowl){
return false;
}
return true;
}
$.fn.checkForm=function(addCheck){
var container=this;
var checkPoints=[
{"className":"check_email","checkFun":"isEmail","errorType":false,"error":"Email\u683c\u5f0f\u4e0d\u6b63\u786e"},
{"className":"check_int","checkFun":"isInt","errorType":false,"error":"\u8bf7\u8f93\u5165\u6574\u6570"},
{"className":"check_uint","checkFun":"isUint","errorType":false,"error":"\u8bf7\u8f93\u5165\u6b63\u6574\u6570"},
{"className":"check_url","checkFun":"isUrl","errorType":false,"error":"\u7f51\u5740\u683c\u5f0f\u4e0d\u6b63\u786e"},
{"className":"check_number","checkFun":"isNumber","errorType":false,"error":"\u8bf7\u8f93\u5165\u6570\u5b57"},
{"className":"check_id","checkFun":"isID","errorType":false,"error":"\u8eab\u4efd\u8bc1\u53f7\u7801\u683c\u5f0f\u4e0d\u6b63\u786e"},
{"className":"check_date","checkFun":"isDate","errorType":false,"error":"\u65e5\u671f\u683c\u5f0f\u9519\u8bef"},
{"className":"check_datetime","checkFun":"isDateTime","errorType":false,"error":"\u65e5\u671f\u65f6\u95f4\u683c\u5f0f\u9519\u8bef"},
{"className":"check_time","checkFun":"isTime","errorType":false,"error":"\u65f6\u95f4\u683c\u5f0f\u9519\u8bef"},
{"className":"check_qq","checkFun":"isQQ","errorType":false,"error":"QQ\u683c\u5f0f\u4e0d\u6b63\u786e"},
{"className":"check_phone","checkFun":"isPhone","errorType":false,"error":"\u7535\u8bdd\u53f7\u7801\u683c\u5f0f\u4e0d\u6b63\u786e"},
{"className":"check_tel","checkFun":"isTel","errorType":false,"error":"\u7535\u8bdd/\u624b\u673a\u53f7\u7801\u683c\u5f0f\u4e0d\u6b63\u786e"},
{"className":"check_mobile","checkFun":"isMobile","errorType":false,"error":"\u624b\u673a\u53f7\u7801\u683c\u5f0f\u4e0d\u6b63\u786e"},
{"className":"check_money","checkFun":"isMoney","errorType":false,"error":"\u8bf7\u8f93\u5165\u5e262\u4f4d\u5c0f\u6570\u7684\u6570\u5b57"},
{"className":"check_postcode","checkFun":"isPostcode","errorType":false,"error":"\u90ae\u7f16\u683c\u5f0f\u9519\u8bef"},
{"className":"check_english","checkFun":"isEnglish","errorType":false,"error":"\u8bf7\u8f93\u5165\u82f1\u6587"},
{"className":"check_englishnum","checkFun":"isEnglishNumber","errorType":false,"error":"\u8bf7\u8f93\u5165\u82f1\u6587\u548c\u6570\u5b57"},
{"className":"check_english_num","checkFun":"isEnglish_Number","errorType":false,"error":"\u8bf7\u8f93\u5165\u82f1\u6587\\u6570\u5b57\\u4e0b\u5212\u7ebf"},
{"className":"check_ip","checkFun":"isIP","errorType":false,"error":"IP\u683c\u5f0f\u4e0d\u6b63\u786e"},
{"className":"check_chinese","checkFun":"isChinese","errorType":false,"error":"\u8bf7\u8f93\u5165\u4e2d\u6587"}
]
if(typeof addCheck=="object"){
checkPoints=checkPoints.concat(addCheck); 
}
var checkrs=true;
for(var i=0;i<checkPoints.length;i++){
var tocheck="input."+checkPoints[i]["className"]+",textarea."+checkPoints[i]["className"];
container.find(tocheck).each(function(){
if($(this).val()!=""){
var rs;
if(typeof checkPoints[i]["checkFun"]=="string"){
rs=eval("$(this)."+checkPoints[i]["checkFun"]+"()");
}else if(typeof checkPoints[i]["checkFun"]=="function"){
rs=checkPoints[i]["checkFun"]($(this).val());	
}
if(rs==checkPoints[i]["errorType"]){
showerror($(this),checkPoints[i]["error"]);
checkrs=false;
}}
});
}
var tocheck="input.must,textarea.must,input.check_must,textarea.check_must";
container.find(tocheck).each(function(){
if($(this).isEmpty()){
showerror($(this),"\u4e0d\u80fd\u4e3a\u7a7a");
checkrs=false;
}
});
container.find("input.check_length,textarea.check_length").each(function(){
if($(this).val() && !$(this).isLength()){
var minl=$(this).attr("minlength");
var maxl=$(this).attr("maxlength");
if(minl && minl>0 && maxl && maxl>0){
showerror($(this),"\u8f93\u5165\u957f\u5ea6\u5728"+minl+"-"+maxl+"\u4e4b\u95f4(\u542b)");
}else if(minl && minl>0){
showerror($(this),"\u8f93\u5165\u957f\u5ea6\u9700\u4e0d\u5c0f\u4e8e"+minl);
}else if(maxl && maxl>0){
showerror($(this),"\u8f93\u5165\u957f\u5ea6\u9700\u4e0d\u5927\u4e8e"+maxl);
}
checkrs=false;
}
});
container.find(".notinput").unbind("mouseenter",showInputTips).bind("mouseenter",showInputTips).bind("mouseleave",hideInputTips).bind("mousedown",function(){
hideInputTips();
$(this).removeClass("notinput").attr("title","").unbind("mouseenter",showInputTips).unbind("mouseleave",hideInputTips);
});
return checkrs;
}
function showerror(input,msg){
if(input.attr("type")=="hidden" || input.hasClass("uploadpic") || input.hasClass("uploadfile") || input.hasClass("fm_replacedInput")){
input.parent().addClass("notinput").attr("title",msg).one("mousedown",function(){$(this).removeClass("notinput").attr("title",null)});
}else{
input.addClass("notinput").attr("title",msg).one("mousedown",function(){$(this).removeClass("notinput").attr("title",null)});
}}
function showInputTips(){
hideInputTips();
var tipstr=$(this).attr("title");
var popTip=$('<div id="fm_notInputPopTip"><i class="fa fa-exclamation-circle"></i> '+tipstr+'</div>');
$("body").append(popTip);
var poss=$(this).offset();
popTip.css({"position":"absolute","top":(poss.top-popTip.outerHeight())+"px","left":poss.left+"px","z-index":999999,"min-width":($(this).outerWidth()-(popTip.outerWidth(true)-popTip.width()))+"px"});
popTip.stop(true).hide().fadeIn("fast").delay(3000).fadeOut("slow",hideInputTips);
}
function hideInputTips(){
var tip=$("#fm_notInputPopTip");
tip.stop(true).del();//.remove();
}
$.fn.serializeJson=function(){
var serializeObj={};
var array=this.serializeArray();
var str=this.serialize();
var form=$(this);
$(array).each(function(){
if(serializeObj[this.name]){
if($.isArray(serializeObj[this.name])){
serializeObj[this.name].push(this.value);
}else{
serializeObj[this.name]=[serializeObj[this.name],this.value];
}
}else{
var obj=form.find("input[name='"+this.name+"']");
if(obj.attr("type")=="checkbox"){
serializeObj[this.name]=[this.value];
}else{
serializeObj[this.name]=this.value;
}}
});
for(na in serializeObj){
if(typeof serializeObj[na]=="string" && (serializeObj[na].indexOf("{'")==0 || serializeObj[na].indexOf("[")==0)){
try{
var va=serializeObj[na].replace(/\'/g,"\"");
serializeObj[na]=JSON.parse(va);
}catch(e){
}}}
return serializeObj;
};
$.fn.bindJsonData=function(formdata,htmlcan){   
var container=$(this);
for(var na in formdata){
var va=formdata[na];
if(typeof va=="string"){
va=va.replace(/\&apos\;/g,"\'"); 
}
var objs=container.find("[name='"+na+"'],[id='"+na+"']");
objs.each(function(){
var obj=$(this);
if(obj.is("img")){
obj.attr("src",va).ZoomBigPic();
}else if(obj.is("input") || obj.is("textarea") || obj.is("select")){
if(obj.attr("type")=="radio"){
if(obj.val()==va){
obj.get(0).checked=true;
obj.change();
}	else{
obj.get(0).checked=false;
}
}else if(obj.attr("type")=="checkbox"){
va=(typeof va!="object")?(va.indexOf(",")>0?va.split(","):[va]):va;
obj.val(va).change(); 
}else if(obj.attr("type")=="text" || obj.attr("type")=="hidden" || obj.is("textarea")){
if(typeof va =="object"){ 
va=JSON.stringify(va);
va=va.replace(/\"/g,"\'"); 
}
obj.val(va).change(); 
}else{
obj.val(va).change();
}
}else{
htmlcan?obj.html(va):obj.text(va);
}
})
}
container.find("input[disabled=disabled],input[readonly=readonly]").each(function(){ 
if(($(this).attr("type")=="text") && !$(this).hasClass("fm_popoutSelect") && !$(this).hasClass("fm_leaveit") && !$(this).hasClass("fm_replacedInput") && !$(this).hasClass("fm_dateinput") && !$(this).hasClass("fm_datepartinput") && !$(this).hasClass("fm_dateselectinput")  && !$(this).hasClass("fm_actioninput")){
var txt=$(this).val()+"";
$(this).hide().after($("<span>"+txt+"</span>"));
$(this).bind("change",function(){
$(this).next("span").text($(this).val());
});
}
});
}
})(jQuery);
(function($){
$.fn.popOutSelect=function(){
$(this).each(function(){
$(this).popSelectInput();
})
}
$.fn.popSelectInput=function(){
var inputobj=$(this);
var Wraper;
var popObj;
var textInput;
if(!inputobj.hasClass("fm_leaveit")){
var W=inputobj.width();
var title=inputobj.attr("title")||"";
title=title?'title="'+title+'"':"";
Wraper=$('<label class="fm_formitemwraper" '+title+'></label>');
textInput=inputobj.clone();
textInput.attr("name",inputobj.attr("name")+"_text").attr("id",(inputobj.attr("id")||inputobj.attr("name"))+"_text");
Wraper.append(textInput);
textInput.attr("readonly",true).addClass("fm_replacedInput").css({"cursor":"pointer"});
inputobj.after(Wraper);
textInput.setRealSize(W);
inputobj.addClass("fm_replacedInput").hide();
(inputobj.attr("disabled")==true || inputobj.attr("disabled")=="disabled")?textInput.addClass("disabled"):null;
inputobj.data({"textinput":textInput,"type":"popselect"});
Wraper.bind("click",function(){
var option=inputobj.dataOptions();
option["name"]="popSelect_"+(new Date()).getTime()+Math.floor(Math.random()*1000);
option["callback"]=function(values){
inputobj.val(values["value"]).change();
textInput.val(values["text"]);
};
option["lock"]=true;
if(inputobj.attr("disabled")==true || inputobj.attr("disabled")=="disabled" || inputobj.attr("readonly")==true || inputobj.attr("readonly")=="readonly"){
return;
}
WINDOW.open(option,{"values":{"value":inputobj.val(),"text": textInput.val()},"condition":option["param"]},Wraper);
})
}}
$.fn.textInput=function(){
$(this).each(function(){
$(this).MTextInput();
})
}
$.fn.MTextInput=function(){
var inputobj=$(this);
inputobj.setRealSize($(this).width());
if(!inputobj.hasClass("fm_leaveit") && !inputobj.hasClass("fm_replacedInput")){
var title=$(this).attr("title")||"";
title=title?'title="'+title+'"':"";
var mustwraper=$('<label class="fm_formitemwraper" '+title+'></label>');
$(this).hasClass("must")?mustwraper.addClass("must"):null;
inputobj.after(mustwraper);
mustwraper.append(inputobj);
($(this).attr("disabled")==true || inputobj.attr("disabled")=="disabled")?$(this).addClass("disabled"):null;
}}
$.fn.checkRadio=function(){
$(this).each(function(){
var checkObj=$(this);
checkObj.bind("click",function(){
if(checkObj.attr("readonly")){
return false;
}
})
checkObj.addClass("fm_replacedInput");
var wraper=	checkObj.parent();
if($(wraper).is("label")){
wraper.addClass("fm_radiobox");
}else{
checkObj.wrap('<label class="fm_radiobox"></label>');
wraper=checkObj.parent();
}
(checkObj.get(0).checked)?wraper.addClass("check"):wraper.removeClass("check");
(checkObj.get(0).disabled)?wraper.addClass("disabled"):wraper.removeClass("disabled");
checkObj.data("type","radio");
if(browserIsIE8){
checkObj.css({"width":"0px","height":"0px","padding":"0px","margin":"0px"});
}else{
checkObj.hide();
}
checkObj.bind("change",function(){
if(checkObj.attr("disabled") || checkObj.attr("readonly")){
return;
}
var rname=checkObj.attr("name");
var checked=$(this).get(0).checked;
if(checked){
var container=checkObj.parent().parent();
var level=0;
while(container.find("input[name='"+rname+"']").length<=1  && level<5){
level++;
container=container.parent();
}
container.find("input[name='"+rname+"']").parent().removeClass("check");
wraper.addClass("check");
}else{
wraper.removeClass("check");
}
});
})
}
$.fn.checkBox=function(){
$(this).each(function(){
var checkObj=$(this);
checkObj.bind("click",function(){
if(checkObj.attr("readonly")){
return false;
}
})
checkObj.addClass("fm_replacedInput");
var wraper=	checkObj.parent();
if($(wraper).is("label")){
wraper.addClass("fm_checkbox");
}else{
checkObj.wrap('<label class="fm_checkbox"></label>');
wraper=checkObj.parent();
}
checkObj.data("type","checkbox");
(checkObj.get(0).checked)?wraper.addClass("check"):wraper.removeClass("check");
(checkObj.get(0).disabled)?wraper.addClass("disabled"):wraper.removeClass("disabled");
if(browserIsIE8){
checkObj.css({"width":"0px","height":"0px","padding":"0px","margin":"0px"});
}else{
checkObj.hide();
}
checkObj.bind("change",function(){
if(checkObj.attr("disabled") || checkObj.attr("readonly")){
return;
}
(checkObj.get(0).checked)?wraper.addClass("check"):wraper.removeClass("check");
});
})
}
$.fn.checked=function(type){
type=(type==false)?false:true;
$(this).get(0).checked=type;
$(this).change();
}
$.fn.selectInput=function(){
$(this).each(function(){
if(!$(this).hasClass("fm_leaveit")){
$(this).MSelectInput();
}
})
}
$.fn.autoAddInput=function(){
$(this).each(function(){
if(!$(this).hasClass("fm_leaveit")){
$(this).autoAddInputCreat();
}
})
}
$.fn.autoAddInputCreat=function(){
var container=$(this);
var inputItem=container.find(">*").eq(0);
var oldbox=$('<div class="fm_item"><a class="fm_addbut"><i class="fa fa-plus"></i></a></div>');
container.append(oldbox);
oldbox.prepend(inputItem);
inputItem.val("");
var checkAllInput=function(){
var allinput=true;
container.find("input").each(function(){
if(!trim($(this).val())){
allinput=false;
}
})
return allinput;
}
var addItem=function(index,dval){
index=(isNaN(index))?-1:index;
var box=container.find(".fm_item:eq("+index+")");
if(index<0 || box.length==0){
var newinput=inputItem.clone(true);
box=$('<div class="fm_item new"><a><i class="fa fa-remove"></i></a></div>');
box.prepend(newinput);
oldbox.after(box);
box.find(">a").one("click",function(){
box.del();
box=null;
});
}
var input=box.find("input");
input.val(dval||"");
return input;
}
inputItem.find("input").unbind().bind("change",function(){
var defaultVal=inputItem.find("input").val()+"";
defaultVal=defaultVal.split(",");
for(var i=0;i<defaultVal.length;i++){
defaultVal[i]?addItem(i,defaultVal[i]):null;
}
});
var addBut=oldbox.find("a.fm_addbut");
addBut.bind("click",function(){
if(!checkAllInput()){ 
return;
}
var input=addItem();
input.focus();
});
}
$.fn.selectSwitch=function(){
$(this).each(function(){
if(!$(this).hasClass("fm_leaveit")){
$(this).MSelectSwitch();
}
})
}
$.fn.MSelectSwitch=function(){
var selObj=$(this);
var option=selObj.dataOptions();
var iesbtm;
var insideChange=false;
var selwidth=selObj.outerWidth();
var dis=selObj.attr("disabled");
dis=typeof dis=="undefined"?"":'disabled="disabled"';
var id=selObj.attr("id");
var na=selObj.attr("name");
var W=selObj.outerWidth();
W=W<20?20:W;
var onchange=selObj.attr("onchange");
var classStr=selObj.attr("class");
classStr=typeof classStr=="undefined"?"":classStr+" ";
var selectOptions=[];
selObj.find("option").each(function(){
selectOptions.push({"text":$(this).text(),"value":$(this).val()});
});
var title=selObj.attr("title");
title=title?'title="'+title+'"':"";
var selectWraper;
var inputObj;
var sid;
sid=selObj.val();
sid=(sid!=null && typeof sid!="undefined")?sid:selectOptions[0]?selectOptions[0]["value"]:"";
selectWraper=$('<label class="fm_formitemwraper" '+title+'></label>');
selectWraper.css({"position":"relative"});
var selectObj=$('<div class="fm_Switch_box '+(dis?"disabled":"")+'"><dd></dd></div>');
selectWraper.append(selectObj);
inputObj=$('<input name="'+na+'" id="'+id+'" type="hidden" value=""  '+dis+'  class="'+classStr+' fm_replacedInput hd" />');
selectWraper.append(inputObj);
selObj.after(selectWraper).remove();
selectObj.css({"overflow":"hidden"});
selectObj.setRealSize(selwidth);
selectWraper.find("p").css({"overflow":"hidden"}).setRealSize(selectObj.width());
var changeOption=function(optionArray){
selectOptions=(typeof optionArray=="object" && optionArray.length>0)?$.extend(true,{},{"data":optionArray}):{"data":[{"value":"","text":""}]};
selectOptions=selectOptions["data"];
setVal(selectOptions[0]["value"]||"");
}
var setVal=function(value){
if(option["inputable"]){
inputObj.val(value);
return;
}
var selectVal=$.getObjectInArray(selectOptions,"value",value);
if(selectVal){
inputObj.val(selectVal["value"]);
selectWraper.find("dd").text(selectVal["text"]);
}else{
inputObj.val("");
selectWraper.find("dd").text("");
}}
var setSelected=function(selected){
setVal(selected["value"]);
insideChange=true;
inputObj.change();
insideChange=false;
}
var hideSwitch=function(){
selectWraper.find(".fm_switchPop").del();
}
var showSwitch=function(){
hideSwitch();
if(selectObj.hasClass("disabled")){
return;
}
var switchpop=$('<div class="fm_switchPop"></div>');
var nowval=inputObj.val();
for(var i=0;i<selectOptions.length;i++){
var option=$('<p>'+selectOptions[i]["text"]+'</p>');
option.data("value",selectOptions[i]["value"]);
if(selectOptions[i]["value"]==nowval){
option.addClass("nowid");
}
switchpop.append(option);
}
selectWraper.append(switchpop);
switchpop.find("p").one("click",function(e){
var newVal=$(this).data("value");
setVal(newVal);
hideSwitch();
selectWraper.unbind("mouseleave");
stopPP(e);
})
switchpop.css({"position":"absolute","z-index":9999,"left":"0px","rigth":"0px","top":-Math.floor((switchpop.outerHeight()-selectWraper.find(">.fm_Switch_box").outerHeight())/2)+"px"});
switchpop.setRealSize(selwidth);
selectWraper.one("mouseleave",hideSwitch)
}
var showSelector=function(){
selectObj.removeClass("notinput");
var can=(inputObj.attr("disabled")=="disabled" || inputObj.attr("disabled")==true || inputObj.attr("readonly")=="readonly" || inputObj.attr("readonly")==true)?false:true;
if(!can || selectObj.hasClass("open")){return}
if(browserIsIE){
if(iesbtm){
clearTimeout(iesbtm);
iesbtm=null;
}
iesbtm=setTimeout(function(){
showSwitch();
},100);
return;
}else{
showSwitch();
}}
var getText=function(){
return selectWraper.find("dd").text();
}
inputObj.attr("onchange",onchange);
inputObj.data({"selectobj":selectObj,"changeOption":changeOption,"type":"select","getoptions":function(){return selectOptions},"getText":function(){ return getText();}});
setVal(sid);
$(inputObj).bind("change",function(){
if(insideChange){ 
return;
}
var value=inputObj.val();
setVal(value);
})
selectWraper.unbind("click").bind("click",showSelector);
}
$.fn.MSelectInput=function(){
var selObj=$(this);
var option=selObj.dataOptions();
var iesbtm;
var insideChange=false;
var dis=selObj.attr("disabled");
dis=typeof dis=="undefined"?"":'disabled="disabled"';
var id=selObj.attr("id");
var na=selObj.attr("name");
var W=selObj.outerWidth();
W=W<60?60:W;		//W-=20
var onchange=selObj.attr("onchange");
var classStr=selObj.attr("class");
classStr=typeof classStr=="undefined"?"":classStr+" ";
var selectOptions=[];
selObj.find("option").each(function(){
selectOptions.push({"text":$(this).text(),"value":$(this).val()});
});
var title=selObj.attr("title");
title=title?'title="'+title+'"':"";
var selectWraper;
var inputObj;
var selectObj;
var sid;
if(option["inputable"]){
sid=selObj.get(0).selectedIndex;
sid=selObj.find("option:eq("+sid+")").text();
selectWraper=$('<label class="fm_formitemwraper" '+title+'></label>');
selectObj=$('<div class="fm_Select_box '+(option["compact"]?" fm_compact":"")+'">'
+(option["compact"]?'':'<span></span>')
+'</div>');
selectObj.css({"position":"relative"}).find("span").css({"float":"right","display":"block"});
selectWraper.append(selectObj);
selObj.after(selectWraper).remove(); 		//return
inputObj=$('<input name="'+na+'" id="'+id+'" type="text" value=""  '+dis+'  class="'+classStr+' fm_replacedInput" />');
selectObj.prepend(inputObj);
selectObj.setRealSize(W);
inputObj.css({"float":"left"}).setRealSize(selectObj.width()-selectObj.find("span").outerWidth(true));
}else{
sid=selObj.val();
sid=(sid!=null && typeof sid!="undefined")?sid:selectOptions[0]?selectOptions[0]["value"]:"";
selectWraper=$('<label class="fm_formitemwraper" '+title+'>'
+'<div class="fm_Select_box '+(dis?"disabled":"")+(option["compact"]?" fm_compact":"")+'">'
+'<dd></dd>'
+(option["compact"]?'':'<span></span>')
+'</div>'
+'</label>');
inputObj=$('<input name="'+na+'" id="'+id+'" type="hidden" value=""  '+dis+'  class="'+classStr+' fm_replacedInput hd" />');
selectWraper.append(inputObj);
selObj.after(selectWraper).remove();
selectWraper.find("span").css({"float":"right","display":"block"});
selectObj=selectWraper.find(".fm_Select_box");
selectObj.setRealSize(W);
selectWraper.find("dd").css({"overflow":"hidden","float":"left"})
.setRealSize(selectObj.width()-selectWraper.find("span").outerWidth(true));
}
var changeOption=function(optionArray){
selectOptions=(typeof optionArray=="object" && optionArray.length>0)?$.extend(true,{},{"data":optionArray}):{"data":[{"value":"","text":""}]};
selectOptions=selectOptions["data"];
if(option["inputable"]){
inputObj.val(selectOptions[0]["text"]||"").change();
}else{
setVal(selectOptions[0]["value"]||"");
}}
var setVal=function(value){
if(option["inputable"]){
inputObj.val(value);
return;
}
var selectVal=$.getObjectInArray(selectOptions,"value",value);
if(selectVal){
inputObj.val(selectVal["value"]);//.change();
selectWraper.find("dd").text(selectVal["text"]);
}else{
inputObj.val("");//.change();
selectWraper.find("dd").text("");
}}
var setSelected=function(selected){
if(option["mulit"]){
inputObj.val(selected["value"]);
selectWraper.find("dd").text(selected["text"]);
return;
}
if(option["inputable"]){
setVal(selected["text"]);
}else{
setVal(selected["value"]);
}
insideChange=true;
inputObj.change();
insideChange=false;
}
var startDropList=function(){
selectObj.removeClass("notinput");
var can=(inputObj.attr("disabled")=="disabled" || inputObj.attr("disabled")==true || inputObj.attr("readonly")=="readonly" || inputObj.attr("readonly")==true)?false:true;
if(!can || selectObj.hasClass("open")){return}
if(browserIsIE){
if(iesbtm){
clearTimeout(iesbtm);
iesbtm=null;
}
iesbtm=setTimeout(function(){
$.dropSelectList(selectObj,selectOptions,setSelected,inputObj.val(),(option["inputable"]?"text":null),option["mulit"]);
},100);
return;
}else{
$.dropSelectList(selectObj,selectOptions,setSelected,inputObj.val(),(option["inputable"]?"text":null),option["mulit"]);
}}
var getText=function(){
return selectWraper.find("dd").text();
}
inputObj.attr("onchange",onchange);
inputObj.data({"selectobj":selectObj,"changeOption":changeOption,"type":"select","getoptions":function(){return selectOptions},"getText":function(){ return getText();}});
setVal(sid);
$(inputObj).bind("change",function(){
if(insideChange){ 
return;
}
var value=inputObj.val();
setVal(value);
})
selectWraper.unbind("click").bind("click",startDropList);
}
$.fn.getoptions=function(){
var getop=$(this).data("getoptions");
if(typeof getop=="function"){
return getop();
}
return null;
}
$.fn.changeOption=function(newOptions){
var actionObj=$(this).data("changeOption");
if(typeof actionObj=="function"){
actionObj(newOptions);
}}
$.fn.selectOption=function(newOptions){
if(!newOptions){
var getop=$(this).data("getoptions");
if(typeof getop=="function"){
return getop();
}
return null;
}
var actionObj=$(this).data("changeOption");
if(typeof actionObj=="function"){
actionObj(newOptions);
}}
$.fn.getText=function(){
var getText=$(this).data("getText");
if(typeof getText=="function"){
return getText();
}
return null;
}
$.extend({
dropSelectList:function(selectObj,Options,callback,nows,biduiname,mulit){
if(Options.length<1){
return;
}
biduiname=biduiname?biduiname:"value";
var dropObj=$('<div class="fm_Select_Droplist '+(mulit?"mulit":"")+'"></div>');
for(var i=0;i<Options.length;i++){
var option=$('<p rel="'+Options[i]["value"]+'">'+Options[i]["text"]+'</p>');
dropObj.append(option);
}
$("body").append(dropObj);
if(nows){
vals=nows.split(",");
for(var i=0;i<vals.length;i++){
dropObj.find("p[rel='"+vals[i]+"']").addClass("nowid");
}}
var pos=selectObj.offset();
pos.left+=$(window).scrollLeft();
pos.top+=$(window).scrollTop();
var H=$(window).height()-pos.top-selectObj.outerHeight()-20;//-dropObj.outerHeight(true);
dropObj.css({"position":"absolute","z-index":"9999999","overflow":"auto","min-width":selectObj.width()+"px"});
if(H<60 && dropObj.outerHeight()>H){
dropObj.css({"max-height":($(window).height()-H)+"px"});
dropObj.css({"left":pos.left+"px","bottom":($(document).height()-pos.top-dropObj.height()-9)+"px"});
}else{
dropObj.css({"left":pos.left+"px","top":(pos.top+selectObj.outerHeight()-1)+"px","max-height":H+"px"});
}
var selectClick=function(e){
if(mulit){
if($(this).hasClass("nowid")){
$(this).removeClass("nowid");
}else{
$(this).addClass("nowid");
}
var vals="";
var text="";
dropObj.find("p.nowid").each(function(){
var index=$(this).index();
vals+=Options[index]["value"]+",";
text+=Options[index]["text"]+",";
})
if(vals.length>0){
vals=vals.substr(0,vals.length-1);
text=text.substr(0,text.length-1);
}
callback({"text":text,"value":vals});
}else{
dropObj.find("p.nowid").removeClass("nowid");
$(this).addClass("nowid");
var index=$(this).index();
callback(Options[index]);
hideDroplist();
}
e.stopPropagation();
}
var hideDroplist=function(){
selectObj.removeClass("open");
$(document).unbind("click",hideDroplist).unbind("mousewheel",hideDroplist);
$(window).unbind("scroll",hideDroplist);
if(dropObj){
dropObj.del();//.remove();
}
dropObj=null;
}
var stopEvent=function(e){
e.stopPropagation();
}
dropObj.hide().slideDown("fast",function(){
$(document).one("mousemove",hideDroplist).one("mousewheel",hideDroplist);
$(window).one("scroll",hideDroplist);
});
selectObj.addClass("open");
selectObj.bind("mousemove",stopEvent);
dropObj.bind("mousemove",stopEvent).bind("mouseleave",hideDroplist).bind("mousewheel",stopEvent).find("p").bind("click",selectClick);
}
})
$.fn.disable=function(type){
type=(type==false)?false:true;
var inputtype=$(this).data("type");
switch(inputtype){
case "radio":
case "checkbox":
$(this).attr("disabled",type);
var wraper=$(this).parent();
(type)?wraper.addClass("disabled"):wraper.removeClass("disabled");
break;
case "dateinput":
$(this).attr("disabled",type);
(type)?$(this).addClass("disabled"):$(this).removeClass("disabled");
break;
case "select":
var selectObj=$(this).data("selectobj");
if(selectObj){
type?selectObj.addClass("disabled"):selectObj.removeClass("disabled");
}
$(this).attr("disabled",type);
break;
case "upload":
$(this).data("enabledUpload",!type);
(type)?$(this).parent().addClass("disabled"):$(this).parent().removeClass("disabled");
break;
case "popselect":
var textinput=$(this).data("textinput");
(type)?textinput.addClass("disabled"):textinput.removeClass("disabled");
$(this).attr("disabled",type);
break;
default:
$(this).attr("disabled",type);
(type)?$(this).addClass("disabled"):$(this).removeClass("disabled");
break;
}}
$.fn.readonly=function(type){
type=(type==false)?false:true;
var inputtype=$(this).data("type");
switch(inputtype){
case "radio":
case "checkbox":
$(this).attr("readonly",type);
var wraper=$(this).parent();
(type)?wraper.addClass("readonly"):wraper.removeClass("readonly");
break;
case "dateinput":
(type)?$(this).addClass("readonly"):$(this).removeClass("readonly");
break;
case "select":
var selectObj=$(this).data("selectobj");
if(selectObj){
type?selectObj.addClass("readonly"):selectObj.removeClass("readonly");
}
$(this).attr("readonly",type);
break;
case "upload":
$(this).data("enabledUpload",!type);
(type)?$(this).parent().addClass("readonly"):$(this).parent().removeClass("readonly");
break;
case "popselect":
var textinput=$(this).data("textinput");
(type)?textinput.addClass("readonly"):textinput.removeClass("readonly");
$(this).attr("readonly",type);
break;
default:
$(this).attr("readonly",type);
(type)?$(this).addClass("readonly"):$(this).removeClass("readonly");
break;
}}
$.fn.getValue=function(){
var val="";
if($(this).attr("type")=="checkbox"){
$(this).each(function(){
val+=$(this).get(0).checked?($(this).val()+","):"";
});
if(val.length>1){
val=val.substr(0,val.length-1);
}
}else if($(this).attr("type")=="radio"){
$(this).each(function(){
$(this).get(0).checked?val=$(this).val():null;
});
}else{
val=$(this).val();
}
return val;
}
$.fn.addParam=function(paramObj){
var option=$(this).dataOptions();
option["param"]=$.extend({},option["param"]||{},paramObj);
$(this).attr("data-option",JSON.stringify(option).replace(/\"/g,"\'"));
}
})(jQuery);/*
\u6807\u7b7e\u6807\u8bb0\u8bf4\u660e:
class="fm_leaveit"      \u4e0d\u5904\u7406
*/
function prepareForm(container){
}
function formatForm(container){
container.find("input.fm_popOutSelect:not(.fm_leaveit,.fm_replacedInput)").popOutSelect();
container.find("input[type=checkbox]:not(.fm_leaveit,.fm_replacedInput)").checkBox();
container.find("input[type=radio]:not(.fm_leaveit,.fm_replacedInput)").checkRadio();
container.find(".fm_uploadFile:not(.fm_leaveit,.fm_replacedInput),.fm_uploadPic:not(.fm_leaveit,.fm_replacedInput)").uploadButton();
container.find(".fm_uploadFilesShow").showUploadFiles(container);
container.find(".fm_uploadPicsShow").showUploadPics(container);
container.find(".fm_voicePlay:not(.fm_leaveit,.fm_replacedInput)").Mp3Player();
container.find(".fm_videoPlay:not(.fm_leaveit,.fm_replacedInput)").VideoPlayer();
container.find("input.fm_dateinput:not(.fm_leaveit,.fm_replacedInput)").attr("readonly",true).DatePicker();//.addClass("fm_leaveit");
container.find("input.fm_datepartinput:not(.fm_leaveit,.fm_replacedInput)").attr("readonly",true).DatePartPicker();//.addClass("fm_leaveit");
container.find("input.fm_dateselectinput:not(.fm_leaveit,.fm_replacedInput)").attr("readonly",true).DateSelector();//.addClass("fm_leaveit");
container.find("input[type=text]:not(.fm_leaveit,.fm_replacedInput),textarea:not(.fm_leaveit,.fm_replacedInput)").textInput();
container.find(".fm_mulitInput").autoAddInput();
container.find("select.fm_switchSelect:not(.fm_leaveit,.fm_replacedInput)").selectSwitch();
container.find("select:not(.fm_leaveit,.fm_replacedInput)").selectInput();
}
function formatDetail(container){
container.find(".fm_uploadPicsShow").uploadPicsDetail(container);
container.find(".fm_uploadFilesShow").uploadFilesDetail(container);
container.find(".fm_voicePlay:not(.fm_leaveit)").Mp3Player();
container.find(".fm_videoPlay:not(.fm_leaveit)").VideoPlayer();
}
function htmlEditor(){
var p=this;
var Editor;
this.install=function(editorinput){
if(!KindEditor){
return;
}
var dd=new Date();
var editerId="editor"+editorinput.attr("id")+dd.getTime().toString()+Math.floor(Math.random()*1000);
editorinput.attr("id",editerId);
Editor=KindEditor.create("#"+editerId,{
autoHeightMode : true,
items:[
'source', '|', 'undo', 'redo', '|', 'preview', 'print', 'template', 'code', 'cut', 'copy', 'paste',
'plainpaste', 'wordpaste', '|', 'justifyleft', 'justifycenter', 'justifyright',
'justifyfull', 'insertorderedlist', 'insertunorderedlist', 'indent', 'outdent', 'subscript',
'superscript', 'clearhtml', 'quickformat', 'selectall', '|', 'fullscreen', '/',
'formatblock', 'fontname', 'fontsize', '|', 'forecolor', 'hilitecolor', 'bold',
'italic', 'underline', 'strikethrough', 'lineheight', 'removeformat', '|', 'image',
'flash', 'media', 'insertfile', 'table', 'hr', 'baidumap', 'pagebreak',
'anchor', 'link', 'unlink', '|', 'about'
],
allowImageUpload:false,
allowFileUpload:false,
allowFlashUpload:false,
allowMediaUpload:false,
allowFileManager:false,
afterCreate:function(){
this.loadPlugin('autoheight');
}
});
}
this.sync=function(){
Editor.sync();
}
this.html=function(){
return Editor.html();
}
this.getText=function(length){
var text=Editor.text();
text=delHtmlTag(text);
text=delReturn(text);
text=delBlank(text);
text=length?text.substr(0,length):"";
return text
}
this.insert=function(pichtml){
if(Editor){
Editor.insertHtml(pichtml);
}}
this.destroy=function(){
if(Editor){
Editor.remove();
Editor=null;
}}}
function TreeSelector(Treeobj,treeOptions,showContainer,ismulit,defaultvar){
var p=this;
var onCheckFlag=false;
var firstLoad=true;
this.install=function(){
$.extend(treeOptions,{"animate":true,"checkbox":true,"onCheck":treeBranchClick,"onLoadSuccess":setTreeDefault,"onExpand":scrollToNode});
if(!ismulit){
treeOptions["cascadeCheck"]=false;
}
Treeobj.tree(treeOptions);
}
this.destroy=function(){
if(Treeobj){
Treeobj.del();
Treeobj=null;
}
showContainer.clear();//.empty();
}
function setTreeDefault(node,data){
if(firstLoad){
var rootNode=Treeobj.tree("getRoot");
Treeobj.tree("expand",rootNode.target);
firstLoad=false;
}
if(!defaultvar){return}
var Values=defaultvar["values"]||{};
var defaultValues=Values["value"];
if(!defaultValues){return}
defaultValues=defaultValues.split(",")
var defaultText=Values["text"].split(",");
var valObj=[];
isChecking=true;
for(var i=0;i<defaultValues.length;i++){
if(defaultValues[i]){
addSelect(defaultValues[i]);
valObj.push({"text":defaultText[i],"value":defaultValues[i]});
}}
isChecking=false;
refreshSelectBox(valObj);
defaultvar=null;
}
function scrollToNode(node){
if(ismulit && treeOptions["cascadeCheck"] && !Treeobj.tree('isLeaf',node.target)){ 
var checked=node.checked;
if(checked){
Treeobj.tree('check',node.target);
onCheckFlag=false;
refreshSelected();
}}
Treeobj.scrollTo(node.target,300,{axis:'y'});
}
var isChecking=false;
function treeBranchClick(node,checked){
if(ismulit && treeOptions["cascadeCheck"] && !Treeobj.tree('isLeaf',node.target)){ 
if(checked){
Treeobj.tree('expand',node.target);
}}
if(isChecking){
return;
}
var nodeValue=node.value;
if(!ismulit){
isChecking=true;
var nodes=Treeobj.tree("getChecked");
for(var i=0;i<nodes.length;i++){
if(nodes[i].value!=nodeValue){
Treeobj.tree("uncheck",nodes[i].target);
}else{
Treeobj.tree("check",nodes[i].target);
}}
isChecking=false;
}
refreshSelected();
}
function refreshSelected(){
var nodes=Treeobj.tree("getChecked");
var checked=[];
for(var i=0;i<nodes.length;i++){
if(treeOptions["exceptNobranch"]){
if((typeof  nodes[i].children1)=="undefined" && (typeof  nodes[i].children)=="undefined"){
checked.push({"value":nodes[i]["value"],"text":nodes[i]["text"]});
}
}else{
checked.push({"value":nodes[i]["value"],"text":nodes[i]["text"]});
}}
refreshSelectBox(checked);
}
this.getSelected=function(){
var selval="";
var seltext="";
showContainer.find("ul>li").each(function(){
selval+=$(this).attr("rel")+",";
seltext+=$(this).text()+",";
})
selval=selval.length>0?selval.substr(0,selval.length-1):selval;
seltext=seltext.length>0?seltext.substr(0,seltext.length-1):selval;
return {"text":seltext,"value":selval};
}
function refreshSelectBox(chkArr){
var contBox=$('<ul></ul>');
showContainer.clear();
showContainer.empty().append(contBox).append($('<div class="cl"></div>'));
for(var i=0;i<chkArr.length;i++){
contBox.append($('<li rel="'+chkArr[i]["value"]+'"><i class="fa fa-remove"></i> '+chkArr[i]["text"]+'</li>'));
}
contBox.find("li i").bind("click",removeSelect);
}
function addSelect(value){
var nodes=Treeobj.tree("getChecked","unchecked");
var node;
for(var i=0;i<nodes.length;i++){
if(nodes[i]["value"]==value){
node=nodes[i];
break;
}}
if(node){
Treeobj.tree("check",node.target);
}}
function removeSelect(){
var value=$(this).parent().attr("rel");
var nodes=Treeobj.tree("getChecked");
var node;
for(var i=0;i<nodes.length;i++){
if(nodes[i]["value"]==value){
node=nodes[i];
break;
}}
if(node){
Treeobj.tree("uncheck",node.target);
}
$(this).parent().remove();
}
this.getParent=function(value){
var root=Treeobj.tree("getRoot");
var rootNodeData=Treeobj.tree("getData",root.target);//
var checkParent=function(nodeData){
var nodeArr=nodeData["children"];
if(!nodeArr){
return null;
}
for(var i=0;i<nodeArr.length;i++){
if(nodeArr[i]["value"]==value){
return nodeData
break;
}else{
if(checkParent(nodeArr[i])){
return nodeArr[i];
}}}
return null;
}
var parentNode=checkParent(rootNodeData);
return parentNode?{"text":parentNode["text"],"value":parentNode["value"]}:null;
}
this.install();
}
(function($){
$.fn.uploadButton=function(){
$(this).each(function(){
$(this).creatUploadButton();
})
}
$.fn.creatUploadButton=function(){
var option=$(this).dataOptions();
var theInput=$(this).eq(0);
theInput.data("type","upload");
var W=theInput.width();
var containerBox=$('<div class="fileUpBox '+((theInput.data("enabledUpload")==false)?"disabled":"")+'"><dl><dt></dt></dl></div>');
theInput.attr("readonly","readonly").after(containerBox).addClass("fm_replacedInput").css({"float":"left"}).hide();
containerBox.append(theInput);
containerBox.css({"display":"inline_block","overflow":"hidden","height":"24px"});
var dd;
var dl=containerBox.find("dl");
dl.css({"padding":"0px","margin":"0px"});
var upbutli=containerBox.find("dt");;
if(option["mulit"]){
containerBox.css({"border":"none"})
if(browserIsIE8 || browserIsOpera){ //Opera--Ie8\u6743\u9650
dl.find("dt").css({"width":"72px","height":"24px","line-height":"24px"});
containerBox.css({"width":"72px","padding":"0px"});
}else{
containerBox.css({"width":(W-(containerBox.outerWidth(true)-containerBox.width()))+"px","padding":"0px"});
dl.find("dt").css({"width":"","height":"24px","line-height":"24px","border-radius":"3px"});
}
}else{
containerBox.css({"width":(W-(containerBox.outerWidth(true)-containerBox.width()))+"px","padding":"0px","border":"1px solid #CCCCCC"});
dl.css({"position":"relative","overflow":"hidden","height":"24px"});
dl.find("dt").css({"position":"absolute","width":"72px","left":"0px","top":"0px","height":"24px","line-height":"24px"});
var clearbut=$('<dt><i class="fa fa-remove"></i></dt>');
clearbut.css({"position":"absolute","width":"20px","height":"20px","line-height":"20px","top":"2px","right":"2px","overflow":"hidden","border-radius":" 3px","padding":"0px","margin":"0px"}).attr("title","\u6e05\u7a7a");
dl.append(clearbut);
dd=$("<dd></dd>");
dl.append(dd)
dd.css({"position":"absolute","width":(W-76-20)+"px","height":"20px","top":"2px","left":"74px","overflow":"hidden","border-radius":" 0px","padding":"0px","margin":"0px"});
clearbut.bind("click",function(){
if(theInput.data("enabledUpload")==false){
$.alert("\u7981\u6b62\u64cd\u4f5c");
return;
}
dd.text("");
theInput.val("").change();
});
}
var uploadID;
var uploadInput;
var creatInput=function(){
if(uploadInput){
uploadInput.remove();
uploadInput=null;
}
uploadID="uploadFileInput"+(new Date().getTime()+Math.floor(1000*Math.random())).toString();
uploadInput=$('<input type="file" name="temp_uploadinput" id="'+uploadID+'"/>');
if(browserIsIE8 || browserIsOpera){ //Opera--Ie8\u6743\u9650
dl.css({"position":"relative"});
containerBox.find("dl").prepend(uploadInput);
uploadInput.css({"position":"absolute","left":"2px","top":"2px","width":"70px","height":"20px","z-index":5,"opacity":0.01});
}else{
uploadInput.hide();
containerBox.append(uploadInput);
}}
var bindAction=function(type){
if(type){
creatInput();
if(browserIsIE8 || browserIsOpera){ //Opera--Ie8\u6743\u9650
uploadInput.show();
}else{
upbutli.unbind().bind("click",function(){
if(theInput.data("enabledUpload")==false){
return;
}
uploadInput.click();
})
}
upbutli.html('<i class="fa fa-arrow-circle-up"></i> \u4e0a\u4f20\u6587\u4ef6');
uploadInput.unbind().bind("change",startUpload);
}else{
if(uploadInput){
if(browserIsIE8 || browserIsOpera){
uploadInput.hide();
}else{
upbutli.unbind("click")
}
upbutli.html('<i class="fa fa-spinner"></i> \u4e0a\u4f20\u4e2d...');
uploadInput.unbind();
}}}
var uperror=function(msg){
$.message("\u4e0a\u4f20\u5931\u8d25"+(msg||""),2000);
bindAction(true);
}
var upok=function(jsonObj){
if(jsonObj["head"]["code"]==1){
if(option["mulit"]){
var oldval=theInput.val();
theInput.val((oldval?oldval+",":"")+jsonObj["value"]["filename"]);
}else{
theInput.val(jsonObj["value"]["filename"]);
if(dd){
var fname=jsonObj["value"]["filename"];
if(fname.indexOf("/")>0){
fname=fname.split("/");
fname=fname[fname.length-1];
}
dd.text(fname).attr("title",fname);
}}
theInput.change();
}else{
uperror(jsonObj["head"]["message"]);
}
bindAction(true);
}
var startUpload=function(){
if(theInput.data("enabledUpload")==false){
$.alert("\u7981\u6b62\u4e0a\u4f20");
return;
}
var oldname=uploadInput.val();
bindAction(false);
$.ajaxFileUpload ({
url:option["url"],
secureuri:false,
fileElementId:uploadID,
dataType:"json",
success:upok,
error:uperror
})
}
bindAction(true);
}
$.fn.disableUpload=function(){
$(this).data("enabledUpload",false);
$(this).parent().addClass("disabled");
}
$.fn.enableUpload=function(){
$(this).data("enabledUpload",false);
$(this).parent().removeClass("disabled");
}
})(jQuery);
(function($){
$.fn.showUploadPics=function(form){
form=form?form:$("body");
$(this).each(function(){
$(this).creatUploadPic(form);
})
}
$.fn.creatUploadPic=function(form){
var container=$('<ul></ul>');
$(this).empty().append(container).append($('<div class="cl"></div>'));
var option=$(this).dataOptions();
var theinput=form.find("[name="+option["rel"]+"],[id="+option["rel"]+"]").eq(0);
var delpic=function(){
if(theinput.data("enabledUpload")==false){
return;
}
var img=$(this).parent().data("url");
$(theinput).unbind("change",refreshShow);
var urls=theinput.val();
urls=urls.replace(","+img,"").replace(img+",","").replace(img,"").replace(/\,\,/g,"\,");
theinput.val(urls);
$(this).parent().remove();
refreshShow();
$(theinput).bind("change",refreshShow);
}
var refreshShow=function(){
var urls=($(theinput).is("input"))?theinput.val():theinput.text();
var pics=urls.split(",");
container.empty();
if(urls=="" || pics.length==0){
var li=$('<li class="blankUpload">\u672a\u4e0a\u4f20</li>')
container.append(li)	;
}else{
for(var i=0;i<pics.length;i++){
var li=$('<li><img src="'+pics[i]+'" />'+(option["editable"]?'<i class="fa fa-remove"></i>':'')+'</li>');
li.css({"position":"relative","overflow":"hidden"}).data("url",pics[i]);
container.append(li)	;
}
container.find("li").fitImg();
container.find("li>div").ZoomBigPic();
container.find("li i").one("click",delpic);
}}
refreshShow();
if($(theinput).is("input")){
$(theinput).bind("change",refreshShow);
}}
$.fn.uploadPicsDetail=function(form){
$(this).each(function(){
$(this).creatPicsDetail(form);
})
}
$.fn.creatPicsDetail=function(form){
var container=$('<ul></ul>');
$(this).empty().append(container).append($('<div class="cl"></div>'));
var option=$(this).dataOptions();
var theinput=form.find("[id="+option["rel"]+"]").eq(0);
theinput.hide();
var urls=theinput.text();
var pics=urls.split(",");
if(urls=="" || pics.length==0){
var li=$('<li class="blankUpload">\u65e0\u4e0a\u4f20</li>')
container.append(li)	;
}else{
for(var i=0;i<pics.length;i++){
if(pics[i]){
var li=$('<li><img src="'+pics[i]+'" />'+(option["editable"]?'<i class="fa fa-remove"></i>':'')+'</li>');
li.css({"position":"relative","overflow":"hidden"}).data("url",pics[i]);
container.append(li)	;
}}
container.find("li").fitImg();
container.find("li>div").ZoomBigPic();
}}
$.fn.showUploadFiles=function(form){
$(this).each(function(){
$(this).creatUploadFile(form);
})
}
$.fn.creatUploadFile=function(form){
var container=$('<ul></ul>');
$(this).empty().append(container).append($('<div class="cl"></div>'));
var option=$(this).dataOptions();
var theinput=form.find("[name="+option["rel"]+"],[id="+option["rel"]+"]").eq(0);
var delpic=function(){
if(theinput.data("enabledUpload")==false){
return;
}
var img=$(this).parent().data("url");
$(theinput).unbind("change",refreshShow);
var urls=theinput.val();
urls=urls.replace(","+img,"").replace(img+",","").replace(img,"").replace(/\,\,/g,"\,");
theinput.val(urls);
$(this).parent().remove();
refreshShow();
$(theinput).bind("change",refreshShow);
}
var getFileName=function(url){
url=url.split("\/");
url=url[url.length-1];
url=url.split("\?")[0];
url=url.split("\&")[0];
return url;
}
var refreshShow=function(){
var urls=($(theinput).is("input"))?theinput.val():theinput.text();
var pics=urls.split(",");
container.empty();
if(urls=="" || pics.length==0){
var li=$('<li class="blankUpload">\u672a\u4e0a\u4f20</li>')
container.append(li)	;
}else{
for(var i=0;i<pics.length;i++){
var li=$('<li>'+(option["editable"]?'<i class="fa fa-remove"></i> ':'')+'<a href="'+pics[i]+'" target="blank">'+(option["cuturl"]?getFileName(pics[i]):("\u6587\u4ef6\u4e0b\u8f7d"+(i+1)))+'</a></li>');
li.data("url",pics[i]);
container.append(li)	;
}
container.find("li i").one("click",delpic);
}}
refreshShow();
$(theinput).bind("change",refreshShow);
}
$.fn.uploadFilesDetail=function(container){
$(this).each(function(){
$(this).creatFilesDetail(container);
})
}
$.fn.creatFilesDetail=function(form){
var container=$('<ul></ul>');
$(this).empty().append(container).append($('<div class="cl"></div>'));
var option=$(this).dataOptions();
var theinput=form.find("[id="+option["rel"]+"]").eq(0);
theinput.hide();
var urls=($(theinput).is("input"))?theinput.val():theinput.text();
var pics=urls.split(",");
if(urls=="" || pics.length==0){
var li=$('<li class="blankUpload">\u65e0\u4e0a\u4f20</li>')
container.append(li)	;
}else{
var getFileName=function(url){
url=url.split("\/");
url=url[url.length-1];
url=url.split("\?")[0];
url=url.split("\&")[0];
return url;
}
for(var i=0;i<pics.length;i++){
if(pics[i]){
var li=$('<li><a href="'+pics[i]+'" target="blank">'+(option["cuturl"]?getFileName(pics[i]):("\u6587\u4ef6\u4e0b\u8f7d"+(i+1)))+'</a></li>');
li.css({"position":"relative","overflow":"hidden"}).data("url",pics[i]);
container.append(li)	;
}}}}
})(jQuery);
function formDeal(container){
var p=this;
this.parse=function(callback){
if(container.is("form")){  
$(container).bind("submit",function(){return false})	;
}
prepareForm(container);	
var scLoadOk=function(){
$(p).trigger("HTML_BEFORE_FORMAT",{"formobj":container});
formatForm(container);
container.css("visibility","inherit");
$(p).trigger("HTML_FORMATED");
if(typeof callback=="function"){ 
callback();
}}
loadSelectListData(container,scLoadOk);
}
this.bindData=function(formdata){
container.bindJsonData(formdata);
}
this.getData=function(){
var formdata=container.serializeJson();
for(var na in formdata){
if(formdata[na]=="loading..."){
formdata[na]="";
}}
return formdata;
}
this.check=function(addCheck){
return container.checkForm(addCheck);
}
this.clear=function(){
container.find("input,textarea").each(function(){
var obj=$(this);
if(obj.attr("type")=="radio" || obj.attr("type")=="checkbox"){
obj.get(0).checked=false;
obj.change();
}else if(obj.attr("type")!="file"){
obj.val("").change();
}
});
}
function loadSelectListData(formObj,callback){
var allneed=0;
var nowload=0;
var allChecked=false;
var checkloaded=function(){
nowload++;
if(allChecked && nowload>=allneed){
if(callback!=null){
callback();
}}}
formObj.find("select").each(function(){
if(!$(this).hasClass("fm_noAutoPost")){
if($(this).find("option").length<1){
allneed++;
$(this).empty().append("<option value=\"\">loading...</option>");
ajaxGetSelectOption($(this),"select",checkloaded);
}}
});
formObj.find("input[type=radio],input[type=checkbox]").each(function(){
if(!$(this).hasClass("fm_noAutoPost")){
var name=$(this).attr("name");
if(formObj.find("input[name="+name+"]").length==1){
allneed++;
ajaxGetSelectOption($(this),$(this).attr("type"),checkloaded);
}}
});
allChecked=true;
if(nowload>=allneed){
if(callback!=null){
callback();
}}}}
function detailDeal(container){
var p=this;
this.parse=function(callback){
container.find("select,input,textarea").each(function(){
var span=$("<span>"+$(this).val()+"</span>");
span.attr("class",$(this).attr("class"));
span.attr("id",$(this).attr("id"));
$(this).after(span).remove();
});
$(p).trigger("HTML_FORMATED");
if(typeof callback=="function"){ 
callback();
}}
this.bindData=function(formdata){
container.bindJsonData(formdata);
formatDetail(container);
}}
(function($){
$.fn.RightPopMenu=function(contentObj){
$(this).bind("contextmenu",function(e){
popOutRightMenu(e,contentObj);
})
}
$.fn.RightMenu=function(MenuArr,clickfun){
var contentObj=creatDefaultRightMenu(MenuArr,clickfun);
$(this).bind("contextmenu",function(e){
popOutRightMenu(e,contentObj);
})
}
$.extend({
hideRightMenu:function(){
$(".fm_RightMenuWraper:gt(0)").del();
$(".fm_RightMenuWraper").hide();
},
destroyRightMenu:function(){
var rightMenu=$(".fm_RightMenuWraper");
rightMenu.unbind().del();
rightMenu=null;
}
})
})(jQuery);
function popOutRightMenu(e,contentObj){
var isInputing=false;
var rightMenu=$('<div class="fm_RightMenuWraper"></div>');
$("body").prepend(rightMenu);
var X=e.pageX-2;
var Y=e.pageY-2;
var menuCont=typeof contentObj=="function"?contentObj():typeof contentObj=="string"?$(contentObj):contentObj;
rightMenu.append(contentObj).show();
$(".fm_RightMenuWraper:gt(0)").del();
rightMenu.css({"position":"absolute","top":Y+"px","left":X+"px"});
rightMenu.find("input,textarea,select").bind("focus",function(){
isInputing=true;
}).bind("blur",function(){
isInputing=false;
})
rightMenu.unbind().bind("mouseleave",function(){
if(isInputing){
return;
}
rightMenu.unbind().hide();
})
rightMenu.bind("mousewheel",function(e){
e.stopPropagation();
e.preventDefault();
return false;
})
e.stopPropagation();
e.preventDefault();
return false;
}
function creatDefaultRightMenu(MenuArr,clickfun){
var menu=$('<div class="fm_rightMenuContainer"></div>');
for(var i=0;i<MenuArr.length;i++){
var p=$('<p>'+MenuArr[i]+'</p>');
menu.append(p);
}
if(typeof clickfun=="function"){
menu.find(">p").bind("click",function(){
clickfun({"index":$(this).index(),"title":$(this).text(),"item":$(this)});
})
}
return menu;
}
function DeskMenu(container,zindex,option){
var p=this;
var menuBox;
var centerBlank=$('<div class="centerBlank"></div>');
var baseIndex=ZINDEX["menu"];//zindex?zindex:999;
var minOpenWidth=100;
this.option={"noCenterBlank":false,"iconAlign":"center","top":"","left":"0px","bottom":"6px","right":"0px","expdir":"bottom","width":48,"height":48}; //expdir--- top,bottom
this.install=function(){
container.css({"position":"fixed","overflow":"visible"});
$.extend(p.option,option);
}
this.show=function(){
menuBox.stop().animate({"bottom":"5px"},400);
}
this.hide=function(){
menuBox.stop().animate({"bottom":"-58px"},400);
}
this.loadMenu=function(url){
var Loader=new AJAXObj();
$(Loader).one("JSON_LOADED",function(e,backJson){
p.	creatMenu(backJson["value"]);
});
Loader.POSTDATA(url,{"event":"getMenu","content":{},"extend":{}});
}
this.creatMenu=function(menuJson){
if(!menuJson){return;}
container.empty();
menuBox=$('<div class="fm_DeskMenu"></div>');
menuBox.css({
"position": "fixed",
"text-align": p.option["iconAlign"]||"center",
"height": "auto",
"left": p.option["left"]||"",//"0px",
"bottom": p.option["bottom"]||"",//"6px",
"right": p.option["right"]||"",
"top": p.option["top"]||"",
"pointer-events": "none"
});
container.css("z-index",baseIndex);
container.append(menuBox);
var centerid=Math.floor(menuJson.length/2);
for(var i=0;i<menuJson.length;i++){
if(i==centerid && !p.option["noCenterBlank"]){
menuBox.append(centerBlank);
}
var amenu=$('<div class="fm_SubMenu"><p class="bigicon"><i  class="'+menuJson[i]["iconclass"]+'"></i></p></div>');
amenu.css({
"pointer-events": "auto",
"display":"inline-block",
"vertical-align":p.option["expdir"]
});
var a=$('<a>'+menuJson[i]["title"]+'</a>');
a.css("visibility","hidden");
var option=$.extend({},menuJson[i]);
delete option["menu"];
delete option["iconclass"];
amenu.find(">p").append(a);
amenu.css({"overflow":"hidden"});
var menuItem=creatMenuItem(menuJson[i]);
menuItem?amenu.append(menuItem):null;
menuItem?menuItem.css("visibility","hidden"):null;
menuBox.append(amenu);
var sizeobj={"openheight":amenu.height()+"px","closeheight":p.option["width"]+"px","openwidth":amenu.width()+"px","closewidth":p.option["height"]+"px","option":option};
sizeobj["openwidth"]=(minOpenWidth>amenu.width())?(minOpenWidth+"px"):sizeobj["openwidth"];
amenu.find(".bigicon").data(sizeobj);
amenu.css({"width":sizeobj["closewidth"],"height":sizeobj["closeheight"]});
}
menuBox.find("p.bigicon,li a").bind("click",menuClick).bind("contextmenu",MenuRightClick);
menuBox.find(".bigicon").bind("mouseenter",menuShow);
}
function menuShow(){
menuBox.find(".fm_SubMenu").css("z-index",0);
var tmout;
var sizeobj=$(this).data();
var menuitem=$(this).parent();
menuitem.css({"width":sizeobj["openwidth"],"height":sizeobj["openheight"],"z-index":baseIndex+2});
var submenu=menuitem.find(">ul");
var title=menuitem.find(".bigicon a");
menuitem.css({"overflow":"visible"});
if(browserIsIE6 || browserIsIE7 || browserIsIE8 || browserIsIE9){
(submenu.length>0)?submenu.css("visibility","visible"):null;
title.css("visibility","visible");
}else{
tmout=setTimeout(function(){
(submenu.length>0)?submenu.css("visibility","visible"):null;
title.css("visibility","visible");
},400)
}
menuitem.one("mouseleave",function(){
if(tmout){
clearTimeout(tmout);
tmout=null;
}
submenu.css("visibility","hidden");
title.css("visibility","hidden");
menuitem.css({"width":sizeobj["closewidth"],"height":sizeobj["closeheight"]});
menuitem.css({"overflow":"hidden"});
})
}
function menuClick(){
var option=$(this).data("option");
if(option && option["url"]){
$(p).trigger("MENU_CLICK",{"option":option,"but":$(this)});
}}
function MenuRightClick(e){
var option=$(this).data("option");
if(option && option["url"]){
$(p).trigger("MENU_RIGHT_CLICK",{"data":option,"but":$(this)});
}
stopPP(e);
e.preventDefault();
return false;
}
function creatMenuItem(menuData){
if(!menuData || !menuData["menu"] || menuData["menu"].length==0){
return null;
}
var submenu=$('<ul></ul>');
for(var i=0;i<menuData["menu"].length;i++){
var li=$('<li><p></p></li>');
var a=$('<a>'+menuData["menu"][i]["title"]+'</a>');
var option=$.extend({},menuData["menu"][i]);
delete option["menu"];
delete option["iconclass"];
a.data("option",option);
li.find(">p").append(a);
var subm=creatMenuItem(menuData["menu"][i]);
if(subm){
li.append(subm);
}
submenu.append(li);
}
submenu.find("ul").hide().css({"position":"absolute","top":"0px"});
submenu.find("li").css({"position":"relative"}).bind("mouseenter",showBranch).bind("mouseleave",hideBranch);
return submenu;
}
function showBranch(){
$(this).addClass("nowopen");
var ul=$(this).find(">ul");
ul.css({"left":ul.parent().outerWidth()+"px"});
ul.show();
}
function hideBranch(){
$(this).removeClass("nowopen");
var ul=$(this).find(">ul");
ul.hide();
}
this.destroy=function(){
}
this.install();
}
function ClumChocie(dataGrid,icon,e){
var clear=function(){
$(".clumselector").del();//.empty().remove();
}
if($(".clumselector").length>0){
clear();
if(e){
stopPP(e);
e.preventDefault();
}
return;
}
var clumoption=dataGrid.datagrid("options");
clumoption=clumoption.columns;
var popout=$('<div class="clumselector easyui_checklist"><ul class="easyui_panelbk"></ul><h4></h4></div>');
$("body").append(popout);
var len=clumoption[0].length;
for(var i=0;i<len;i++){
var li=$('<li>'+clumoption[0][i].title+'</li>');
popout.find("ul").append(li);
li.data("field",clumoption[0][i].field);
(dataGrid.datagrid("getColumnOption",clumoption[0][i].field)["hidden"])?li.addClass("onhideclum"):null;
}
var setPos=function(){
var pos=icon.offset();
popout.css({"position":"absolute","top":(pos.top-popout.outerHeight())+"px","left":(pos.left-1)+"px","z-index":990});
}
setPos();
popout.one("mouseleave",clear);
var showClum=function(){
var hide=$(this).hasClass("onhideclum");
if(!hide && popout.find("li.onhideclum").length>=(len-1)){
if(e){
stopPP(e);
e.preventDefault();
}
return;
}
var clum=$(this).data("field");
hide?$(this).removeClass("onhideclum"):$(this).addClass("onhideclum");
hide?dataGrid.datagrid("showColumn",clum):dataGrid.datagrid("hideColumn",clum);
}
popout.find("li").bind("click",showClum);
if(e){
stopPP(e);
e.preventDefault();
}}
function ChuJingAction(container){
var p=this;
var templete;
var zltemlete;
this.install=function(){
templete=container.find("#chujingdan_0").clone();
zltemlete=templete.find("#zhiling_0").clone();
templete.find(".blockPart").remove();
container.empty();
}
this.clear=function(){
container.empty();
}
this.addChuJingDan=function(cjddata,boxid){
var cjform=$(templete).clone();
container.append(cjform);
cjform.attr("id",boxid);
var detailCjd=new detailDeal(cjform);
$(detailCjd).one("HTML_FORMATED",function(){
detailCjd.bindData(cjddata);
});
detailCjd.parse();	
}
this.addZhiLingDan=function(cjdId,zlddata){
var zlform=$(zltemlete).clone();  
var cjform=container.find("#"+cjdId);
cjform.append(zlform);
var detailZld=new detailDeal(zlform);
detailZld.parse(function(){  
detailZld.bindData(zlddata);  
});	
return zlform;
}
this.install();
}
function SideMenu(container,option,hasHomeBut){
var p=this;
var iconBox;
var treeBox;
this.option={"top":0,"bottom":0,"left":0,"maxwidth":120,"showTitle":false,"width":106,"margin":3,"hasIcon":true,"singleLine":false};
this.isOpen=false;
this.menuData;
var hosturl;
var addpara={};
var baseIndex=ZINDEX["menu"];
this.install=function(){
$.extend(p.option,option||{});
iconBox=$('<div class="fm_sideMenuIconBox"></div>');
treeBox=$('<div class="fm_sideMenuTreeBox"></div>');
container.append(iconBox).append(treeBox);
iconBox.css({"position":"fixed","top":p.option["top"]+"px","bottom":p.option["bottom"]+"px","left":p.option["left"]+"px","overflow":"visible","z-index":baseIndex});
treeBox.css({"position":"fixed","top":p.option["top"]+"px","bottom":p.option["bottom"]+"px","left":p.option["left"]+"px","overflow":"visible","z-index":baseIndex,"max-width":p.option["maxwidth"]+"px"});
iconBox.css({"left":(-iconBox.outerWidth())+"px"});
if(hasHomeBut){
var homebut=$('<div class="fm_sideMenuHomebut  fm_deskBut" title="\u8fd4\u56de\u9996\u9875"><i class="fa fa-th-large"></i></div>');
homebut.css({"position":"fixed"});
container.append(homebut);
homebut.bind("click",function(){
$(document).trigger("SHOW_HOMEPAGE");
})
}}
this.Load=function(url,param){
hosturl=url;
$.extend(addpara,param||{});
this.Reload();
}
this.Reload=function(param){
$.extend(addpara,param||{});
var Loader=new AJAXObj();
$(Loader).one("JSON_LOADED",function(e,jsonObj){
p.creatMenu(jsonObj["value"]);
treeBox.css({"left":(p.option["left"]+iconBox.outerWidth())+"px"});
treeBox.hide();
iconBox.animate({"left":p.option["left"]+"px"},200);
});
var postData={
"event":"getMenu",
"extend":{},
"content":{"condition":addpara}
};
Loader.POSTDATA(hosturl,postData);
}
this.creatMenu=function(menuJson){
if(!menuJson){return;}
treeBox.empty();
iconBox.empty();
p.menuData=menuJson;
for(var i=0;i<menuJson.length;i++){
var bigico=$('<dd rel="subtree_'+i+'" '+(p.option["showTitle"]?'class="havetitle"':'')+' title="'+menuJson[i]["title"]+'" >'+
(p.option["hasIcon"]?('<i '+(menuJson[i]["iconclass"]?' class="'+menuJson[i]["iconclass"]+'"':'')+'></i>'):'')+
(p.option["showTitle"]?'<span>'+menuJson[i]["title"]+'</span>':'')+'</dd>');
iconBox.append(bigico);
!p.option["singleLine"]?bigico.addClass("textunder"):null;
bigico.css({"margin":p.option["margin"]+"px"});
if(p.option["showTitle"]){
bigico.width(p.option["width"]);
}
if(menuJson[i]["menu"] && menuJson[i]["menu"].length>0){
var menuBox=$('<div class="menupart" id="subtree_'+i+'"><h1>'+menuJson[i]["title"]+'</h1><div class="menuContainer"></div></div>');
treeBox.append(menuBox);
var menuTree=new AnyDropMenu(menuBox.find(".menuContainer"));
menuTree.installMenu(menuJson[i]["menu"]);
$(menuTree).bind("MENU_CLICK",subMenuClick).bind("MENU_RIGHT_CLICK",function(e,menuOption){
treeBox.hide();
$(p).trigger("MENU_RIGHT_CLICK",menuOption);
});
menuBox.hide();
}else{
bigico.addClass("singleBut");
}}
iconBox.find("dd").bind("mouseenter",showSubMenu).bind("click",menuClick).bind("contextmenu",MenuRightClick);
}
function MenuRightClick(e){
var index=$(this).index();
var menudata=p.menuData[index];
if(menudata["disabled"]){
stopPP(e);
e.preventDefault();
return false;
}
$(p).trigger("MENU_RIGHT_CLICK",{"data":menudata,"but":$(this)});
stopPP(e);
e.preventDefault();
return false;
}
function menuClick(){
var index=$(this).index();
var menudata=p.menuData[index];
if(menudata["disabled"]){
return;
}
iconBox.find(">dd.nowid").removeClass("nowid");
$(this).addClass("nowid");
Clicked(menudata,$(this));
}
function subMenuClick(e,Var){
var menudata=Var["data"];
if(menudata["disabled"]){
return;
}
iconBox.find(">dd.nowid").removeClass("nowid");
iconBox.find(">dd.open").addClass("nowid");
Clicked(Var["data"],Var["but"]);
}
function Clicked(option,but){
var option=$.extend({},option);
delete option["menu"];
$(p).trigger("MENU_CLICK",{"option":option,"but":but});
}
function showSubMenu(){
var index=$(this).index();
p.chgToMenu(index);
}
this.chgToMenu=function(index){
var icon=iconBox.find(">dd:eq("+index+")");
iconBox.find(">dd.open").removeClass("open").css({"margin-right":p.option["margin"]+"px"});
if(!icon.hasClass("singleBut")){
icon.addClass("open");
if(p.option["showTitle"]){
iconBox.find(">dd").css({"width":p.option["width"]+"px"});
icon.css({"width":(p.option["width"]+p.option["margin"])+"px"});
}
icon.css({"margin-right":"0px"});
}
var subID=icon.attr("rel");
var menu=treeBox.find(">div#"+subID);
if(menu.length>0){
treeBox.find(">div.open").removeClass("open").hide();
menu.addClass("open").show();
var closePop=function(){
treeBox.hide().unbind();
iconBox.find(">dd.open").removeClass("open").css({"margin-right":p.option["margin"]+"px"});
if(p.option["showTitle"]){
iconBox.find(">dd").css({"width":p.option["width"]+"px"});
}}
treeBox.show();
treeBox.unbind().one("mouseleave",closePop);
}else{
treeBox.hide();
}}
this.hide=function(){
if(!p.isOpen){
return;
}
iconBox.css({"left":(-iconBox.outerWidth(true))+"px"});
p.isOpen=false;
}
this.show=function(){
if(p.isOpen){
return;
}
iconBox.css({"left":p.option["left"]+"px"});
p.isOpen=true;
}
this.resize=function(){
}
this.install();
}
function IframeObj(container,url,id){
var p=this;
var Iframe;
this.install=function(){
Iframe=$('<iframe frameborder="0" width="100%" '+(id?'id="'+id+'"':'')+'></iframe>');
container.empty().append(Iframe);
Iframe.get(0).src=url;
}
this.destroy=function(){
if(Iframe){
Iframe.get(0).src="";
Iframe.remove();
Iframe=null;
}}
this.resize=function(w,h){
w=w?w:Iframe.parent().width();
h=h?h:Iframe.parent().height();
Iframe.width(w).height(h);
}
this.reload=function(){
if(Iframe){
var FrameWindow=Iframe.contentWindow;
FrameWindow.location.reload();
}}
p.install();
}
function UIStyleConfig(configCss){
var p=this;
var BackG;
this.install=function(){
BackG=new BackGround();
BackG.install(configCss["background"]);
}
this.chgBg=function(imgurl){
BackG.BackgroundImage(imgurl);
}
this.install();
}
function BackGround(){
var p=	this;
var mark=".fm_mainBackground";
var cookieName="mainbackgroundCookie"+projectName||"";
this.install=function(defaultImg){
var imgurl=readFromLocal(cookieName);
if(imgurl && typeof imgurl=="object"){
p.BackgroundImage(imgurl["url"]);
}else if(defaultImg){
p.BackgroundImage(defaultImg);
}}
this.BackgroundImage=function(imgurl){
var bkimg;
if(imgurl){
bkimg="url("+imgurl+")";
}else{
bkimg="none";
}
$("body").find("#addStyleBox_background").remove();
var style=$('<div id="addStyleBox_background" style="display:none"><style type="text/css">'+mark+',body{background-image: '+bkimg+';}</style>');
$("body").append(style);
saveToLocal(cookieName,{"url":imgurl});
}
}
function MulitPicShow(pics,option){
var p=this;
this.option={"width":0.8,"height":0.8,"zindex":999,"imgSpace":6};
$.extend(p.option,option||{});
var realW;
var realH;
var picArray;
var picsContainer;
var picBox;
var W;
var H;
var mask;
var closebut;
var baseindex=(typeof ZINDEX=="object")?ZINDEX["picgroup"]||p.option["zindex"]:p.option["zindex"];
this.install=function(){
if(!pics){
return;
}
picArray=(typeof pics=="string")?pics.split(","):pics;
for(var i=picArray.length-1;i>=0;i--){
if(!picArray[i]){
picArray.splice(i,1);
}}
if(picArray.length<1){
return;
}
if(picArray.length==1){
new showPopBigPic(picArray[0]);
return;
}
mask=new popMask(baseindex);
closebut=$('<div class="closePicBut"></div>');
mask.mask.bind("click",p.destroy).append(closebut);
picsContainer=$('<div></div>');
picsContainer.css({"z-index":baseindex+1,"position":"fixed"});
$("body").append(picsContainer);
p.resize();
creatPicShow();
$(window).bind("resize",p.resize);
}
this.destroy=function(){
$(window).unbind("resize",p.resize);
if(mask){
mask.destroy();
mask=null;
}
if(picsContainer){
picsContainer.find(">.fm_piccut").unbind();
picsContainer.del();//.empty().remove();
picsContainer=null;
}}
function creatPicShow(){
for(var i=picArray.length-1;i>=0;i--){
var img=$('<div class="fm_piccut"><img src="'+picArray[i]+'" /></div>');
picsContainer.append(img);
img.css({"float":"left","margin":p.option["imgSpace"]+"px","overflow":"hidden","opacity":0.75,"transition":"opacity 0.5s","box-shadow":"0px 0px 8px #999","background-color":"#fff"}).ZoomBigPic();
}
picsContainer.find(">.fm_piccut").bind("mouseenter",function(){
$(this).css({"opacity":1});
}).bind("mouseleave",function(){
$(this).css({"opacity":0.75});
})
resetSize();
}
function resetSize(){
picsContainer.find(">.fm_piccut").each(function(id){
$(this).css({"width":W-2*p.option["imgSpace"],"height":H-2*p.option["imgSpace"]}).fitImg();
})
}
this.resize=function(){
if(!picsContainer){
p.destroy();
return;
}
realW=	p.option["width"]>1?p.option["width"]:Math.floor(p.option["width"]*$(window).width());
realH =	p.option["height"]>1?p.option["height"]:Math.floor(p.option["height"]*$(window).height());
var rn=Math.sqrt(picArray.length);
var row=Math.floor(rn);
var col=Math.ceil(picArray.length/row);
W=realW/col;
H=realH/row;
var maxPer=1.2;
H=H/W>maxPer?W*maxPer:H;
W=W/H>maxPer?H*maxPer:W;
W=Math.floor(W);
H=Math.floor(H);
realW=W*col;
realH=H*row;
picsContainer.width(realW).height(realH);
picsContainer.centerInWindow();
resetSize();
}
this.install();
}
function ListView(container,pagercontainer,option){ 
var p=this;
var templete;
var dataListData=[];
this.disabled=false;
this.option={
"classStyle":{"checked":"checked","active":"nowid","disabled":"disabled"},
"enableCheck":false,
"mulitCheck":false, 
"pageconfig":{
prev_show_always:true,
next_show_always:true,
items_per_page:15, 
prev_text:"\u4e0a\u4e00\u9875"	,
countText:true,
num_display_entries:5, 
ellipse_text:"...", 
num_edge_entries :2, 
next_text:"\u4e0b\u4e00\u9875"
},
"htmlFormatFun":null,
"actionFormatFun":null
};
var host;
var postData;
this.Pager=pagercontainer;
this.page=1;
var ippage=10;
var Loader;
this.install=function(){
$.extend(p.option,option||{});
templete=templete?(typeof templete=="object")?templete:$(templete):container.find(">*").eq(0).clone();
container.empty();
if(pagercontainer){
pagercontainer.empty();
}}
this.destroy=function(){
if(Loader){
Loader.destroy();
loader=null;
}
if(container){
container.clear();
}}
this.load=function(hosturl,postdata,formatFun,actionFun){
ippage=p.option["pageconfig"]["items_per_page"]||10;
formatFun?p.option["htmlFormatFun"]=formatFun:null;
actionFun?p.option["actionFormatFun"]=actionFun:null;
host=hosturl;
postData=postdata?postdata:{};
p.reload(postdata);
}
function changePage(){
loadDo(null,true);
}
this.reload=function(postdata){
p.page=1;
loadDo(postdata,false);
}
this.refresh=function(){
loadDo(postData,false);
}
function loadDo(postdata,pagechg){
postData=postdata?postdata:postData; //
postData["extend"]=postData["extend"]?postData["extend"]:{};
postData["extend"]["page"]=p.page;
postData["extend"]["rows"]=ippage;
if(Loader){
Loader.destroy();
Loader=null;
}
Loader=new AJAXObj();
$(Loader).bind("JSON_LOADED",function(e,backJson){
var rows=backJson["value"]["rows"];
p.bindData(rows);
if(!pagechg){	
p.creatPager(backJson["value"]["total"]);
}
$(p).trigger("LOADED");
})
Loader.POSTDATA(host,$.extend({},postData));
}
this.creatPager=function(count){
if(!p.Pager){
return;
}
if(!count){
p.Pager.empty();
return;
}
var tpage=Math.ceil(count/ippage);
var poption=$.extend({
selelct_callback: pageselectCallback,
items_total_show:"\u5171"+count+"\u6761\u8bb0\u5f55 / "+tpage+"\u9875 "+ippage+"\u6761/\u9875",
current_page:p.page
},p.option["pageconfig"]);
p.Pager.fm_pager(count,poption);
}
function pageselectCallback(topage){
p.page=topage;
if(host){
changePage();
}
$(p).trigger("LISTVIEW_PAGE",{"page":p.page,"rows":ippage});
}
function formatData(row){
var formated=$.extend(true,{},row);
if(typeof p.option["htmlFormatFun"]=="function"){
return p.option["htmlFormatFun"](formated);
}
return formated;
}
this.bindData=function(listdata){   //alert(container.length)
container.clear();//.empty();
listdata=(listdata&&listdata.length>0)?listdata:[];
dataListData=listdata;
for(var i=0;i<listdata.length;i++){
var li=creatLi(listdata[i]);
container.append(li);
}}
this.enableCheck=function(status){
p.option["enableCheck"]=(status==false?false:true);
}
this.findRowData=function(field,value){
for(var i=0;i<dataListData.length;i++){
if(dataListData[i][field]==value){
return dataListData[i];
break;
}}
return null;
}
this.find=function(field,value){
for(var i=0;i<dataListData.length;i++){
if(dataListData[i][field]==value){
return dataListData[i]["liObject"];
break;
}}
return null;
}
this.update=function(field,value,newRowData,keepOld){
for(var i=dataListData.length-1;i>=0;i--){
if(dataListData[i][field]==value){
var newRow;
if(keepOld){
newRow=$.extend({},dataListData[i],newRowData);
}else{
newRow=newRowData;
}
var li=creatLi(newRow);
var oldClass=dataListData[i]["liObject"].attr("class");
li.attr("class",oldClass)
dataListData[i]["liObject"].after(li);
dataListData[i]["liObject"].unbind().remove();
dataListData.splice(i,1,newRow);
}}}
this.findRow=function(index){
if(dataListData[index]){
return dataListData[index]["liObject"];
}
return null;
}
this.removeOneRow=function(index){
if(dataListData[index]){
dataListData[index]["liObject"].unbind().remove();
dataListData.splice(index,1);
}}
this.removeRowsFrom=function(index){
if(dataListData.length-1<index){
return;
}
for(var i=dataListData.length-1;i>=index;i--){
p.removeOneRow(i);
}}
this.removeRowsBefore=function(index){
var count=0;
while(count<index && dataListData.length>0){
p.removeOneRow(0);
count++
}}
this.removeRowsLast=function(index){
var count=0;
while(count<index && dataListData.length>0){
p.removeOneRow(dataListData.length-1);
count++
}}
this.findAndRemove=function(field,value){
for(var i=dataListData.length-1;i>=0;i--){
if(dataListData[i][field]==value){
dataListData[i]["liObject"].unbind().remove();
dataListData[i]["liObject"]=null;
dataListData.splice(i,1);
}}}
this.findAndCheck=function(field,value,single){
if(single || !p.option["mulitCheck"]){
container.find(">."+p.option["classStyle"]["checked"]).removeClass(p.option["classStyle"]["checked"]);
}
for(var i=dataListData.length-1;i>=0;i--){
if(dataListData[i][field]==value){
dataListData[i]["liObject"].addClass(p.option["classStyle"]["checked"]);
if(single || !p.option["mulitCheck"]){
return;
break;
}}}}
this.findAndUncheck=function(field,value){
for(var i=dataListData.length-1;i>=0;i--){
if(dataListData[i][field]==value){
dataListData[i]["liObject"].removeClass(p.option["classStyle"]["checked"]);
}}}
this.findAndDisabled=function(field,value){
for(var i=dataListData.length-1;i>=0;i--){
if(dataListData[i][field]==value){
dataListData[i]["liObject"].addClass(p.option["classStyle"]["disabled"]);
}}}
this.findAndUnDisabled=function(field,value){
for(var i=dataListData.length-1;i>=0;i--){
if(dataListData[i][field]==value){
dataListData[i]["liObject"].removeClass(p.option["classStyle"]["disabled"]);
}}}
this.uncheckAll=function(){
for(var i=dataListData.length-1;i>=0;i--){
dataListData[i]["liObject"].removeClass(p.option["classStyle"]["checked"]);
}}
this.CheckAll=function(){
for(var i=dataListData.length-1;i>=0;i--){
dataListData[i]["liObject"].addClass(p.option["classStyle"]["checked"]);
}}
this.getChecked=function(){
var checked=[];
for(var i=0;i<dataListData.length;i++){
if(dataListData[i]["liObject"].hasClass(p.option["classStyle"]["checked"])){
var row=$.extend(true,{},dataListData[i]);
delete row["liObject"];
checked.push(row);
}}
return checked;
}
this.getCheckedRows=function(){
return container.find(p.option["classStyle"]["checked"]);
}
this.insert=function(lidata,index){ //
var li=creatLi(lidata);
if(index==null || index>=container.find(">*").length){
container.append(li);
dataListData.push(lidata);
}else{
container.find(">*:eq("+index+")").before(li);
dataListData.splice(index,0,lidata);
}
return li;
}
this.ScrollTo=function(scrollContainer,index){
var li=container.find(">*").eq(index);
scrollContainer.scrollTo(li,300);
}
this.ScrollToLi=function(scrollContainer,li){
scrollContainer.scrollTo(li,300);
}
function creatLi(lidata){
var row=formatData(lidata);
var li=templete.clone();
li.bindJsonData(row,true);
li.data("data",lidata).attr("dir","ltr");
if(typeof p.option["actionFormatFun"]=="function"){
p.option["actionFormatFun"](li);
}
lidata["liObject"]=li;
li.bind("click",function(e){
if(p.disabled || li.hasClass(p.option["classStyle"]["disabled"])){
return;
}
container.find(">."+p.option["classStyle"]["active"]).removeClass(p.option["classStyle"]["active"]);
li.addClass(p.option["classStyle"]["active"]);
if(p.option["enableCheck"]){
if(li.hasClass(p.option["classStyle"]["checked"])){
li.removeClass(p.option["classStyle"]["checked"]);
}else{
if(!p.option["mulitCheck"]){
container.find(">."+p.option["classStyle"]["checked"]).removeClass(p.option["classStyle"]["checked"]);
}
li.addClass(p.option["classStyle"]["checked"]);
}}
$(p).trigger("LI_CLICKED",{"data":lidata,"item":li,"event":e});
});
return li;
}
this.getData=function(){
var data=[];
for(var i=0;i<dataListData.length;i++){
var row=$.extend(true,{},dataListData[i]);
delete row["liObject"];
data.push(row);
}
return data;
}
this.getRowsCount=function(){
return dataListData.length;
}
this.install();
}function AnyDropMenu(container){
var p=this;
this.container;
var menubox=container;
this.menuData=null;
this.outbut;
var closeTimeout;
var isMini=false;
this.option;
var hosturl;
var addpara={};
this.Load=function(url,param){
hosturl=url;
$.extend(addpara,param);
this.Reload();
}
this.Reload=function(param){
var Loader=new AJAXObj();
$(Loader).one("JSON_LOADED",function(e,jsonObj){
var menudata=jsonObj["value"];
p.installMenu(menudata);
});
var postData={
"event":"getMenu",
"extend":{},
"content":{"condition":addpara}
};
Loader.POSTDATA(hosturl,postData);
}
this.installMenu=function(menuData){
p.menuData=menuData;
menubox.empty();
p.container=$('<div class="relpos" id="fm_dropmenu"></div>');
menubox.append(p.container);
var menuobj=creatMenupart(p.menuData);//$(menustr);
p.container.empty().append(menuobj);
p.container.find("ul").hide();
p.container.find("li p").bind("click",MenuClick).bind("mouseenter",openMenu).bind("contextmenu",MenuRightClick);
p.container.find("li.closepart").unbind().bind("click",p.minirizeMenuTree);
p.container.find(">ul").show().width(p.container.find(">ul").width());
$(p).trigger("MENU_INSTALLED");
p.container.bind("mouseenter",openMenutree);
if(p.outbut){
p.outbut.bind("click",p.hideShowMenu);
}}
function openMenutree(){
if(closeTimeout){
clearTimeout(closeTimeout);
closeTimeout=null;
}
p.container.find("li").show();
p.container.find("ul.ulclose li").hide();
p.container.bind("mouseleave",closeMenutree);
isMini=false;
}
function closeMenutree(){
if(p.container.find("li.nowid").length<1){return}
if(closeTimeout){
clearTimeout(closeTimeout);
closeTimeout=null;
}
closeTimeout=setTimeout(p.minirizeMenuTree,2000);
}
this.minirizeMenuTree=function(){
if(closeTimeout){
clearTimeout(closeTimeout);
closeTimeout=null;
}
if(p.container.find("li.nowid").length<1){return}
p.container.find("li>ul").each(function(){
$(this).height("auto");
if($(this).find(">li.nowid").length>0){
$(this).width($(this).width());
}else if($(this).hasClass("ulclose")){
$(this).width(26);
}else{
$(this).width("auto");
}
});
p.container.find("li").hide();
p.container.find(">ul >li").show();
p.container.find("ul.ulclose li").hide();
p.container.unbind("mouseleave",closeMenutree);
isMini=true;
}
this.chgMenuTo=function(pid){
var findparent=function(li){
var liparent=li.parent().parent();
if(liparent.length>0 && liparent.attr("id") && liparent.attr("id")==p.container.attr("id")){
if(isMini){
p.container.find("ul li").show();
p.minirizeMenuTree();
}
return;
}else{
liparent.show().addClass("nowid").find(">ul").show();
findparent(liparent);
}
};
var pp=p.container.find("p#"+pid);
if(pp.length>0){
p.container.find("ul li>ul").hide();
p.container.find("li.nowid").removeClass("nowid");
var li=pp.parent();
li.addClass("nowid");
findparent(li);
}
p.container.find("li").each(function(){
var theUL=$(this).find(">ul");
theUL.width("auto").css({"left":$(this).width()+"px"});//;
theUL.width($(this).find(">ul").width())
})
}
function MenuClick(){
var title=$(this).text();
var menudata=$(this).data("data");
if(menudata["disabled"]){ 
return;
}
var id=$(this).attr("id");
p.chgMenuTo(id);
$(p).trigger("MENU_CLICK",{"data":menudata,"but":$(this)});
}
function MenuRightClick(e){
var menudata=$(this).data("data");
if(menudata["disabled"]){ 
stopPP(e);
e.preventDefault();
return false;
}
$(p).trigger("MENU_RIGHT_CLICK",{"data":menudata,"but":$(this)});
stopPP(e);
e.preventDefault();
return false;
}
var htm;
function hideMenuPart(){
$(this).unbind("mouseleave").find("ul").stop().hide();
}
function openMenu(){
var theUL=$(this).parent().find(">ul");
theUL.addClass("nohide");
var paretUL=$(this).parent().parent();
paretUL.find("ul:not(.nohide)").hide();
theUL.removeClass("nohide");
theUL.width("auto").css({"left":$(this).parent().width()+"px"}).removeClass("ulclose").find("li").show();
theUL.width($(this).parent().find(">ul").width())
$(this).parent().unbind("mouseleave").bind("mouseleave",hideMenuPart);
theUL.slideDown("fast");
}
this.hideShowMenu=function(){
if($(this).hasClass("close")){
p.container.find(">ul").slideDown("normal");
$(this).removeClass("close");
}else{
p.container.find(">ul").slideUp("fast");
$(this).addClass("close");
}}
this.hidemenu=function(){
if(p.outbut){
p.outbut.addClass("close");
}}
function creatMenupart(menupart,box,id){
if(!menupart || menupart.length<1){return "";}
box=box?box:$('<ul></ul>');
id=id?id:"m";
for(var i=0;i<menupart.length;i++){
id=id+'_'+i;
var li=$('<li></li>');
var pp=$('<p id="limenu_'+id+'">'+menupart[i]["title"]+'</p>');
pp.data("data",menupart[i]);
li.append(pp);
box.append(li);
var childbox=$('<ul></ul>');
li.append(childbox);
creatMenupart(menupart[i]["menu"],childbox,id);
}
return box;
}
this.resize=function(){
}
this.destroy=function(){
}
}
function frameLayout(container,condition){
var p=this;
this.option={"layoutType":""};
var LAYOUT;
var PANNAL={};
this.install=function(){
var option=container.dataOptions()||{};
$.extend(p.option,option);
LAYOUT=new flexLayout(container);
container.find(">div >*").each(function(index){
var pannal=$(this);
var winName="Layout_"+(new Date()).getTime()+"_"+Math.floor(Math.random()*10000);
var id=pannal.attr("id");
id=id?id:winName;
pannal.attr("id",id);
var divoption=pannal.dataOptions();
var isframe=!(divoption["url"]==null || divoption["url"]=="");
PANNAL[id]={"winName":winName,"isframe":isframe,"pannal":pannal};
pannal.data({"layout_winName":winName,"layout_isframe":isframe});
if(isframe && divoption["url"]){
var winoption={};
winoption["url"]=divoption["url"];
winoption["container"]=pannal;
winoption["target"]="still";
PAGER.OPEN(winName,winoption,condition);
var frameWin=WINDOW.getWindowById(winName);
frameWin["LAYOUT"]={
"run":p.run,
"reload":p.reload
};
pannal.attr({"data-widget":"is","data-widgetName":winName});
}
});
}
this.show=function(id,type){
LAYOUT.show(id,type);
}
this.getPannalById=function(id){
return PANNAL[id]?PANNAL[id]["pannal"]:null;
}
this.reload=function(id){
if(PANNAL[id] && PANNAL[id]["isframe"]){
var winId=PANNAL[id]["winName"];
WINDOW.reload(winId);
}}
this.destroy=function(){
for(var id in PANNAL){
if(PANNAL[id] && PANNAL[id]["isframe"]){
WINDOW.close(PANNAL[id]["winName"]);
}
delete PANNAL[id];
}
LAYOUT?LAYOUT.destroy():null;
LAYOUT=null;
}
this.run=function(id,funName,Vars){
if(PANNAL[id] && PANNAL[id]["isframe"]){
var winID=PANNAL[id]["winName"];
WINDOW.run(winID,funName,Vars);
}}
this.resize=function(){
if(!LAYOUT){
p.destroy();
return;
}
LAYOUT.resize();
for(var id in PANNAL){
if(PANNAL[id]){
if(PANNAL[id]["isframe"]){
WINDOW.resize(PANNAL[id]["winName"]); 
}else{
$(PANNAL[id]["pannal"]).trigger("RESIZE"); 
}}}
$(p).trigger("LAYOUT_RESIZE");
}
this.install();
}
function flexLayout(container){
var p=this;
var positionDiv;
var blocks={};
this.option={};
this.install=function(){
var loption=container.dataOptions();
$.extend(p.option,loption);
if(!p.option["frameSet"]){
return;
}
p.option["flexdir"]=p.option["flexdir"]?p.option["flexdir"]:"x";
container.find(">*").wrapAll('<div class="layout_Wraper"></div>');
positionDiv=container.find(">.layout_Wraper");
positionDiv.css({"position":"relative","overflow":"hidden"});
positionDiv.fillParent();
resetBlocksConfig();
placeBlocks();
}
this.show=function(pannalid,type){
var blockObj=findPannal(pannalid);
if(!blockObj){
return;
}
var pannal=blockObj["block"];
var blocktype=blockObj["blocktype"];
var onshow=pannal.hasClass("open");
if(type==onshow){ 
return;
}
switch(blocktype){
case "pannal":
var rsize=0;
var pos=blockObj["position"];
if(!type){
var  bsize;
switch(pos){
case "left":
case "right":
bsize=positionDiv.width();
break;
case "top":
case "bottom":
bsize=positionDiv.height();
break;
}
rsize=-Math.ceil(getRealSize(blockObj["size"],bsize));
}
type?pannal.css({"visibility":"inherit"}):null;
type?pannal.addClass("open"):pannal.removeClass("open");
var endfun=function(){
!type?pannal.css({"visibility":"hidden"}):null;
$(p).trigger((type?"BLOCK_SHOW":"BLOCK_HIDE"),{"block":blockObj["block"],"blocktype":blockObj["blocktype"]});
}
pannal.css({"transition":blockObj["position"]+" 0.3s"});
pannal.css(blockObj["position"],rsize+"px");
setTimeout(endfun,250);
break;
case "flex":
case "fixed":
if(!type || p.option["frameSet"]!=="layoutSlide"){
return;
}
if(!p.option["slidedir"] || p.option["slidedir"]=="none"){
for(var i=0;i<blocks["fitw"].length;i++){
var block=blocks["fitw"][i]["block"];
block.removeClass("open").css({"z-index":-1,"visibility":"hidden"});
}
pannal.css({"z-index":(type?3:-1),"visibility":(type?"visible":"hidden")});
type?pannal.addClass("open"):pannal.removeClass("open");
$(p).trigger((type?"BLOCK_SHOW":"BLOCK_HIDE"),{"block":pannal});
}else{
var nowPannal=null;
for(var i=0;i<blocks["fitw"].length;i++){
var block=blocks["fitw"][i]["block"];
if(block.hasClass("open")){
nowPannal=block;
nowPannal.css({"z-index":2,"visibility":"inherit"});
}else{
block.css({"z-index":-1,"visibility":"hidden"});
}}
var nowindex=nowPannal?nowPannal.index():0;
var toindex=pannal.index();
if(nowindex==toindex){return} 
var hidePos=(p.option["slidedir"]=="v")?positionDiv.outerHeight():positionDiv.outerWidth();
var showPos=(p.option["slidedir"]=="v")?p.option["start"]["y"]:p.option["start"]["x"];
if(nowPannal){
if(p.option["slidedir"]=="v"){
nowPannal.removeClass("open").stop().animate({"top":(nowindex<toindex?-hidePos:hidePos)+"px"},1200);
}else{
nowPannal.removeClass("open").stop().animate({"left":(nowindex<toindex?-hidePos:hidePos)+"px"},1200)	;
}}
pannal.addClass("open");
var slideEnd=function(){
if(nowPannal){
nowPannal.removeClass("open").stop(true,true);
nowPannal.css({"z-index":-1,"visibility":"hidden"});
$(p).trigger("BLOCK_HIDE",{"block":nowPannal});
}
$(p).trigger("BLOCK_SHOW",{"block":pannal});
}
if(p.option["slidedir"]=="v"){
pannal.css({"top":(nowindex>toindex?-hidePos:hidePos)+"px","z-index":3,"visibility":"inherit"});
pannal.stop().animate({"top":showPos+"px"},600,slideEnd);
}else{
pannal.css({"left":(nowindex>toindex?-hidePos:hidePos)+"px","z-index":3,"visibility":"inherit"});
pannal.stop().animate({"left":showPos+"px"},600,slideEnd);
}}
break;
}}
function findPannal(pid){
var blockObj;
for(var na in blocks){
for(var i=0;i<blocks[na].length;i++){
if(blocks[na][i]["id"]==pid){
blockObj=blocks[na][i];
break;
}}}
return blockObj;
}
function resetBlocksConfig(){
blocks["fitw"]=[]; 
blocks["fixed"]=[]; 
blocks["flex"]=[];  
blocks["pannal"]=[]; 
blocks["slide"]=[];   
blocks["side"]=[];		
positionDiv.find(">*").each(function(index){
var blockObj=formatBlock($(this));
blocks[blockObj["blocktype"]].push(blockObj);
if(blockObj["blocktype"]=="flex" || blockObj["blocktype"]=="fixed"){
blocks["fitw"].push(blockObj);
}
})
resetFlex();
}
function resetFlex(){
var flexW=0;
for(var i=0;i<blocks["flex"].length;i++){
flexW+=Number(blocks["flex"][i]["flex"]);
}
for(var i=0;i<blocks["flex"].length;i++){
blocks["flex"][i]["weight"]=blocks["flex"][i]["flex"]/flexW;
}}
function formatBlock(block){
var boption=block.dataOptions();
var blockObj;
block.css({"position":"absolute","overflow":"hidden"});
(p.option["frameSet"]=="layoutSlide")?block.removeClass("open"):block.addClass("open");
switch(boption["layoutType"]){
case "fixed":
boption["size"]=boption["size"]||((p.option["flexdir"]=="x")?block.outerWidth(true):block.outerHeight(true));
blockObj={"size":boption["size"],"block":block,"zindex":1};
switch(p.option["flexdir"]){
case "x":
block.css({"top":"0px","bottom":"0px"})
break;
case "y":
block.css({"left":"0px","right":"0px"})
break;
}
break;
case "flex":
blockObj={"minsize":boption["minsize"]||15,"weight":1,"flex":boption["flex"]||1,"block":block,"zindex":1};
switch(p.option["flexdir"]){
case "x":
block.css({"top":"0px","bottom":"0px"})
break;
case "y":
block.css({"left":"0px","right":"0px"})
break;
}
break;
case "pannal":
boption["position"]=boption["position"]||"left";
boption["size"]=boption["size"]||((boption["position"]=="left" || boption["position"]=="right")?block.outerWidth(true):block.outerHeight(true));
blockObj={"position":boption["position"],"open":boption["open"],"size":boption["size"],"ctrlBar":boption["ctrlBar"],"disableOther":boption["disableOther"]||false,"block":block,"zindex":(boption["zindex"]||0)+99};
block.addClass("side_"+boption["position"]);
boption["open"]?block.addClass("open"):block.removeClass("open");
switch(boption["position"]){
case "top":
case "bottom":
block.css({"left":"0px","right":"0px"});
break;
case "left":
case "right":
block.css({"top":"0px","bottom":"0px"});
break;
}
break;
case "slide":
blockObj={"block":block,"zindex":1};
block.css("visibility","hidden").removeClass("open");
block.removeClass("open");
break;
case "side":
boption["position"]=boption["position"]||"left";
boption["size"]=boption["size"]||((boption["position"]=="left" || boption["position"]=="right")?block.outerWidth(true):block.outerHeight(true));
block.addClass("side_"+boption["position"]);
switch(boption["position"]){
case "top":
case "bottom":
block.css({"left":"0px","right":"0px"});
break;
case "left":
case "right":
block.css({"top":"0px","bottom":"0px"});
break;
}
blockObj={"position":boption["position"],"size":boption["size"],"block":block,"zindex":9+(boption["zindex"]||0)};
break;
default:
boption["layoutType"]="slide";
blockObj={"block":block,"zindex":1};
break;
}
blockObj["blocktype"]=boption["layoutType"];
blockObj["id"]=block.attr("id")||"none";
block.css({"z-index":blockObj["zindex"]});
return blockObj;
}
function getRealSize(sizeval,Csize){
sizeval=Math.abs(sizeval);
var Rsize=0
if(sizeval>1){
Rsize=sizeval;
}else{
Rsize=sizeval*Csize;
}
return Rsize;
}
function placeBlocks(){
var W=positionDiv.width();
var H=positionDiv.height();
var CW=W;
var CH=H;
var startX=0;
var startY=0;
for(var i=0;i<blocks["side"].length;i++){
var pos=blocks["side"][i]["position"];
var side=blocks["side"][i]["block"];
var pW=null;
var pH=null;
switch(pos){
case "left":
pW=getRealSize(blocks["side"][i]["size"],CW);
startX+=pW;
W-=pW;
side.css({"left":"0px"});
break;
case "right":
pW=getRealSize(blocks["side"][i]["size"],CW);
side.css({"right":"0px"});
W-=pW;
break;
case "top":
pH=getRealSize(blocks["side"][i]["size"],CH);
startY+=pH;
H-=pH;
side.css({"top":"0px"});
break;
case "bottom":
pH=getRealSize(blocks["side"][i]["size"],CH);
H-=pH;
side.css({"bottom":"0px"});
break;
}
side.setRealSize(pW,pH);
p.option["start"]={"x":startX,"y":startY};
}
for(var i=0;i<blocks["pannal"].length;i++){
var pos=blocks["pannal"][i]["position"];
var pannal=blocks["pannal"][i]["block"];
var pW=null;
var pH=null;
var onshow=pannal.hasClass("open");
var visible=onshow?"inherit":"hidden";
switch(pos){
case "left":
pW=getRealSize(blocks["pannal"][i]["size"],CW);
pannal.css({"left":(onshow?0:-pW)+"px","visibility":visible});
break;
case "right":
pW=getRealSize(blocks["pannal"][i]["size"],CW);
pannal.css({"right":(onshow?0:-pW)+"px","visibility":visible});
break;
case "top":
pH=getRealSize(blocks["pannal"][i]["size"],CH);
pannal.css({"top":(onshow?0:-pH)+"px","visibility":visible});
break;
case "bottom":
pH=getRealSize(blocks["pannal"][i]["size"],CH);
pannal.css({"bottom":(onshow?0:-pH)+"px","visibility":visible});
break;
}
pannal.setRealSize(pW,pH);
}
if(p.option["frameSet"]=="layoutSlide"){
for(var i=0;i<blocks["fitw"].length;i++){
var block=blocks["fitw"][i]["block"];
block.css({"left":startX+"px","top":startY+"px","visibility":"hidden","z-index":-1});
block.hasClass("open")?block.css({"visibility":"inherit","z-index":3}):null;
block.setRealSize(W,H);
}
for(var i=0;i<blocks["slide"].length;i++){
var block=blocks["slide"][i]["block"];
block.css({"left":startX+"px","top":startY+"px","visibility":"hidden","z-index":-1});
block.hasClass("open")?block.css({"visibility":"inherit","z-index":3}):null;
block.setRealSize(W,H);
}
return;
}
var flexSize=(p.option["flexdir"]=="x")?W:H;
for(var i=0;i<blocks["fixed"].length;i++){
flexSize-=getRealSize(blocks["fixed"][i]["size"],(p.option["flexdir"]=="x")?W:H);
}
var displace=0;
for(var i=0;i<blocks["fitw"].length;i++){
var block=blocks["fitw"][i]["block"];
var bw=0;
if(blocks["fitw"][i]["blocktype"]=="flex"){
bw=Math.floor(blocks["fitw"][i]["weight"]*flexSize)+displace;
if(bw<blocks["fitw"][i]["minsize"]){
block.css({"visiblility":"hidden","z-index":-1});
displace+=bw;
}else{
displace=0;
block.css({"visiblility":"visible","z-index":blocks["fitw"][i]["zindex"]});
if(p.option["flexdir"]=="x"){
block.setRealSize(bw,H);
}else{
block.setRealSize(W,bw);
}}
}else{
bw=(p.option["flexdir"]=="x")?getRealSize(blocks["fitw"][i]["size"],W):getRealSize(blocks["fitw"][i]["size"],H);
if(p.option["flexdir"]=="x"){
block.setRealSize(bw,H);
}else{
block.setRealSize(W,bw);
}}
block.css({"left":startX+"px","top":startY+"px"});
(p.option["flexdir"]=="x")?startX+=bw:startY+=bw;
}}
this.destroy=function(){
}
this.resize=function(){
positionDiv.fillParent();
placeBlocks();
}
this.install();
}
function fixFreeLayout(container,option){
var p=this;
this.option={"leftdis":0,"rightdis":0};
var containerWraper;
var fixdWraper;
var contentWraper;
var slideWraper;
this.install=function(){
option?$.extend(p.option,option):null;
for(var i=0;i<p.option["wraper"].length;i++){
p.option["wraper"][i]["contentObjDiv"]=p.option["wraper"][i]["contentObj"]?container.find(p.option["wraper"][i]["contentObj"]).eq(0):null;
}
p.option["pannal"]=p.option["pannal"]?p.option["pannal"]:[];
for(var i=0;i<p.option["pannal"].length;i++){
p.option["pannal"][i]["contentObjDiv"]=p.option["pannal"][i]["contentObj"]?container.find(p.option["pannal"][i]["contentObj"]).eq(0):null;
}
p.destroy();
if(!containerWraper){
containerWraper=$('<div class="layout_containerWraper"></div>');
containerWraper.css({"position": "relative","width": "100%","height": "100%","overflow":"hidden"});
container.append(containerWraper);
}else{
containerWraper.empty();
}
for(var i=0;i<p.option["wraper"].length;i++){
var wraper=$('<div class="layout_fixpannel '+p.option["wraper"][i]["class"]+'" id="'+p.option["wraper"][i]["id"]+'"><div class="layout_content"></div></div>');
p.option["wraper"][i]["div"]=wraper;
wraper.css({"position": "absolute","top": "0px","bottom": "0px","overflow-x": "hidden","overflow-y": "hidden","z-index":1});
containerWraper.append(wraper);
wraper.find("div.layout_content").css({"overflow-x":"hidden","overflow-x":"auto"})
p.option["wraper"][i]["contentObjDiv"]?wraper.find(">.layout_content").append(p.option["wraper"][i]["contentObjDiv"]):null;
}
for(var i=0;i<p.option["pannal"].length;i++){
var pannal=$('<div class="layout_slidepannel '+p.option["pannal"][i]["class"]+'" id="'+p.option["pannal"][i]["id"]+'" rel="'+i+'"><div class="layout_content"></div></div>');
var dragBar=$('<div class="layout_dragbar"></div>');
pannal.append(dragBar);
p.option["pannal"][i]["div"]=pannal;
containerWraper.append(pannal);
pannal.find("div.layout_content").css({"overflow-x":"hidden","overflow-x":"auto"})
p.option["pannal"][i]["contentObjDiv"]?pannal.find(">.layout_content").append(p.option["pannal"][i]["contentObjDiv"]):null;
pannal.css({"position": "absolute","top": "0px","bottom": "0px","overflow-x": "hidden","overflow-y": "hidden","z-index":p.option["pannal"][i]["zindex"]});
p.option["pannal"][i]["closepadding"]=(p.option["pannal"][i]["openslide"])?{"size":p.option["pannal"][i]["closew"],"hide":false}:{"size":0,"hide":true};
p.option["pannal"][i]["openpadding"]=(p.option["pannal"][i]["closeslide"])?{"size":p.option["pannal"][i]["closew"],"hide":false}:{"size":0,"hide":true};
if(p.option["pannal"][i]["dir"]=="right"){
pannal.css({"right":" 0px"});
p.option["pannal"][i]["closepadding"]["dir"]=p.option["pannal"][i]["openpadding"]["dir"]="padding-left";
dragBar.addClass("rightSide").css({"position": "absolute","top": "0px","bottom": "0px","overflow": "hidden","width":p.option["pannal"][i]["closew"]+"px","left":"0px"});
p.option["rightdis"]=p.option["pannal"][i]["closepadding"]["size"];
}else{
pannal.css({"left":" 0px"});
p.option["pannal"][i]["closepadding"]["dir"]=p.option["pannal"][i]["openpadding"]["dir"]="padding-right";
dragBar.addClass("leftSide").css({"position": "absolute","top": "0px","bottom": "0px","overflow": "hidden","width":p.option["pannal"][i]["closew"]+"px","right":"0px"});
p.option["leftdis"]=p.option["pannal"][i]["closepadding"]["size"];
}
var openW=p.option["pannal"][i]["width"];
pannal.find(">.layout_content").setRealSize(getPannelW(openW));
dragBar.data("open",i);
p.option["pannal"][i]["openslide"]=p.option["pannal"][i]["openslide"]?p.option["pannal"][i]["openslide"]:p.option["openslide"]?p.option["openslide"]:null;
p.option["pannal"][i]["closeslide"]=p.option["pannal"][i]["closeslide"]?p.option["pannal"][i]["closeslide"]:p.option["closeslide"]?p.option["closeslide"]:null;
hidePannal(pannal,true);
}
p.resize();
}
function getPannelW(w){
if(typeof w=="function"){
return w();
}else{
if(w>1){
return w;
}else{
return Math.floor(w*containerWraper.width());
}}
return 0;
}
this.destroy=function(){
$(p).unbind();
if(containerWraper){
containerWraper.del();
containerWraper=null;
}
container.empty();
}
this.getContainerById=function(id){
for(var i=0;i<p.option["wraper"].length;i++){
if(p.option["wraper"][i]["id"]==id){
return p.option["wraper"][i]["div"].find(".layout_content");
break;
}}
for(var i=0;i<p.option["pannal"].length;i++){
if(p.option["pannal"][i]["id"]==id){
return p.option["pannal"][i]["div"].find(".layout_content");
break;
}}
return null;
}
function showHidePannal(){
var dragBar=$(this);
var pannal=dragBar.parent();
if(pannal.hasClass("open")){
hidePannal(pannal);
}else{
openPannal(pannal);
}}
this.closeAllOpen=function(){
containerWraper.find(">.layout_slidepannel.open").each(function(){
hidePannal($(this),true);
});
}
this.openPannalById=function(id){
for(var i=0;i<p.option["pannal"].length;i++){
if(p.option["pannal"][i]["id"]==id){
var pannal=p.option["pannal"][i]["div"];
openPannal(pannal);
break;
}}}
this.closePannalById=function(id){
for(var i=0;i<p.option["pannal"].length;i++){
if(p.option["pannal"][i]["id"]==id){
var pannal=p.option["pannal"][i]["div"];
hidePannal(pannal);
break;
}}}
function openPannal(pannal,direct){
if(!pannal.hasClass("open") || direct){
p.closeAllOpen();
var dragBar=pannal.find(">.layout_dragbar");
var index=dragBar.data("open");
dragBar.unbind();
p.option["pannal"][index]["closeslide"]?dragBar.bind(p.option["pannal"][index]["closeslide"],showHidePannal):null;
p.option["pannal"][index]["openpadding"]["hide"]?dragBar.hide():dragBar.show();
pwidth=getPannelW(p.option["pannal"][index]["width"]);
p.option["pannal"][index]["closeslide"]?dragBar.unbind().bind(p.option["pannal"][index]["closeslide"],showHidePannal):null;
pwidth+=(p.option["pannal"][index]["openpadding"]["size"]==0)?p.option["pannal"][index]["closew"]:0;
direct?pannal.css({"transition":""}):pannal.css({"transition":"0.4s"});
pannal.css(p.option["pannal"][index]["openpadding"]["dir"],p.option["pannal"][index]["openpadding"]["size"]);
pannal.width(pwidth);
pannal.addClass("open").find(">.layout_content").css({"visibility":"inherit"}).setRealSize(pwidth);
if(direct){
return;
}
setTimeout(function(){
$(p).trigger("SLIDE_RESIZE",{"id":pannal.attr("id"),"open":pannal.hasClass("open")});
},direct?50:450);
}}
function hidePannal(pannal,direct){
if(pannal.hasClass("open") || direct){
var dragBar=pannal.find(">.layout_dragbar");
var index=dragBar.data("open");
p.option["pannal"][index]["closepadding"]["hide"]?dragBar.hide():dragBar.show();
pannal.removeClass("open").find(">.layout_content").css({"visibility":"hidden"});
setTimeout(function(){
p.option["pannal"][index]["openslide"]?dragBar.unbind().bind(p.option["pannal"][index]["openslide"],showHidePannal):null;
},1000)
direct?pannal.css({"transition":""}):pannal.css({"transition":"0.4s"});
pannal.css(p.option["pannal"][index]["closepadding"]["dir"],p.option["pannal"][index]["closepadding"]["size"]);
pannal.width(0);
if(direct){
return;
}
setTimeout(function(){
$(p).trigger("SLIDE_RESIZE",{"id":pannal.attr("id"),"open":pannal.hasClass("open")});
},direct?50:450);
}}
this.resize=function(){
var W=container.width();
var H=container.height();
W-=p.option["leftdis"];
W-=p.option["rightdis"];
containerWraper.height(H);
var fixW=0;
var flotW=0;
for(var i=0;i<p.option["wraper"].length;i++){
p.option["wraper"][i]["width"]>1?fixW+=p.option["wraper"][i]["width"]:flotW+=p.option["wraper"][i]["width"];
}
var per=1;
if(W<fixW+p.option["minContWidth"]){
per=W/(fixW+p.option["minContWidth"]);
}
var contW=W;
for(var i=0;i<p.option["wraper"].length;i++){
if(p.option["wraper"][i]["width"]>1){
var dw=Math.floor(p.option["wraper"][i]["width"]*per);
contW-=dw;
}}
var perw=contW/(flotW==0?1:flotW);
var x=p.option["leftdis"];
for(var i=0;i<p.option["wraper"].length;i++){
var dw;
if(p.option["wraper"][i]["width"]>1){
dw=Math.floor(p.option["wraper"][i]["width"]*per);
}else{
dw=Math.floor(p.option["wraper"][i]["width"]*perw);
}
p.option["wraper"][i]["div"].css({"left":x+"px"}).setRealSize(dw);
x+=dw;
}
for(var i=0;i<p.option["pannal"].length;i++){
var pannal= p.option["pannal"][i]["div"];
var dragBar= pannal.find(">.layout_dragbar");
if(pannal.hasClass("open")){
openPannal(pannal,true);
}}
containerWraper.find("div.layout_content").fillParent();
$(p).trigger("LAYOUT_RESIZE");
}
this.install();
}
function slideLayout(container,option){
var p=this;
this.option={};//"leftdis":0,"rightdis":0
var slideContainer;
var butContainer;
var pages=[];
var onShowDiv;
var toDiv;
var winW;
var templete={};
this.install=function(){
option?$.extend(p.option,option):null;
container.find(">*").each(function(){
var tid=$(this).attr("id");
templete[tid]=$(this).clone();
});
slideContainer=$('<div class="fm_layoutWraper"></div>');
slideContainer.css({"position":"relative","overflow":"hidden"});
container.empty().append(slideContainer);
butContainer=$('<div class="fm_layoutSlideButbox"><span></span> <a id="next" title="\u524d\u8fdb" class="but-green"><i class="fa fa-chevron-right"/></a><a id="prev" title="\u540e\u9000"  class="but-green"><i class="fa fa-chevron-left"/> </a> <a id="home" title="\u8fd4\u56de"  class="but-green"><i class="fa fa-step-backward"/></a></div>');
container.append(butContainer);
butContainer.find(">a").addClass("disabled").bind("click",checkSlide);
p.resize();
}
function insertContainer(id,templeteId,condition){
var box=$('<div id="'+id+'" class=".fm_layoutSlideBlock"></div>');
slideContainer.append(box);
box.css({"position":"absolute","top":"0px","left":"0px","visibility":"hidden","overflow":"auto","z-index":-1});
box.fillParent();
var cont=templete[templeteId]?templete[templeteId].clone():null;
if(cont){
box.append(cont);
cont.fillParent().attr("id","layout_slide_widget");
}
return box;
}
function checkSlide(){
if($(this).hasClass("disabled")){
return;
}
var cn=$(this).attr("id");
switch(cn){
case "prev":
if(onShowDiv){
var prevdiv=onShowDiv.data("prevdiv");
if(prevdiv){
slideToId(prevdiv.attr("id"),false,true);
}}
break;
case "next":
if(onShowDiv){
var nextdiv=onShowDiv.data("nextdiv");
if(nextdiv){
slideToId(nextdiv.attr("id"));
}}
break;
case "home":
if(onShowDiv){
var homediv=getRoot(onShowDiv);
if(homediv){
slideToId(homediv.attr("id"),false,true);
}}
break;
}}
function getRoot(obj){
var parent=obj.data("prevdiv");
if(parent){
return getRoot(parent);
}else{
return obj;
}}
this.getContainerById=function(id){
var box=slideContainer.find(">#"+id);
return box.length>0?box.eq(0):null;
}
this.goTo=function(targetId,templeteId,condition,title){
if(onShowDiv){
var next=onShowDiv.data("nextdiv");
next?clearChian(next):null;
onShowDiv.data("nextdiv",null);
}
var box=p.getContainerById(targetId);
var winID
if(!box){
box=insertContainer(targetId,templeteId,condition);
var cont=box.find("#layout_slide_widget");
cont.widget(condition);
var winID=cont.attr("data-widgetName");
box.attr("winName",winID);
}else{
winID=box.attr("winName");
WINDOW.reload(winID,condition);	
}
box.data("title",title);
var widgetWindow=WINDOW.getWindowById(winID);
widgetWindow.disAutoResize();
$.loading(3000);
$(widgetWindow).bind("GOTO_PAGE",popEvent).one("PAGE_LOADED",function(){
slideToId(targetId,true);
$.loaded();
})
}
function popEvent(e,Var){
$(p).trigger("GOTO_PAGE",$.extend({"stepid":onShowDiv.attr("id")},Var));
}
function clearChian(obj){
var child=obj.data("nextdiv");
if(child){
clearChian(child);
}
obj.data("prevdiv",null);
obj.data("nextdiv",null);
}
function slideToId(divId,resetChain,goback){
if(!divId){return};
var box=p.getContainerById(divId);
toDiv=box;
var fromDiv=onShowDiv;
if(fromDiv){
if(divId==fromDiv.attr("id")){
return;
}
resetChain?fromDiv.data("nextdiv",toDiv):null;
fromDiv.css({"z-index":1});
var tox=goback?winW:-winW;
$.slideTo(fromDiv,{},{"left":tox},2,function(){
$(p).trigger("SLIDE_OUT",{"obj":fromDiv,"id":fromDiv.attr("id")});
});
}
resetChain?toDiv.data("prevdiv",fromDiv):null;
toDiv.css({"z-index":2,"visibility":"inherit"});
var fromx=goback?-winW:winW;
$.slideTo(toDiv,{"left":fromx},{"left":0},0.5,function(){
fromDiv?fromDiv.css({"visibility":"hidden","z-index":-1}):null;
$(p).trigger("SLIDE_IN",{"obj":toDiv,"id":toDiv.attr("id")});
});
onShowDiv=toDiv;
butContainer.find(">span").text(onShowDiv.data("title")||"");
butContainer.find(">a").addClass("disabled");
onShowDiv.data("prevdiv")?butContainer.find(">a#prev,>a#home").removeClass("disabled"):null;
onShowDiv.data("nextdiv")?butContainer.find(">a#next").removeClass("disabled"):null;
}
this.resize=function(){
slideContainer.setRealSize(null,container.height()-butContainer.outerHeight(true));
slideContainer.find(">*").fillParent();
slideContainer.find(">*").each(function(){
var block=$(this);
block.find(">*").fillParent();
var winID=block.attr("winName");
var widgetWindow=WINDOW.getWindowById(winID);
widgetWindow.resize();
});
winW=slideContainer.outerWidth();
$(p).trigger("LAYOUT_RESIZE");
}
this.destroy=function(){
$(p).unbind();
if(butContainer){
butContainer.find(">a").unbind();
butContainer.del();
}
if(slideContainer){
slideContainer.del();
slideContainer=null;
}}
this.install();
}
function Tabs(tabcontainer,tabcontent){
var p=this;
var option={"position":"top","width":90,"default":0};
var contBox;
var container;
this.index;
this.install=function(){
var newoption=tabcontainer.dataOptions();
$.extend(option,newoption);
contBox=$('<div class="fm_tabContent"></div>');
contBox.append(tabcontent);
container=$('<div class="fm_tabPartWraper"></div>');
container.css({"width":"100%","height":"100%","overflow":"hidden"});
tabcontainer.before(container).css({"visibility":"hidden"});;
container.append(tabcontainer).append(contBox);
if(option["position"]=="left"){
tabcontainer.addClass("fm_tableft").css({"float":"left","overflow-x":"hidden","overflow-y":"auto"}).attr("dir","rtl");
contBox.css({"float":"right","width":"100%","height":"100%","overflow-x":"hidden","overflow-y":"auto"}).after('<div class="cl"></div>');
}else{
tabcontainer.addClass("fm_tabtop");
contBox.css({"float":"none","overflow-x":"hidden","overflow-y":"auto"});
contBox.setRealSize(null,container.height()-tabcontainer.outerHeight(true));
}
tabcontainer.find(">*").attr("dir","ltr").bind("click",tabClicked);
p.resize();
tabcontainer.css({"visibility":"inherit"});
if(!isNaN(option["default"])){ 
p.gotoTab(option["default"]);
}}
this.gotoTab=function(index){
p.index=index;
tabcontainer.find(">*").eq(index).click();
}
function tabClicked(){
tabcontainer.find(".nowid").removeClass("nowid");
$(this).addClass("nowid");
p.index=$(this).index();
$(p).trigger("TAB_CLICK",{"tabItem":$(this)});
}
this.resize=function(){
if(option["position"]=="left"){
var size=[container.width(),container.height()];
tabcontainer.setRealSize(option["width"],size[1]);
contBox.setRealSize((size[0]-tabcontainer.outerWidth(true)),size[1]);
}else{
contBox.setRealSize(null,container.height()-tabcontainer.outerHeight(true));
}
$(p).trigger("TAB_RESIZE",{"w":contBox.width(),"h":contBox.height()});
}
this.install();
}
function AccordionFrame(container,autoClose){
var p=this;
var boxes=container.find(">*");
var bars;
this.install=function(){
boxes.each(function(id){
var box=$(this);
var option=box.dataOptions();
option["id"]=option["id"]?option["id"]:(box.attr("id")||("acc_"+id));
var titleBar=$('<div class="fm_AccordionBar" rel="'+option["id"]+'"><i class="fa fa-angle-down"></i> '+(option["title"]||"")+'</div>');
box.before(titleBar);
option["open"]?titleBar.addClass("open").find("i").attr("class","fa fa-angle-up"):box.hide();
});
bars=container.find(">div.fm_AccordionBar");
if(bars.length==0){
bars.eq(0).addClass("open").find("i").attr("class","fa fa-angle-up");
boxes.eq(0).show();
}
bars.bind("click",function(){
var index=bars.index($(this));
openHideA(index);
});
}
function msgTip(bar,msg){
bar.find("span.msgtip").remove();
if(msg){
bar.append($('<span class="msgtip">'+(msg||"")+'</span>'));
}}
this.disableBar=function(index,type,msg){
var bar=bars.eq(index);
bar.find("span.flash,span.msgtip").remove();
if(type){
bar.addClass("cantopen");
}else{
bar.removeClass("cantopen");
}
msgTip(bar,msg);
}
this.setFlash=function(index,flash,msg){
var bar=bars.eq(index);
bar.find("span.flash").remove();
if(flash){
bar.append($('<span class="flash"></span>'));
}
msgTip(bar,msg);
}
this.readyToLoad=function(index,flash,msg){
var bar=bars.eq(index);
if(bar.hasClass("open")){
return;
}
bar.addClass("needload").removeClass("cantopen");
bar.find("span.flash").remove();
if(flash){
bar.append($('<span class="flash"></span>'));
}
msgTip(bar,msg);
}
function openHideA(index,msg){
var bar=bars.eq(index);
if(bar.hasClass("cantopen")){
return;
}
msgTip(bar,msg);
bar.find("span.flash").remove();
if(bar.hasClass("open")){
bar.removeClass("open").find("i").attr("class","fa fa-angle-down");
boxes.eq(index).hide();
return;
}else if(bar.hasClass("needload")){
$(p).trigger("ACC_LOAD",{"index":index,"id":boxes.eq(index).attr("id")||"","callback":function(){
bar.removeClass("needload");
openHideA(index);
}});
return;
}
if(autoClose){
bars.removeClass("open").find("i").attr("class","fa fa-angle-down");
boxes.hide();
}
bar.addClass("open").find("i").attr("class","fa fa-angle-up");
boxes.eq(index).show();
$(p).trigger("ACC_OPEN",{"index":index,"id":boxes.eq(index).attr("id")||""});
}
this.open=function(id){
var targetbox=container.find(".fm_AccordionBar[rel="+id+"]").eq(0);
if(targetbox.length>0 && !targetbox.hasClass("open")){
targetbox.click();
}}
this.install();
}
function ComSelctor(container,option){
var p=this;
this.option=$.extend({"selectBoxWidth":220},option);
var searchWraper;
var selectWraper;
var selectList;
var treeBox;
var groupBox;
var historyBox;
var searchList;
var selected=[];
var keyinput;
var Loader;
var Treeobj;
var History;
var Group;
this.destroy=function(){
if(Treeobj){
Treeobj.del();
Treeobj=null;
}
if(Loader){
Loader.destroy();
Loader=null;
}
if(keyinput){
keyinput.unbind();
}
container.clear();//.empty();
}
this.install=function(){
container.attr("class","fm_searchSelector").css({"position":"relative"});
searchWraper=$('<div class="searchBox">'+
'<div class="searchKey relpos">'+
'<input name="key" style="float:left" placeholder="\u8f93\u5165\u67e5\u8be2\u5185\u5bb9"  list="inputlist" />'+
'<datalist id="inputlist"></datalist>'+
'<i class="fa fa-clock-o chghistroy" style="float:right"  '+((p.option["selectHistory"]&&p.option["selectHistory"]["title"])?'title="'+p.option["selectHistory"]["title"]+'"':'')+'></i>'+ 
'<i class="fa fa-th-list chggroup" style="float:right"  '+((p.option["groupOptions"]&&p.option["groupOptions"]["title"])?'title="'+p.option["groupOptions"]["title"]+'"':'')+'></i>'+ 
'<i class="fa fa-sitemap chgtree" style="float:right"  '+((p.option["treeOptions"]&&p.option["treeOptions"]["title"])?'title="'+p.option["treeOptions"]["title"]+'"':'')+'></i>'+ 
'<i class="fa fa-search searchbut" style="float:right"  '+(p.option["title"]?'title="'+p.option["title"]+'"':'')+'></i>'+ 
'<dd class="dropselect"></dd></div>'+
'<div class="searchList"></div>'+
'<div class="groupList listSelect"><ul><li><h1 id="title"></h1><p id="content"></p></li></ul>'+
((p.option["groupOptions"]&&p.option["groupOptions"]["canSelectAll"])?'<div class="selcetAll"><a> \u5168\u9009 <i class="fa fa-chevron-right"></i></a></div></div>':'</div>')+
'<div class="treeBox"></div>'+
'<div class="historyBox listSelect"><ul><li><h1 id="title"></h1><p id="content"></p></li></ul></div>'+
'</div>');
treeBox=searchWraper.find(".treeBox");
groupBox=searchWraper.find("div.groupList");
groupBox.css({"overflow":"auto"});//.attr("dir","rtl").find(">ul").attr("dir","ltr");
historyBox=searchWraper.find(".historyBox");
searchList=searchWraper.find("div.searchList");
searchList.css({"overflow":"auto"});//.attr("dir","rtl").find(">ul").attr("dir","ltr");
selectWraper=$('<div class="selectorBox"><h3><i class="fa fa-star savehistroy" style="float:right" title="\u4fdd\u5b58\u5e38\u7528\u7ec4"></i><a>\u6e05\u7a7a</a>  \u5df2\u9009\u62e9 [ <span>0</span> ]</h3><div class="hissaveform"><a>\u4fdd\u5b58</a><input name="groupname" value="\u65b0\u5efa\u5e38\u7528\u7ec4" maxleng="50" /></div><div class="selectedList"></div></div>');
if(!p.option["treeOptions"]){
treeBox.remove();
searchWraper.find(">.searchKey i.chgtree").remove();
}else{
treeBox.css({"overflow":"auto"}).hide();
searchWraper.find(">.searchKey i.chgtree").bind("click",function(){changeToPart("tree");});
}
if(!p.option["groupOptions"]){
groupBox.remove();
searchWraper.find(">.searchKey i.chggroup").remove();
}else{
groupBox.css({"overflow":"auto"}).hide();
searchWraper.find(">.searchKey i.chggroup").bind("click",function(){changeToPart("group");});
}
if(!p.option["selectHistory"]){
historyBox.remove();
selectWraper.find("h3 i").remove();
selectWraper.find(".hissaveform").remove();
searchWraper.find(">.searchKey i.chghistroy").remove();
}else{
selectWraper.find(".hissaveform").hide();
if(p.option["selectHistory"]["editable"]){
selectWraper.find("h3 i").bind("click",function(){
if($(this).hasClass("nowid")){
$(this).removeClass("nowid");
selectWraper.find(".hissaveform").hide();
}else{
$(this).addClass("nowid");
selectWraper.find(".hissaveform").show();
}
});
selectWraper.find(".hissaveform >a").bind("click",saveHistory);
}else{
selectWraper.find("h3 i").remove();
selectWraper.find(".hissaveform").remove();
}
historyBox.css({"overflow":"auto"}).hide();
searchWraper.find(">.searchKey i.chghistroy").bind("click",function(){changeToPart("history");});
}
selectWraper.find("h3 a").bind("click",p.clear);
keyinput=searchWraper.find(">.searchKey input");
keyinput.bind("keydown",checkReturn);
searchWraper.find(">.searchKey i.searchbut").bind("click",startSearch);
selectList=selectWraper.find(">div.selectedList");
selectList.css({"overflow-x":"hidden","overflow-y":"auto"});
container.empty().append(searchWraper).append(selectWraper);
selectWraper.css({"width":p.option["selectBoxWidth"]+"px","position":"absolute","top":"0px","right":"0px","z-index":2,"overflow":"hidden"});
searchWraper.css({"position":"absolute","top":"0px","left":"0px","z-index":1,"overflow":"hidden"});
var drop=searchWraper.find("dd.dropselect");
drop.css({"position":"absolute","top":"4px","right":(searchWraper.find(">.searchKey >i").outerWidth(true)*searchWraper.find(">.searchKey >i").length+5)+"px"});
var dH=0;
if(p.option["searchClass"] && p.option["searchClass"].length>0){
for(var i=0;i<p.option["searchClass"].length;i++){
var dropli=$('<p rel="'+p.option["searchClass"][i]["value"]+'" rev="'+i+'">'+p.option["searchClass"][i]["name"]+'</p>');
drop.append(dropli);
dH=Math.max(dH,dropli.outerWidth());
if(i>0){
dropli.hide();
}}
drop.width(dH).bind("mouseenter",showDropType);
}else{
drop.remove();
drop=null;
}
creatinputtips();
}
function creatinputtips(){
var tipsbox=searchWraper.find("#inputlist");
tipsbox.empty();
try{
for(var i=0;i<INPUTHISTORY.length;i++){
tipsbox.append($('<option value="'+INPUTHISTORY[i]+'"/>'));
}
}catch(e){
}}
this.reloadHistory=function(){
if(History){
History.reload();
}}
function saveHistory(){
var groupname=selectWraper.find(".hissaveform input[name='groupname']").val();
groupname=trim(groupname);
if(groupname){
var users=p.getSelected();
if(users.length<1){
$.alert("\u8bf7\u9009\u62e9");
return;
}
var postData={"groupname":groupname,"users":users};
Loader=new AJAXObj();
$(Loader).one("JSON_LOADED",function(e,bkJson){
$.success("\u4fdd\u5b58\u6210\u529f");
selectWraper.find("i.nowid").removeClass("nowid");
selectWraper.find(".hissaveform").hide();
if(History){
History.reload();
}
});
Loader.POSTDATA(p.option["selectHistory"]["url"],{"event":"savegroup","content":{"value":postData}});
}}
var firstLoadtree=true;
function changeToPart(toBox){
var treebut=searchWraper.find("i.chgtree");
var groupbut=searchWraper.find("i.chggroup");
var historybut=searchWraper.find("i.chghistroy");
if(toBox=="search" && !treebut.hasClass("active") && !historybut.hasClass("active") && !groupbut.hasClass("active")){
return;
}
treeBox.hide();
searchList.hide();
historyBox.hide();
groupBox.hide();
if(toBox=="tree"){
if(treebut.hasClass("active")){
historybut.removeClass("active");
treebut.removeClass("active");
groupbut.removeClass("active");
searchList.show();
return;
}
historybut.removeClass("active");
groupbut.removeClass("active");
treebut.addClass("active");
treeBox.show();
if(!Treeobj){
Treeobj=$('<div id="tree"></div>');
Treeobj.css({"height":"100%","overflow":"auto"});
treeBox.append(Treeobj);
$.extend(p.option["treeOptions"],{"animate":true,"checkbox":true,"onCheck":treeBranchClick,"onLoadSuccess":setSearchDefaultChecked,"onExpand":scrollToNode});
if(!p.option["mulit"]){
p.option["treeOptions"]["cascadeCheck"]=false;
}
Treeobj.tree(p.option["treeOptions"]);
}
}else if(toBox=="history"){
if(historybut.hasClass("active")){
historybut.removeClass("active");
treebut.removeClass("active");
groupbut.removeClass("active");
searchList.show();
return;
}
treebut.removeClass("active");
groupbut.removeClass("active");
historybut.addClass("active");
historyBox.show();
if(!History){
History=new ListView(historyBox.find(">ul"));
$(History).unbind("LI_CLICKED").bind("LI_CLICKED",function(e,lidata){
loadAndInsertuser(lidata["data"],"history");
})
History.load(p.option["selectHistory"]["url"],{"event":"getlist","content":{"condition":p.option["selectHistory"]["param"]},"extend":{}},p.option["selectHistory"]["ListFormater"],p.option["selectHistory"]["ActionFormater"]); 
}
}else if(toBox=="group"){
if(groupbut.hasClass("active")){
historybut.removeClass("active");
treebut.removeClass("active");
groupbut.removeClass("active");
searchList.show();
return;
}
treebut.removeClass("active");
historybut.removeClass("active");
groupbut.addClass("active");
groupBox.show();
if(!Group){
Group=new ListView(groupBox.find(">ul"));
$(Group).unbind("LI_CLICKED").bind("LI_CLICKED",function(e,lidata){
loadAndInsertuser(lidata["data"],"group");
})
Group.load(p.option["groupOptions"]["url"],{"event":"getlist","content":{"condition":p.option["groupOptions"]["param"]},"extend":{}},p.option["groupOptions"]["ListFormater"],p.option["groupOptions"]["ActionFormater"]); 
groupBox.find(".selcetAll a").bind("click",function(){
selectAllgroup(Group.getData(),"group");
});
}
}else{
historybut.removeClass("active");
treebut.removeClass("active");
groupbut.removeClass("active");
searchList.show();
}}
function selectAllgroup(listData,type){
var postData=[];
var url;
switch(type){
case "history":
url=p.option["selectHistory"]["url"];
break;
case "group":
url=p.option["groupOptions"]["url"];
break;
}
for(var i=0;i<listData.length;i++){
switch(type){
case "history":
postData.push((typeof p.option["selectHistory"]["onBeforeLoad"]=="function")?p.option["selectHistory"]["onBeforeLoad"](listData[i]):{"guid":listData[i]["guid"]||""});
url=p.option["selectHistory"]["url"];
break;
case "group":
postData.push((typeof p.option["groupOptions"]["onBeforeLoad"]=="function")?p.option["groupOptions"]["onBeforeLoad"](listData[i]):{"guid":listData[i]["guid"]||""});
url=p.option["groupOptions"]["url"];
break;
}}
Loader=new AJAXObj();
$(Loader).one("JSON_LOADED",function(e,bkJson){
var userlist=bkJson["value"]["rows"];
p.insertToSelect(userlist,type);
});
Loader.POSTDATA(url,{"event":"getalluser","content":{"condition":postData}});
}
function loadAndInsertuser(lidata,type){
var postData;
var url;
switch(type){
case "history":
postData=(typeof p.option["selectHistory"]["onBeforeLoad"]=="function")?p.option["selectHistory"]["onBeforeLoad"](lidata):{"guid":lidata["guid"]||""};
url=p.option["selectHistory"]["url"];
break;
case "group":
postData=(typeof p.option["groupOptions"]["onBeforeLoad"]=="function")?p.option["groupOptions"]["onBeforeLoad"](lidata):{"guid":lidata["guid"]||""};
url=p.option["groupOptions"]["url"];
break;
}
Loader=new AJAXObj();
$(Loader).one("JSON_LOADED",function(e,bkJson){
var userlist=bkJson["value"]["rows"];
p.insertToSelect(userlist,type);
});
Loader.POSTDATA(url,{"event":"getuser","content":{"condition":postData}});
}
function scrollToNode(node){
if(p.option["mulit"] && p.option["treeOptions"]["cascadeCheck"] && !Treeobj.tree('isLeaf',node.target)){
var checked=node.checked;
if(checked){
Treeobj.tree('check',node.target);
refreshSelected();
}}
Treeobj.scrollTo(node.target,300,{axis:'y'});
}
var isChecking=false;
function treeBranchClick(node,checked){
if(p.option["mulit"] && p.option["treeOptions"]["cascadeCheck"] && !Treeobj.tree('isLeaf',node.target)){
if(checked){
Treeobj.tree('expand',node.target);
}}
if(isChecking){
return;
}
if(!p.option["mulit"]){
isChecking=true;
var nodes=Treeobj.tree("getChecked");
for(var i=0;i<nodes.length;i++){
Treeobj.tree("uncheck",nodes[i].target);
}
Treeobj.tree("check",node.target);	
isChecking=false;
}
if(checked){
p.insertToSelect([node],"tree");
}else if(p.option["mulit"]){
p.findAndRemove(node);
}}
function findAndCheckTreeNode(type,conditiondata){
if(!Treeobj){
return;
}
isChecking=true;
var nodes=type?Treeobj.tree("getChecked","unchecked"):Treeobj.tree("getChecked");
var tostat=type?"check":"uncheck";
for(var i=0;i<nodes.length;i++){
if(checkEq(nodes[i],conditiondata)){
Treeobj.tree(tostat,nodes[i].target);
}}
isChecking=false;
}
function checkAllTreeNode(type){
if(!Treeobj){
return;
}
isChecking=true;
var nodes=type?Treeobj.tree("getChecked","unchecked"):Treeobj.tree("getChecked");
var tostat=type?"check":"uncheck";
for(var i=0;i<nodes.length;i++){
Treeobj.tree(tostat,nodes[i].target);
}
isChecking=false;
}
function setSearchDefaultChecked(){
for(var i=0;i<selected.length;i++){
findAndCheckTreeNode(true,selected[i]);
findAndCheckList(true,selected[i]);
}
if(firstLoadtree && Treeobj){
var rootNode=Treeobj.tree("getRoot");
Treeobj.tree("expand",rootNode.target);
firstLoadtree=false;
}}
function checkReturn(e){
var keycode=e.keyCode;
if(keycode==13){
startSearch();
}}
function startSearch(){
var key=trim(keyinput.val());
if(key){
keyinput.unbind().blur();
var pdata={"key":key};
var drop=searchWraper.find("dd.dropselect");
if(drop.length>0 && drop.find(">p").length>0){
pdata["type"]=drop.find(">p:eq(0)").attr("rel");
}
if(Loader){
Loader.destroy();
Loader=null;
}
try{
saveToInputHistory(key); 
creatinputtips();
}catch(e){
}
changeToPart("search");
Loader=new AJAXObj();
$(Loader).one("JSON_LOADED",showSearchList);
Loader.POSTDATA(p.option["url"],{"event":"search","content":{"condition":$.extend(pdata,p.option["param"])}});
}}
function showSearchList(e,jsonBk){
keyinput.unbind().bind("keydown",checkReturn);
var RS=jsonBk["value"]["rows"];
searchList.empty();
if(RS && RS.length>0){
for(var i=0;i<RS.length;i++){
var partbox;
if(p.option["groupSet"] && p.option["groupSet"]["searchGroupBy"]){
var boxRel=RS[i][p.option["groupSet"]["searchGroupBy"]]||"other";
var boxTitle=RS[i][p.option["groupSet"]["searchGroupTitle"]]||"\u5176\u4ed6";
partbox=searchList.find(">.selectPart[rel='part_"+boxRel+"']");
if(partbox.length==0){
partbox=$('<div class="selectPart open" rel="part_'+boxRel+'"><h2><i class="fa fa-arrow-right"></i>'+boxTitle+' [ <span>0</span> ]</h2></div>');
searchList.append(partbox);
}
}else{
partbox=searchList;
}
var newLi=$('<p class="sch_checkli">'+getFormat(RS[i])+'</p>');
newLi.data("data",RS[i]);//.attr("dir","ltr");
RS[i]["item"]=newLi;
partbox.append(newLi);
}
searchList.find(">.selectPart:gt(0)").removeClass("open").find(">p.sch_checkli").hide();
searchList.find("p").bind("click",addToSelected);
searchList.find("h2").bind("click",showHidePart);
searchList.find("h2 i").bind("click",addPartToSelected);
searchList.find(">div.selectPart").each(function(){
var num=$(this).find(">p.sch_checkli").length;
$(this).find(">h2 span").text(num);
})
if(p.option["mulit"]){
var selectAllBut=$('<div class="selcetAll"><a> \u5168\u9009 <i class="fa fa-chevron-right"></i></a></div>');
searchList.append(selectAllBut);
selectAllBut.find("a").bind("click",selectAllSearch);
}
setSearchDefaultChecked();
}}
function selectAllSearch(){
var newdata=[];
searchList.find("p.sch_checkli").each(function(){
var sdata=$(this).data("data");
$(this).addClass("selected");
newdata.push(sdata);
});
p.insertToSelect(newdata,"search");
}
function addPartToSelected(){
var part=$(this).parent().parent();
var newdata=[];
part.find(">p.sch_checkli").each(function(){
var sdata=$(this).data("data");
$(this).addClass("selected");
newdata.push(sdata);
});
p.insertToSelect(newdata,"search");
return false;
}
function addToSelected(){
var sdata=$(this).data("data");
if(!p.option["mulit"]){
searchList.find("p.selected").removeClass("selected");
}
if($(this).hasClass("selected")){
$(this).removeClass("selected");
p.findAndRemove(sdata);
}else{
$(this).addClass("selected");
p.insertToSelect([sdata],"search");
}}
this.setDefault=function(defaultData){
selectList.empty();
if(defaultData && defaultData.length>0){
p.insertToSelect(defaultData,"default");
}}
function showDropType(){
var drop=searchWraper.find("dd.dropselect");
drop.find(">p").show().one("click",function(){
drop.prepend($(this));
drop.unbind("mouseleave").find(">p:gt(0)").hide();
});
drop.unbind("mouseleave").one("mouseleave",function(){
drop.find(">p:gt(0)").hide();
});
}
this.resize=function(w,h){
container.css({"width":w+"px","height":h+"px"});
var scW=w-p.option["selectBoxWidth"];
searchWraper.width(scW);
searchWraper.height(h);
selectWraper.height(h).width(p.option["selectBoxWidth"]);
var scbox=searchWraper.find(".searchKey");
var drop=scbox.find(">dd.dropselect");
var inputw=drop.length>0?(scbox.width()-drop.outerWidth(true)):scbox.width();
inputw-=scbox.find(">i").outerWidth(true)*scbox.find(">i").length;
searchWraper.find("input[name='key']").setRealSize(inputw,null);
var slistH=h-scbox.outerHeight(true);
searchList.height(slistH);
selectList.height(slistH);
groupBox.height(slistH);
treeBox.height(slistH);
historyBox.height(slistH);
}
this.insertToSelect=function(listArray,type){
if(!p.option["mulit"]){
listArray.splice(1,listArray.length);
p.clear();
}
var userlist=[];
for(var i=0;i<listArray.length;i++){  
if(!inList(listArray[i],selected)){
selected.push(listArray[i]);
userlist.push(listArray[i]);
}}
if(userlist.length<1){
return;
}
var lastLi;
for(var i=0;i<userlist.length;i++){
lastLi=p.insert(userlist[i],type);
}
selectList.scrollTo(lastLi,400);
}
this.insert=function(lidata,type){
var partbox;
if(p.option["groupSet"] && p.option["groupSet"]["groupBy"]){
var boxRel=lidata[p.option["groupSet"]["groupBy"]]||"other";
var boxTitle=lidata[p.option["groupSet"]["groupTitle"]]||"\u5176\u4ed6";
partbox=selectList.find(">.selectPart[rel='part_"+boxRel+"']");
if(partbox.length==0){
partbox=$('<div class="selectPart open" rel="part_'+boxRel+'"><h2><i class="fa fa-remove"></i> '+boxTitle+' [ <span>0</span> ]</h2></div>');
selectList.append(partbox);
partbox.find(">h2").bind("click",showHidePart).find("i").one("click",delgroup);
}
}else{
partbox=selectList;
}
var newLi=$('<p class="sch_checkli"><i class="fa fa-remove dellibut"></i>'+getFormat(lidata)+'</p>');
newLi.data("data",lidata).find("i.dellibut").bind("click",delLi);
lidata["item"]=newLi;
partbox.append(newLi);
if(type=="tree"){
findAndCheckList(true,lidata);
(!p.option["mulit"])?findAndCheckTreeNode(true,lidata):null;
}else if(type=="search"){
findAndCheckTreeNode(true,lidata);
(!p.option["mulit"])?findAndCheckList(true,lidata):null;
}else{
findAndCheckList(true,lidata);
findAndCheckTreeNode(true,lidata);
}
refreshNum();
return newLi;
}
function refreshNum(){
selectList.find(">div.selectPart").each(function(){
var num=$(this).find(">p.sch_checkli").length;
if(num==0){
$(this).empty().remove();
}else{
$(this).find(">h2 span").text(num);
}
})
selectWraper.find("h3 span").text(selectList.find("p").length);
}
function delgroup(){
var group=$(this).parent().parent();
group.find(">p.sch_checkli").each(function(){
var data=$(this).data("data");
p.findAndRemove(data);
findAndCheckTreeNode(false,data);
})
group.empty().remove();
refreshNum();
return false;
}
function delLi(){
var li=$(this).parent();
var group=li.parent();
var data=li.data("data");
p.findAndRemove(data);
findAndCheckTreeNode(false,data);
if(group.find(">p.sch_checkli").length==0){
group.empty().remove();
group=null;
}
refreshNum();
}
this.findAndRemove=function(delNode){
for(var i=0;i<selected.length;i++){
if(checkEq(selected[i],delNode)){
selected[i]["item"].unbind().remove();
selected[i]=null;
selected.splice(i,1);
findAndCheckList(false,delNode);
findAndCheckTreeNode(false,delNode);
delNode=null;
refreshNum();
break;
}}}
function findAndCheckList(type,nodedata){
var plist=type?searchList.find("p:not(.selected)"):searchList.find("p.selected");
plist.each(function(){
if(checkEq($(this).data("data"),nodedata)){
type?$(this).addClass("selected"):$(this).removeClass("selected");
}
});
}
function showHidePart(){
var box=$(this).parent();
if(box.hasClass("open")){
box.find(">p.sch_checkli").hide();
box.removeClass("open")
}else{
box.find(">p.sch_checkli").show();
box.addClass("open")
box.parent().scrollTo(box,400);
}}
function inList(user,checkArr){
for(var i=0;i<checkArr.length;i++){
if(checkEq(checkArr[i],user)){
return true;
}}
return false;
}
function checkEq(a,b){
if(p.option["checkEq"].length>0){
for(var i=0;i<p.option["checkEq"].length;i++){
if(a[p.option["checkEq"][i]]!=b[p.option["checkEq"][i]]){
return false;
}}
return true;
}
return false;
}
function getFormat(lidata){
if(typeof p.option["listFormator"]=="function"){
return p.option["listFormator"](lidata);
}
return lidata[p.option["checkField"]["name"]];
}
this.clear=function(){
selected.splice(0,selected.length);
selectList.empty();
checkAllTreeNode(false);
refreshNum();
searchList.find("p.selected").removeClass("selected");
}
this.getSelected=function(){
var selectedArr=[];
p.option["checkField"]["value"]=(typeof p.option["checkField"]["value"]=="string")?[p.option["checkField"]["value"]]:p.option["checkField"]["value"];
selectList.find("p.sch_checkli").each(function(){
var data=$(this).data("data");
var returndata={};
for(var i=0;i<p.option["checkField"]["value"].length;i++){
var na=p.option["checkField"]["value"][i];
returndata[na]=data[na];
}
selectedArr.push(returndata);
})
return selectedArr;
}
this.install();
}function webChat(chatOption){
var p=this;
this.onshow=false;
var chatOn;
this.option={"height":0.8,"minheight":300,"groupwidth":260,"chatminwidth":300,"chatwidth":300,"userwidth":200,"infowidth":240,
"maxmsg":200,"listener":"http","timer":10000,"sound":true};
var baseIndex=ZINDEX["pop"];
var activeIndex=ZINDEX["popActive"];
var lockmaskIndex=ZINDEX["popLockMask"];
var frontClass=ZINDEX["frontClass"];
var nowSize;//={"width":820,"groupwidth":200,"chatminwidth":300,"userwidth":200,"infowidth":280};
var chatWindow;
var Messager;
var ChatObj;
var MsgInput;
var GroupList;
var AddDetail;
var SOUND;
var isIE =  navigator.userAgent.indexOf("MSIE 8.0")>0?true:false;
var containers={};
var userOn=false;
var infoOn=false;
this.install=function(){
$.extend(p.option,chatOption);
if(!p.option["hostPort"]){
return;
}
p.option["height"]=p.option["height"]<1?Math.floor(p.option["height"]*$(window).height()):p.option["height"];
p.option["height"]=p.option["height"]>$(window).height()-20?$(window).height()-20:p.option["height"];
p.option["height"]=p.option["minheight"]<p.option["height"]?p.option["height"]:p.option["minheight"];
nowSize={"width":p.option["groupwidth"],"groupwidth":p.option["groupwidth"],"chatwidth":0,"userwidth":0,"infowidth":0};
var defaulttop=Math.floor(($(window).height()-p.option["height"])/2);
defaulttop=defaulttop<0?0:defaulttop;
var defaultleft=Math.floor(($(window).width()-p.option["groupwidth"])/2);
defaultleft=defaultleft<0?0:defaultleft;
chatWindow=$('<div id="webChatBox">'+
'<div class="chatTitleBox">'+p.option["title"]+'<span><i class="fa fa-remove"></i></span></div>'+
'<div class="chatGroupWraper">'+
'<div class="chatMainMenuBox"><a id="chatbut_creat" title="\u65b0\u5efa"><i class="fa fa-plus"></i></a><a id="chatbut_reload" title="\u5237\u65b0"><i class="fa fa-refresh"></i></a><dd><input name="groupkey" placeholder="\u8f93\u5165\u7ec4\u540d\u67e5\u8be2"/></dd></div>'+
'<div class="chatGroupContainer">'+
'<ul class="chat_listTemp">'+
'<li  dir="ltr"><h1><span class="newmsg">0</span>'+
'<span id="groupname"></span></h1><p id="lastmsg"></p></li>'+
'</ul>'+
'</div>'+
'</div>'+
'<div class="chatWindowWraper">'+
'<div class="chatMainMenuBox"><p><a id="chatbut_close" title="\u5173\u95ed"><i class="fa fa-chevron-left "></i></a><a id="chatbut_info" title="\u8b66\u60c5"><i class="fa fa-exclamation-triangle"></i></a><a id="chatbut_user" title="\u4eba\u5458"><i class="fa fa-users"></i></a></p><span id="chat_groupname"></span></div>'+
'<div class="chatWindowContainer">'+
'<div class="chatMsgBox">'+
'<div class="chatMsgContainer"></div>'+
'<div class="chatSendBox chatfixfoot"></div>'+
'</div>'+
'<div class="chatUserListBox">'+
'<div class="chatUserListContainer"></div>'+
'<div class="chatFootMenuBox chatfixfoot"><a id="chatbut_add" title="\u52a0\u4eba"><i class="fa fa-user-plus"></i></a><a id="chatbut_remove" title="\u5220\u9664"><i class="fa fa-user-times"></i></a><a id="chatbut_quit" title="\u9000\u51fa"><i class="fa fa-sign-out"></i></a></div>'+
'</div>'+
'<div class="chatInfoBox">'+
'<div class="chatInfoContainer"></div>'+
'<div class="chatFootMenuBox chatfixfoot"><a id="chatbut_reloadinfo" title="\u5237\u65b0"><i class="fa fa-refresh"></i></a><a id="chatbut_detail" title="\u67e5\u770b"><i class="fa fa-file-text"></i></a></div>'+
'</div>'+
'<div class="cl"></div>'+
'</div>'+
'</div>'+
'<div class="cl"></div>'+
'</div>');
$("body").append(chatWindow);
containers["groupWraper"]=chatWindow.find(".chatGroupWraper");
containers["groupContainer"]=chatWindow.find(".chatGroupContainer");
containers["chatWraper"]=chatWindow.find(".chatWindowWraper");
containers["chatContainer"]=containers["chatWraper"].find(".chatWindowContainer");
containers["chatbox"]=containers["chatContainer"].find(".chatMsgBox");
containers["userbox"]=containers["chatContainer"].find(".chatUserListBox");
containers["infobox"]=containers["chatContainer"].find(".chatInfoBox");
containers["menuH"]=36;
containers["footH"]=33;
containers["sendH"]=36;
containers["groupWraper"].css({"float":"left","width":p.option["groupwidth"]+"px"});
containers["chatWraper"].css({"float":"right"});
containers["chatbox"].css({"position":"relative","float":"left"});
containers["userbox"].css({"position":"relative","float":"left"}).hide();
containers["infobox"].css({"position":"relative","float":"right","overflow-x":"hidden","overflow-y":"hidden"}).hide();
containers["groupContainer"].css({"overflow-x":"hidden","overflow-y":"auto"});//.attr("dir","rtl");
containers["groupContainer"].find("ul.chat_listTemp").attr("dir","ltr");
chatWindow.css({"position":"fixed","top":defaulttop+"px","left":defaultleft+"px","min-height":p.option["minheight"],
"max-height":p.option["maxheight"],"z-index":baseIndex});
chatWindow.find(".chatfixfoot").css({"position":"absolute","bottom":"0px","left":"0px","right":"0px"});
containers["chatWraper"].hide();
p.onshow=false;
var dragRsize=$('<div class="dragSizeBox"><a></a></div>');
chatWindow.append(dragRsize);
dragRsize.css({"position":"relative","height":"0px","overflow":"visible"})
.find("a").css({"position":"absolute","top":"-10px","right":"-10px","width":"20px","height":"20px","cursor":"nw-resize"});
resizeDrag=new dragWindowSize(dragRsize.find(">a"),chatWindow);
$(resizeDrag).bind("DRAG_RESIZE",p.resize);
chatWindow.find(".chatMainMenuBox a,.chatFootMenuBox a").bind("click",buttonAction);
chatWindow.find(".chatTitleBox").bind("mousedown",dragWindow);
chatWindow.find(".chatTitleBox span").bind("click",p.hideChat);
chatWindow.find("input[name=groupkey]").bind("change",findGroupByKey);
chatWindow.bind("mousedown",p.toFront);
AddDetail=new chatInfoDetail(chatWindow.find(".chatInfoContainer"),p.option["detailPort"],p.option["detailTemplete"]);
AddDetail.install();
GroupList=new ListView(chatWindow.find(".chatGroupContainer ul.chat_listTemp"));
GroupList.option["classStyle"]["checked"]="nowid";
GroupList.option["enableCheck"]=true;
$(GroupList).unbind("LI_CLICKED").bind("LI_CLICKED",function(e,lidata){
var groupid=lidata["data"]["groupid"];
p.openGroup(groupid,true);
})
var ListFormater=function(oneRow){
oneRow["lastmsg"]=oneRow["lastmsg"]?oneRow["lastmsg"]:"";
oneRow["lastmsg"]=oneRow["jingqing"]?'[ <a rel="'+oneRow["jingqing"]+'" class="showJingqing red" title="'+oneRow["jingqing"]+'">\u8b66\u60c5 '+oneRow["jingqing"].substr(oneRow["jingqing"].length-4,oneRow["jingqing"].length)+'</a>  ]'+oneRow["lastmsg"]:"[ \u666e\u901a\u4f1a\u8bdd ] "+oneRow["lastmsg"];
return oneRow;
}
var ActionFormater=function(RowObj){
RowObj.RightPopMenu(function(){
return GroupRightMenu(RowObj.data("data"))
});
RowObj.find("a.showJingqing").bind("click",function(){
var jingqing=$(this).attr("rel");
$(p).trigger("CHAT_ADDINFO",{"jingqing":jingqing});
return false;
})
}
resizeThis(); 
chatWindow.hide();
chatOn=false;
if(p.option["alarmSound"]){
SOUND=new SoundPlayer(p.option["alarmSound"]);
}
GroupList.load(p.option["groupPort"],{"event":"getGroupList","content":{"condition":{}},"extend":{}},ListFormater,ActionFormater); 
ChatObj=new ChatBox(chatWindow.find(".chatMsgContainer"),chatWindow.find(".chatUserListContainer"));
ChatObj.maxmsg=p.option["maxmsg"];
$(ChatObj).bind("CREAT_GROUP",creatGroup)
.bind("DELETE_GROUP",deleteGroup)
.bind("OPEN_GROUP",loadGroup)
.bind("CHANGE_GROUP",changeToGroup)
.bind("CHAT_VOICE",function(e,VAR){
$(p).trigger("CHAT_VOICE",VAR);
}).bind("CHAT_VIDEO",function(e,VAR){
$(p).trigger("CHAT_VIDEO",VAR);
});
MsgInput=new ChatInput(chatWindow.find(".chatSendBox"));
MsgInput.uploadUrl=p.option["uploadurl"];
$(MsgInput).bind("SEND_MSG",function(e,msgJson){
p.sendMsg(msgJson["msg"],msgJson["add"]);
}).bind("ERROR",function(e,msg){
showMsage(msg["msg"],2000);	
}).bind("UPLOAD_START",function(){
$.loading(300000);
}).bind("UPLOAD_END",function(){
$.loaded();
})
Messager=new ChatCore(p.option);
$(Messager).bind("ERROR",function(e,msg){
showMsage(msg["msg"],2000);	
}).bind("GOT_MESSAGE",function(e,msgjson){
p.gotMsg(msgjson["msg"]);
}).bind("GOT_USERLIST",function(e,listjson){
p.gotList(listjson["list"]);
}).bind("GOT_GROUP",function(e,listjson){
p.gotGroup(listjson["groups"]);
}).bind("UPDATE_GROUPNAME",updateGroupName)
Messager.install();
containers["groupContainer"].bind("mousewheel",delWheel);
containers["chatWraper"].bind("mousewheel",delWheel);
}
this.toFront=function(){
if(!chatWindow){
p.destroy();
return;
}
$("body").find("."+frontClass).css("z-index",baseIndex).removeClass(frontClass);
chatWindow.css("z-index",activeIndex).addClass(frontClass);
}
function GroupRightMenu(lidata){
var menuObj=$('<div class="chatlistRightMenu">'
+(lidata["iscreator"]&&!lidata["disabled"]?'<label><input name="newGroupName" value="'+lidata["groupname"]+'"/></label>':'')
+'<div>'
+(lidata["iscreator"]&&!lidata["disabled"]?'<a id="chatbut_rename"><i class="fa fa-pencil"></i>\u6539\u540d</a>':'')
+(lidata["disabled"]?'<a id="chatbut_delete"><i class="fa fa-remove"></i>\u5220\u9664</a>':'<a id="chatbut_quit"><i class="fa fa-sign-out"></i>\u9000\u51fa</a>')
+'<p class="cl"></p></div>'
+'</div>');
lidata["iscreator"]&&!lidata["disabled"]?null:menuObj.width(114).find("a").width(110);
var groupid=lidata["groupid"];
var groupName=lidata["groupname"];
menuObj.find("a").bind("click",function(){
var id=$(this).attr("id");
switch(id){
case "chatbut_delete":
ChatObj.destroyGroup(groupid);
$.destroyRightMenu();
break;
case "chatbut_rename":
var newName=trim(menuObj.find("input[name=newGroupName]").val());
if(newName!==groupName){
Messager.updateGroupName(groupid,newName);
$.destroyRightMenu();
}
break;
case "chatbut_quit":
quitGroup(groupid);
$.destroyRightMenu();
break;
}
}).data("data",lidata);
return menuObj;
}
function findGroupByKey(){
var key=trim($(this).val()+"");
if(key==""){
containers["groupContainer"].find(".selected").removeClass("selected");
return;
}
var groupdata=GroupList.getData();
var have=false;
for(var i=0;i<groupdata.length;i++){
if(groupdata[i]["groupname"].indexOf(key)>-1){
groupdata[i]["liObject"].addClass("selected");
have=true;
}else{
groupdata[i]["liObject"].removeClass("selected");
}}
if(have){
containers["groupContainer"].scrollTo(containers["groupContainer"].find(".selected:eq(0)"),300);
}}
function buttonAction(){
switch($(this).attr("id")){
case "chatbut_creat":
$(p).trigger("CHAT_CREATGROUP");
break;
case "chatbut_reload": 
var nowGid=ChatObj.nowgroupid;
GroupList.reload();
$(GroupList).one("LOADED",function(){
if(!nowGid){return;}
var gli=GroupList.find("groupid",nowGid);
if(gli){
gli.addClass("nowid");	
}
})
break;
case "chatbut_close":
p.showChatWindow(false);
break;
case "chatbut_user":
p.showHideUserList(!$(this).hasClass("opened"));
$(this).hasClass("opened")?$(this).removeClass("opened"):$(this).addClass("opened");
break;
case "chatbut_info":
p.showHideInfoBox(!$(this).hasClass("opened"));
$(this).hasClass("opened")?$(this).removeClass("opened"):$(this).addClass("opened");
break;
case "chatbut_add":
var group=ChatObj.getNowGroup();
$(p).trigger("CHAT_ADDUSER",{"GID":group["groupid"],"groupname":group["groupname"]});
break;
case "chatbut_remove":
delUser();
break;
case "chatbut_detail":
var group=ChatObj.getNowGroup();
$(p).trigger("CHAT_ADDINFO",{"GID":group["groupid"],"groupname":group["groupname"],"jingqing":group["jingqing"]});
break;
case "chatbut_reloadinfo":
AddDetail.reload();
break;
case "chatbut_quit":
quitGroup(ChatObj.nowgroupid);
break;
}}
this.showChatWindow=function(status){
if(p.onshow==status){
return;
}
nowSize["chatwidth"]=status?p.option["chatwidth"]:0;
nowSize["userwidth"]=status&&userOn?p.option["userwidth"]:0;
nowSize["infowidth"]=status&&infoOn?p.option["infowidth"]:0;
status?containers["chatWraper"].show():containers["chatWraper"].hide();
status?containers["groupContainer"].attr("dir","rtl"):containers["groupContainer"].attr("dir","ltr");
resizeThis();
this.onshow=status;
}
this.showHideUserList=function(closed){
nowSize["userwidth"]=!closed?0:p.option["userwidth"];
!closed?containers["userbox"].hide():containers["userbox"].show();
userOn=closed?true:false;
resizeThis();
}
this.showHideInfoBox=function(closed){
nowSize["infowidth"]=!closed?0:p.option["infowidth"];
!closed?containers["infobox"].hide():containers["infobox"].show();
infoOn=closed?true:false;
resizeThis();
}
this.resize=function(e,size){
if(!p.onshow){
nowSize["width"]=p.option["groupwidth"];
nowSize["groupwidth"]=p.option["groupwidth"];
nowSize["chatwidth"]=0;
nowSize["userwidth"]=0;
nowSize["infowidth"]=0;
}else{
size["width"]=size["width"]>$(window).width()?$(window).width():size["width"];
nowSize["chatwidth"]=size["width"]-nowSize["groupwidth"]-nowSize["infowidth"]-nowSize["userwidth"];
nowSize["chatwidth"]=nowSize["chatwidth"]<p.option["chatminwidth"]?p.option["chatminwidth"]:nowSize["chatwidth"];
p.option["chatwidth"]=nowSize["chatwidth"];
}
size["height"]=size["height"]>$(window).height()?$(window).height():size["height"];
p.option["height"]=size["height"];
var maxheight=p.option["maxheight"]?p.option["maxheight"]:$(window).height();
p.option["height"]=(p.option["height"]>maxheight)?maxheight:p.option["height"];
p.option["height"]=(p.option["height"]<p.option["minheight"])?p.option["minheight"]:p.option["height"];
resizeThis();
}
function resizeThis(){
nowSize["width"]=nowSize["chatwidth"]+nowSize["groupwidth"]+nowSize["userwidth"]+nowSize["infowidth"];
chatWindow.width(nowSize["width"]).height(p.option["height"]);
var cH=p.option["height"]-chatWindow.find(".chatTitleBox").outerHeight(true);
containers["groupWraper"].setRealSize(p.option["groupwidth"],cH);
cW=nowSize["width"]-p.option["groupwidth"];
containers["chatWraper"].setRealSize(cW,cH);
containers["groupContainer"].setRealSize(containers["groupWraper"].width(),containers["groupWraper"].height()-containers["menuH"]);
containers["chatContainer"].setRealSize(containers["chatWraper"].width(),containers["chatWraper"].height()-containers["menuH"]);
var chatW=containers["chatContainer"].width()-nowSize["infowidth"]-nowSize["userwidth"];
var chatH=containers["chatContainer"].height();
containers["chatbox"].setRealSize(chatW,chatH);
containers["userbox"].setRealSize(nowSize["userwidth"],chatH);
containers["infobox"].setRealSize(nowSize["infowidth"],chatH);
containers["chatbox"].find(".chatMsgContainer").setRealSize(containers["chatbox"].width(),containers["chatbox"].height()-containers["sendH"]);
containers["userbox"].find(".chatUserListContainer").setRealSize(containers["userbox"].width(),containers["userbox"].height()-containers["footH"]);
containers["infobox"].find(".chatInfoContainer").setRealSize(containers["infobox"].width(),containers["infobox"].height()-containers["footH"]);
if(ChatObj){
ChatObj.resize();
}
AddDetail.resize();
}
function creatGroup(e,groupJson){
var groupli=GroupList.find("groupid",groupJson["groupid"]);
if(groupli){
}else{
GroupList.insert(groupJson,0);
}}
function deleteGroup(e,groupvar){
GroupList.findAndRemove("groupid",groupvar["groupid"]);
if(ChatObj.nowgroupid==groupvar["groupid"]){
p.showChatWindow(false);
}}
function changeToGroup(e,groupvar){
containers["chatWraper"].find("#chat_groupname").html(groupvar["groupname"]);
GroupList.findAndCheck("groupid",groupvar["groupid"],true);
checkButPower();
if(groupvar["group"]["jingqing"]){
AddDetail.load({"jingqing":groupvar["group"]["jingqing"]});
}else{
AddDetail.clear();
}}
this.showChat=function(){
p.toFront();
if(chatOn){return};
chatWindow.show();
$(p).trigger("CHAT_SHOW"); 
chatOn=true;
}
this.hideChat=function(){
if(!chatOn){return};
chatWindow.hide();
$(p).trigger("CHAT_HIDE"); 
chatOn=false;
}
function checkButPower(){
var group=ChatObj.getNowGroup();
if(!group){
return;
}
group["disabled"]?containers["chatWraper"].find("#chatbut_add,#chatbut_remove,#chatbut_quit").hide():containers["chatWraper"].find("#chatbut_add,#chatbut_remove,#chatbut_quit").show();
group["disabled"]?MsgInput.disable(true):MsgInput.disable(false);
group["disabled"]?containers["chatWraper"].find("#chat_groupname").addClass("disabled"):containers["chatWraper"].find("#chat_groupname").removeClass("disabled")
!group["iscreator"] || group["disabled"]?containers["chatWraper"].find("#chatbut_add,#chatbut_remove").hide():containers["chatWraper"].find("#chatbut_add,#chatbut_remove").show();
!group["jingqing"]?containers["chatWraper"].find("#chatbut_detail,#chatbut_reloadinfo").hide():containers["chatWraper"].find("#chatbut_detail,#chatbut_reloadinfo").show();
containers["userbox"].find("li span").removeClass("checked");
}
function quitGroup(groupid){
var group=ChatObj.getGroup(groupid);
if(!group){
group=GroupList.findRowData("groupid",groupid);
}
if(group){
var postInfo={"groupid":groupid,"delroup":group["iscreator"]};
var quitback=function(jsonBack){
group["disabled"]=true;
disableGroup(groupid);
checkButPower();
}
var confirmmsg=group["iscreator"]?"\u9000\u51fa\u540e\u8be5\u4f1a\u8bdd\u5c06\u4f1a\u89e3\u6563\uff0c\u786e\u5b9a\u5417\uff1f":"\u9000\u51fa\u8be5\u4f1a\u8bdd\u4e0d\u518d\u63a5\u6536\u6d88\u606f\uff0c\u786e\u5b9a\u5417\uff1f";
$.confirm(confirmmsg,function(status){
if(status){
Messager.quit(postInfo,quitback);
}
})
}}
function disableGroup(groupid){
var listGroup=GroupList.findRowData("groupid",groupid);
if(listGroup){
listGroup["disabled"]=true;
listGroup["liObject"].addClass("dismissed");
}
var group=ChatObj.getGroup(groupid);
if(group){
group["disabled"]=true;
}}
function chgRenyuan(){
if($(this).hasClass("disabled")){
return;
}
var group=ChatObj.getNowGroup();
if($(this).hasClass("addinfo")){ 
$(p).trigger("CHAT_ADDINFO",{"GID":group["groupid"],"groupname":group["groupname"],"jingqing":group["jingqing"]});
}else if($(this).hasClass("delren")){
delUser();
}else if($(this).hasClass("addren")){
$(p).trigger("CHAT_ADDUSER",{"GID":group["groupid"],"groupname":group["groupname"]});
}}
this.addUserlist=function(inuserlist,groupid){
if(!inuserlist || !groupid){
return;
}
var addback=function(userlist){
ChatObj.addToUserList(userlist,groupid);
}
Messager.addUser(inuserlist,groupid,addback);
}
this.gotList=function(jsonList){
if(!jsonList || jsonList.length<1){return}
for(var i=0;i<jsonList.length;i++){
if(!jsonList[i] || !jsonList[i]["users"] || jsonList[i]["users"].length<1){
}else{
var groupid=jsonList[i]["groupid"];
var userlist=jsonList[i]["users"];
ChatObj.updateUserList(userlist,groupid);
}}}
this.gotGroup=function(groups){
if(!groups || groups.length<1){return}
for(var i=0;i<groups.length;i++){
var groupid=groups[i]["groupid"];
updateGroup(groupid,groups[i]);
}}
function updateGroup(groupid,groupJson){
var group=ChatObj.getGroup(groupid);
if(group){
$.extend(group,groupJson);
}
if(ChatObj.nowgroupid==groupid){
containers["chatWraper"].find("#chat_groupname").html(groupJson["groupname"]);
checkButPower();
}
GroupList.update("groupid",groupid,groupJson,true);
var gli=GroupList.find("groupid",groupid);
if(groupJson["disabled"]){
gli?gli.addClass("dismissed"):null;
}else{
gli?gli.removeClass("dismissed"):null;
}}
function updateGroupName(e,gVar){
var groupid=gVar["groupid"];
var newName=gVar["groupname"];
var group=ChatObj.getGroup(groupid);
if(group){
group["groupname"]=newName;
}
if(ChatObj.nowgroupid==groupid){
containers["chatWraper"].find("#chat_groupname").html(newName);
}
var gli=GroupList.find("groupid",groupid);
lidata=gli.data("data");
lidata["groupname"]=newName;
GroupList.update("groupid",groupid,lidata,true);
}
function delUser(){
var delinfo=ChatObj.prepareDelete();
if(!delinfo){
return;
}
var delback=function(){
ChatObj.deleteUser(delinfo);
}
Messager.delUser(delinfo["delids"],delinfo["groupid"],delback);
}
var onloading;
function loadGroup(e,groupvar){
var toshow=groupvar["open"];
var groupid=groupvar["groupid"];
var oldmsg=groupvar["oldmsg"];
if(onloading && onloading==groupid){ 
return;
}
var groupinfoOk=function(groupJson){
onloading=null;
var msgnum=0;
if(oldmsg){ 
groupJson["msg"]=oldmsg;
msgnum=oldmsg.length;
}
ChatObj.creatGroupObj(groupJson);
if(toshow){
ChatObj.showGroup(groupid);
}
groupid!=ChatObj.nowgroupid?resetGroupTips(groupid,msgnum):null;
}
onloading=groupid;
Messager.LoadGroup(groupid,groupinfoOk);
}
this.openGroup=function(groupid,show){
p.showChat();
p.showChatWindow(true);
MsgInput.focus();
ChatObj.showGroup(groupid);
resetGroupTips(groupid);
}
this.creatGroup=function(groupInfo){
p.showChat();
p.showChatWindow(true);
var groupinfoOk=function(groupJson){
var groupid=groupJson["groupid"];
ChatObj.creatGroupObj(groupJson);
ChatObj.showGroup(groupid);
GroupList.findAndCheck("groupid",groupid,true);
containers["groupContainer"].scrollTo(0,300);
$(p).trigger("CHAT_INSERTGROUP",groupJson);
}
Messager.newGroup(groupInfo,groupinfoOk);
}
this.gotMsg=function(msgs,isoldmsg){
if(!msgs || msgs.length<1){return}
if(!chatOn && !isoldmsg){
$(p).trigger("CHAT_NEW_MSG",{"num":msgs.length}); 
}
var msgGroups={};
for(var i=0;i<msgs.length;i++){
var na="g_"+msgs[i]["groupid"];
if(!msgGroups[na]){
msgGroups[na]=[];
}
msgGroups[na].push(msgs[i]);
}
ChatObj.reciveMsg(msgGroups);
for(var na in msgGroups){
refreshGroupTips(msgGroups[na][0]["groupid"],msgGroups[na].length);
}
if(p.option["sound"] && !msgs[0]["self"] && SOUND && !isoldmsg){
SOUND.play(true);
}
}
function refreshGroupTips(groupid,msgnum){
if(groupid==ChatObj.nowgroupid){
return;
}
var gli=GroupList.find("groupid",groupid);
if(gli){
var numbox=gli.find("span.newmsg");
var num=parseInt(numbox.text()+"");
num=isNaN(num)?0:num;
num+=msgnum;
num=num>99?"99+":num;
numbox.text(num).show();
}}
function resetGroupTips(groupid,num){
var gli=GroupList.find("groupid",groupid); //alert(groupid+"--"+ChatObj.nowgroupid)
num=!num?"":num;
if(gli){
var numbox=gli.find("span.newmsg");
numbox.text(num);
(num=="" || groupid==ChatObj.nowgroupid)?numbox.hide():numbox.show();
}}
this.sendMsg=function(msgstr,addAttrObj){
var group=ChatObj.getNowGroup();
if(!group){return}
if(group["disabled"]){
$.alert("\u4f1a\u8bdd\u7ec4\u5df2\u89e3\u6563");
return;
}
Messager.send(msgstr,group["groupid"],addAttrObj);
}
var nowposwindow;
function dragWindow(e){
e=e?e:window.event;
nowposwindow=[e.clientX,e.clientY];
var nowleft=chatWindow.css("left");
nowleft=parseInt(nowleft.replace("px",""));
nowleft=nowleft?nowleft:0;
var nowtop=chatWindow.css("top");
nowtop=parseInt(nowtop.replace("px",""));
nowtop=nowtop?nowtop:0;
var setDrag=function(e){
e=e?e:window.event;
var tox=nowleft+(e.clientX-nowposwindow[0]);
var toy=nowtop+(e.clientY-nowposwindow[1]);
toy=(toy>0)?toy:0;
chatWindow.css({"left":tox+"px","top":toy+"px"});
}
var stopDrag=function(e){
$(document).unbind("mousemove",setDrag).unbind("mouseup",stopDrag);
}
$(document).bind("mousemove",setDrag).bind("mouseup",stopDrag);
}
this.destroy=function(){
if(Messager){
Messager.destroy();
Messager=null;
}
if(chatWindow){
chatWindow.del();//.empty().remove();
chatWindow=null;
}
if(ChatObj){
ChatObj.destroy();
ChatObj=null;
}}
function showMsage(msg,time){
chatWindow.find("#popShowMessage").stop().del();//.remove();
var msgbox=$('<div id="popShowMessage">'+msg+'</div>')
chatWindow.find(".chatContainer").append(msgbox)	;
msgbox.css({"position":"absolute","bottom":"80px","padding":"8px","left":"15%","width":"70%","text-align":"center","z-index":"9999999","background-color":"#000","color":"#fff","border-radius": "6px","opacity":0.6})
msgbox.hide().fadeIn("fast").delay(time).fadeOut("slow",function(){
chatWindow.find("#popShowMessage").stop().del();//.remove();
}).bind("mousedown",function(){
chatWindow.find("#popShowMessage").stop().del();//.remove();
})
}
function trim(str){
return (str+'').replace(/^\s*|\s*$/g,'');
}
function delWheel(event){
event.stopPropagation();
}
}function ChatCore(option){
var p=this;
this.option=option;
var msgLoader;
var msgTimer;
var uploadObjId="webchatUpload_"+(new Date()).getTime();
var stopListener=false;
this.install=function(){
Loader=new AJAXObj();
Loader.silent=true;
switch(p.option["listener"]){
case "push":
PUSHListener();
break;
case "http":
HTTPListener();//HTTP\u76d1\u542c
break;
}}
function PUSHListener(){
var username =p.option["userName"]||"";
var password = p.option["password"]||"";
var connection = null;
var stockRowIndexes = {};
var connectionFactory = new JmsConnectionFactory(url);
var connectionFuture = connectionFactory.createConnection(username, password, function () {
try {
connection = connectionFuture.getValue();
connection.setExceptionListener = function(e){
$(p).trigger("ERROR",{"errmsg":"\u6d88\u606f\u670d\u52a1\u51fa\u9519"});
}
var session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
var topic = session.createTopic(p.option["topic"]);
var consumer = session.createConsumer(topic);
consumer.setMessageListener(msgdataDeal);
connection.start(function () { /* Started */ });
}
catch (e) {
$(p).trigger("ERROR",{"errmsg":"\u6d88\u606f\u670d\u52a1\u8fde\u63a5\u5931\u8d25"});
}
});
}
function msgdataDeal(message){
if(stopListener){
return;
}
var JsonObj=message.getText();
try{
JsonObj=JSON.parse(JsonObj);
}catch(e){
return;
}
reciveMsg(getResponse(JsonObj)["msg"]);
updateList(getResponse(JsonObj)["userlist"]);
}
this.stop=function(){
if(msgTimer){
clearTimeout(msgTimer);
msgTimer=null;
}
stopListener=true;
}
var failTimes=0;
this.start=function(){
if(p.option["listener"]=="http"){
p.stop();
msgTimer=setTimeout(function(){
var postData=formatPost("msg",{});
$(msgLoader).unbind().one("JSON_LOADED",httpMsgBack).one("SYS_ERROR",function(){
failTimes++;
failTimes=failTimes>600?600:failTimes;
p.start();
});
msgLoader.POSTDATA(p.option["hostPort"],postData,false);
},p.option["timer"]+failTimes*1000)
}
stopListener=false;
}
function HTTPListener(){
if(!p.option["timer"] || !p.option["hostPort"]){
return;
}
msgLoader=new AJAXObj();
msgLoader.silent=true;
if(p.option["timeout"]){
msgLoader.timeout=p.option["timeout"]
}
p.start();
}
function httpMsgBack(e,JsonObj){
failTimes=0;
reciveMsg(getResponse(JsonObj)["msg"]);
updateList(getResponse(JsonObj)["userlist"]);
updateGroup(getResponse(JsonObj)["groups"]);
p.start();
}
function reciveMsg(msg){
if(msg && msg.length>0){
for(var i=0;i<msg.length;i++){
msg[i]["chat"]=formatHtml(msg[i]["chat"]);
}
$(p).trigger("GOT_MESSAGE",{"msg":msg});
}}
function updateList(list){
if(list && list.length>0){
$(p).trigger("GOT_USERLIST",{"list":list});
}}
function updateGroup(groups){
if(groups && groups.length>0){
$(p).trigger("GOT_GROUP",{"groups":groups});
}}
this.send=function(msgstr,groupid,addParam){
addParam=addParam?addParam:{};
var insertMsg=function(bkjson){
var mtime=new Date();
mtime=force2(mtime.getHours())+":"+force2(mtime.getMinutes())+":"+force2(mtime.getSeconds());
var amsg={"groupid":groupid,"self":true,"chattime":mtime,"chat":""+msgstr,"userName":"\u6211"};
$.extend(amsg,addParam);
reciveMsg([amsg]);
}
if(!msgstr){
return
}
var sendMsg={"groupid":groupid,"msg":msgstr};
$.extend(sendMsg,addParam);
var postData=formatPost("send",sendMsg);
post(postData,insertMsg,"\u6d88\u606f\u53d1\u9001\u5931\u8d25");
}
this.quit=function(posinfo,callback){
var postData=formatPost("quit",posinfo);
post(postData,callback,"\u9000\u51fa\u5931\u8d25");
}
this.addUser=function(inuserlist,groupid,callback){
if(!inuserlist || inuserlist.length<1){
return;
}
var addback=function(bkjson){
var userlist=bkjson["userlist"];
callback(userlist);
if(bkjson["groupname"]){
$(p).trigger("UPDATE_GROUPNAME",{"groupname":bkjson["groupname"],"groupid":groupid})
}}
var postData=formatPost("addren",{"users":inuserlist,"groupid":groupid});	//userlist
post(postData,addback,"\u6dfb\u52a0\u4eba\u5458\u5931\u8d25");
}
this.delUser=function(guids,groupid,callback){
var postData=formatPost("delren",{"guid":guids,"groupid":groupid});
post(postData,callback,"\u7ec4\u4eba\u5458\u5220\u9664\u5931\u8d25");
}
this.newGroup=function(groupInfo,callback){
var postData=formatPost("newgroup",groupInfo);
post(postData,callback,"\u521b\u5efa\u7ec4\u5931\u8d25");
}
this.LoadGroup=function(groupId,callback){
var postData=formatPost("getgroup",{"groupid":groupId});
post(postData,callback,"\u7ec4\u4fe1\u606f\u52a0\u8f7d\u5931\u8d25");
}
this.updateGroupName=function(groupid,newName){
var postData=formatPost("renamegroup",{"groupid":groupid,"newgroupname":newName});
post(postData,function(e,bkJson){
$(p).trigger("UPDATE_GROUPNAME",{"groupname":newName,"groupid":groupid})
},"\u7ec4\u540d\u79f0\u66f4\u65b0\u5931\u8d25");
}
function post(postData,success,failmsg){
var postor=new AJAXObj();
$(postor).unbind().one("JSON_LOADED",function(e,backJson){
postor.destroy();
postor=null;
var backJson=getResponse(backJson);
success(backJson);
}).one("SYS_ERROR",function(){
postor.destroy();
postor=null;
$(p).trigger("ERROR",{"errmsg":failmsg});
});
postor.POSTDATA(p.option["hostPort"],postData);
}
function formatPost(eventname,data,extend){
var postdata=$.extend({},p.option["param"]||{},data);
return {"event":eventname,"content":{"condition":postdata},"extend":(extend||{})};
}
function getResponse(rsJson){
return rsJson["value"];
}
function force2(str){
str+="";
return str.length>1?str:"0"+str;
}
this.destroy=function(){
if(msgTimer){
clearTimeout(msgTimer);
msgTimer=null;
}
if(Loader){
$(Loader).unbind();
Loader=null;
}
if(msgLoader){
$(msgLoader).unbind();
msgLoader=null;
}}}
function ChatBox(chatContainer,listContainer){//container
var p=this;
var groups=[];
this.nowgroupid;
this.maxmsg=100;
this.install=function(){
chatContainer.css({"position":"relative"});
}
this.resize=function(){
listContainer.find(".chatuserlist").height(listContainer.height());
chatContainer.find(".chatmsglist").height(chatContainer.height());
}
this.getGroup=function(groupid){
for(var i=0;i<groups.length;i++){
if(groups[i]["groupid"]==groupid){
return groups[i];
break;
}}
return null;
}
this.getNowGroup=function(){
return p.getGroup(p.nowgroupid);
}
this.destroy=function(){
groups.splice(0,groups.length);
groups=null;
}
this.creatGroupObj=function(groupJson){
var group=p.getGroup(groupJson["groupid"]);
if(group){ 
return group;
}
group={"creatorid":groupJson["userId"],"chatbox":null,"list":null,"iscreator":groupJson["iscreator"]};
$.extend(group,groupJson);
group["list"]=$('<div class="chatuserlist"></div>');
listContainer.append(group["list"]);
group["list"].hide();
group["chatbox"]=$('<div class="chatmsglist"></div>');
chatContainer.append(group["chatbox"]);
group["chatbox"].hide();
groups.push(group);
group["list"].height(group["list"].parent().height());
group["chatbox"].height(group["list"].parent().height());
p.updateUserList(groupJson["userlist"],groupJson["groupid"]);
var oldmsg=groupJson["msg"];  //alert(oldmsg)
p.reciveMsg({"g_oldmsg":oldmsg});
$(p).trigger("CREAT_GROUP",groupJson);
return group;
}
this.destroyGroup=function(groupid){
var group=p.getGroup(groupid);
if(!group){
$(p).trigger("DELETE_GROUP",{"groupid":groupid});
return;
}
group["chatbox"].del();//.remove();
group["chatbox"]=null;
group["list"].del();//.remove();
group["list"]=null;
for(var i=0;i<groups.length;i++){
if(groups[i]["groupid"]==groupid){
groups[i]=null;
groups.splice(i,1);
break;
}}
$(p).trigger("DELETE_GROUP",{"groupid":groupid});
}
this.showGroup=function(groupid){
if(!groupid){
return;
}
var group=p.getGroup(groupid);
if(group){
chatContainer.find(">div").hide();
listContainer.find(">div").hide();
group["chatbox"].show();
group["list"].show();
p.nowgroupid=groupid;
$(p).trigger("CHANGE_GROUP",{"groupid":groupid,"groupname":group["groupname"],"disabled":group["disabled"],"group":group});
}else{
$(p).trigger("OPEN_GROUP",{"groupid":groupid,"open":true});	//---------------\u6253\u5f00\u7ec4
}}
function showchatWindow(group){
chatWindow.find(".chatMsgBox>div").hide();
group["chatbox"].show();
}
this.updateUserList=function(userlist,groupid){
var group=p.getGroup(groupid);
if(!group){return}
if(userlist.length<1){
return;
}
group["list"].find("ul>li").del();//.remove();
appendUserToList(userlist,group["list"],group);
}
function appendUserToList(userlist,listBox,group){
for(var i=0;i<userlist.length;i++){
var partId=userlist[i]["orgCode"];
partId=partId?partId:"othergroup";
var part=listBox.find("#"+partId);
if(part.length==0){
part=$('<div class="userpart" id="'+partId+'"><h1><span></span>'+(userlist[i]["orgName"]||"\u5176\u4ed6")+'</h1><ul></ul></div>');
listBox.append(part);
part.find("h1").bind("click",showHideUser);
part.find(">ul").hide();
}
var user=$('<li rel="'+userlist[i]["userId"]+'">'+userlist[i]["userName"]+'</li>');
part.find("ul").append(user);
if(group["iscreator"] && userlist[i]["userId"]!=group["creatorid"]){
user.prepend($("<span></span>"));
user.find("span").bind("click",checkUser);
}}
resetUserNum(listBox);
}
function resetUserNum(listBox){
listBox.find(">div.userpart").each(function(){
var unum=$(this).find(">ul>li").length;
if(unum==0){
$(this).del();//.remove();
}else{
$(this).find(">h1>span").text(unum+"");
}
})
}
function showHideUser(){
var part=$(this).parent();
if($(this).hasClass("open")){
part.find(">ul").hide();
$(this).removeClass("open");
}else{
part.find(">ul").show();
$(this).addClass("open");
}}
this.addToUserList=function(inuserlist,groupid){
var group=p.getGroup(groupid);
if(!group){return}
var userlist=[];
for(var i=0;i<inuserlist.length;i++){  
if(!inList(inuserlist[i],group)){
userlist.push(inuserlist[i]);
}}
if(userlist.length<1){
return;
}
appendUserToList(userlist,group["list"],group);
}
function inList(user,group){
var userLi=group["list"].find("li[rel="+user["userId"]+"]");
if(userLi.length>0 && userLi.eq(0).text()==user["userName"]){
return true;
}
return false;
}
this.prepareDelete=function(){
var group=p.getGroup(p.nowgroupid);
var guid=[];//pobj.attr("rel");
group["list"].find("li").each(function(){
if($(this).find(">span").hasClass("checked")){
guid.push($(this).attr("rel"));
}
});
if(guid.length<1){
return;
}
if((group["list"].find("li").length-guid.length)<2){
$.alert("\u4e00\u4e2a\u4f1a\u8bdd\u81f3\u5c11\u6709\u4e24\u4eba\u53c2\u4e0e")
return null;
}
return {"delids":guid,"groupid":p.nowgroupid}
}
this.deleteUser=function(delinfo){
var guid=delinfo["delids"];
var group=p.getGroup(delinfo["groupid"]);
for(var i=0;i<guid.length;i++){
group["list"].find("li[rel="+guid[i]+"]").del();//.unbind().remove();
}
resetUserNum(group["list"]);
}
function checkUser(){
$(this).hasClass("checked")?$(this).removeClass("checked"):$(this).addClass("checked");
}
this.reciveMsg=function(msgGroups){
if(!msgGroups){return}
for(var na in msgGroups){
if(msgGroups[na]){
var groupid=msgGroups[na][0]["groupid"];
var group=p.getGroup(groupid);
if(group){ 
for(var i=0;i<msgGroups[na].length;i++){
refreshGroup(groupid,msgGroups[na][i],(i==msgGroups[na].length-1)); 
}
}else{ 
$(p).trigger("OPEN_GROUP",{"groupid":groupid,"open":false,"oldmsg":msgGroups[na]});	//---------------\u6253\u5f00\u7ec4
}}}}
function refreshGroup(groupid,amsg,clearGt){
var group=p.getGroup(groupid);
var userScroll;
var lastpp=group["chatbox"].find(">div.msgOutBox:last");
var nowpos=(lastpp.length>0)?Math.floor(lastpp.position().top+lastpp.outerHeight(true)-group["chatbox"].height()):0;
userScroll=(nowpos>60);
var msg=creatMsg(amsg);
group["chatbox"].append(msg);
if(clearGt){
var delcount=group["chatbox"].find(">div").length-p.maxmsg;
delcount>0?group["chatbox"].find(">div:lt("+delcount+")").del():null;
}
if(!userScroll && groupid==p.nowgroupid){
setTimeout(function(){group["chatbox"].scrollTo(msg,300);},500);
}else if(userScroll  && groupid==p.nowgroupid){
var msgtip=group["chatbox"].find(">dd.msgtip");
if(msgtip.length==0){
msgtip=$('<dd class="msgtip"><p>\u6709\u65b0\u6d88\u606f</p></dd>');
chatContainer.append(msgtip);
group["chatbox"].one("scroll",clearMsgTips);
msgtip.css({"position":"absolute","right":"28px","bottom":"2px","z-index":999});
msgtip.hide().fadeIn("slow");
}
msgtip.unbind().one("click",function(){
group["chatbox"].scrollTo(msg,300);
clearMsgTips();
})
}}
function clearMsgTips(){
chatContainer.find(">dd.msgtip").stop(true).del();//.remove();
}
function creatMsg(msg){
if(msg["type"]&&msg["type"]==9){
var msr='<div class="systemMsg">'+msg["chat"]+'</div>';
var popmsg=$(msr);
return popmsg;
}
var media=msg["type"]&&msg["type"]>1?true:false;
var msr;
if(media){
if(msg["type"]==2){ 
msr='<img src="'+msg["chat"]+'" />';
}else if(msg["type"]==3){ 
msr='<a class="mediabut msg_sound" rel="'+msg["chat"]+'">'+(msg["size"]||'\u64ad\u653e\u97f3\u9891')+'</a>';
}else if(msg["type"]==4){  
msr='<a class="mediabut msg_video" rel="'+msg["chat"]+'">'+(msg["size"]||'\u64ad\u653e\u89c6\u9891')+'</a>';
}else if(msg["type"]==5){  
msr='<a class="mediabut msg_file" href="'+msg["chat"]+'" target="_blank">\u4e0b\u8f7d\u6587\u4ef6</a>';
}
}else{ 
msr=msg["chat"]+"";
}
msr='<div class="msgOutBox '+(msg["self"]?'selfmsg':'')+'"><div class="msgPopBox"><h5>'+msg["chattime"]+'</h5>'+
'<h4>'+(msg["orgName"]?'<strong>'+msg["orgName"]+'</strong>':'')+msg["userName"]+': </h4>'+
'<p>'+msr+'</p></div><div class="cl"></div></div>';
var popmsg=$(msr);
popmsg.find("img").ZoomBigPic();
popmsg.find("a.mediabut").bind("click",showMedia);
popmsg.hide().fadeIn("slow");
return popmsg;
}
function showMedia(){
var mediaurl=$(this).attr("rel");
if($(this).hasClass("msg_sound")){
$(p).trigger("CHAT_VOICE",{"url":mediaurl});
}else if($(this).hasClass("msg_video")){
$(p).trigger("CHAT_VIDEO",{"url":mediaurl,"butobj":$(this)});
}else if($(this).hasClass("msg_file")){
}}
this.gotList=function(jsonList){
if(!jsonList || jsonList.length<1){return}
for(var i=0;i<jsonList.length;i++){
if(!jsonList[i] || !jsonList[i]["users"] || jsonList[i]["users"].length<1){
}else{
var groupid=jsonList[i]["groupid"];
var group=p.getGroup(groupid);
if(group){
group["list"].find("ul").empty();
var userlist=jsonList[i]["users"];
p.addToUserList(userlist,groupid);
}}}}
this.install();
}
function ChatInput(container){
var p=this;
var uploadObjId="webchatUpload_"+(new Date()).getTime();
this.uploadUrl;
var input;
this.install=function(){
container.empty().html('<div style="width:70%;float:left;"><div id="msginput" contenteditable="true"></div></div>'+
'<div style="width:10%;float:left;"><dd><input type="file" name="sendPic" id="'+uploadObjId+'"/></dd></div>'+
'<div style="width:20%;float:right;"><a>\u53d1\u9001</a></div><div class="cl"></div>');
container.find("a").unbind().bind("click",prepareSend);
container.find("#msginput").unbind().bind("paste",delInputHtml);
container.find("input[name=sendPic]").unbind().bind("change",sendPhoto);
input=container.find("#msginput");
input.unbind("keydown",keyDownSend).bind("keydown",keyDownSend);
}
this.disable=function(status){
if(status){
input.attr("contenteditable",false).addClass("disabled");
container.find("a").unbind();
input.unbind("keydown",keyDownSend);
container.find("input[name=sendPic]").attr("disabled",true);
}else{
input.attr("contenteditable",true).removeClass("disabled");
container.find("a").unbind().bind("click",prepareSend);
input.unbind("keydown",keyDownSend).bind("keydown",keyDownSend);
container.find("input[name=sendPic]").attr("disabled",false);
}}
function keyDownSend(event){
if(event.ctrlKey && event.keyCode==13){
prepareSend();
}}
this.focus=function(){
container.find("#msginput").get(0).focus();
}
function prepareSend(){
if(trim(input.text())==""){
input.html("");
return;
}
input.attr("contenteditable",false);
var msg=	trim(input.html());
msg=clearHtml(msg);
if(msg!=""){
$(p).trigger("SEND_MSG",{"msg":msg,"add":null});
}
input.html("");
input.attr("contenteditable",true).get(0).focus();
}
function sendPhoto(){
var uploadInput=$(this);
var oldname=uploadInput.val();
var mtype=oldname.split(".");
mtype=mtype[mtype.length-1];
mtype=mtype.toLowerCase();
switch(mtype){
case "jpg":
case "jpeg":
case "png":
case "gif":
case "bmp":
mtype=2;
break;
case "mp3":
case "wav":
mtype=3;
break;
case "flv":
case "f4v":
case "mp4":
mtype=4;
break;
default:
mtype=5;
break;
}
var uperror=function(msg){
$(p).trigger("UPLOAD_END");
$(p).trigger("ERROR",{"msg":"\u4e0a\u4f20\u5931\u8d25"+(msg||"")});
bindAction(true);
}
var upok=function(jsonObj){
if(jsonObj["head"]["code"]==1){
var fname=jsonObj["value"]["filename"];
$(p).trigger("UPLOAD_END");
$(p).trigger("SEND_MSG",{"msg":fname,"add":$.extend({"type":mtype,"size":"PLAY"},jsonObj["value"])});
}else{
uperror(jsonObj["head"]["message"]);
}
bindAction(true);
}
var startUpload=function(){
bindAction(false);
$.ajaxFileUpload ({
url:p.uploadUrl,
secureuri:false,
fileElementId:uploadObjId,
dataType:"json",
success:upok,
error:uperror
})
}
$(p).trigger("UPLOAD_START");
startUpload();
}
function bindAction(type){
if(type){
container.find("input[name=sendPic]").show().unbind().val("").bind("change",sendPhoto);
}else{
container.find("input[name=sendPic]").hide();
}}
this.install();
}
function chatInfoDetail(container,hostport,templeteUrl){
var p=this;
var templete;
var content;
var Loader;
var wraper;
var nowcondition;
this.install=function(){
if(!templeteUrl || !hostport){
$.error("\u8bf7\u68c0\u67e5\u6a21\u677f\u914d\u7f6e");
return;
}
LoadHtml(templeteUrl,{},function(e,htmlstr){
templete=htmlstr;
})
wraper=$('<div></div>');
container.empty().append(wraper);
wraper.css({"overflow-x":"hidden","overflow-y":"auto"});
p.resize();
}
this.load=function(condition){
nowcondition=condition;
p.reload();
}
this.reload=function(){
if(Loader){
Loader.destroy();
Loader=null;
}
Loader=new AJAXObj();
$(Loader).bind("JSON_LOADED",function(e,backJson){
showContent(backJson["value"]);
}).bind("SYS_ERROR",p.clear);
Loader.POSTDATA(hostport,{"event":"chatDetail","content":{"condition":nowcondition},"extend":{}});
}
this.resize=function(){
wraper.setRealSize(null,container.height());
}
this.clear=function(){
wraper.empty();
container.addClass("noContent");
}
function showContent(bkJson){
wraper.empty();
container.removeClass("noContent");
if(!templete){
$.error("\u8bf7\u68c0\u67e5\u6a21\u677f");
return;
}
var dtContent=$(templete);
wraper.append(dtContent);
dtContent.bindJsonData(bkJson);
}
}function swfSocket(container,swfpath){
this.config={
"swffile":"dataExc.swf",
"bground":"0xffffff"
};
var swfContainer;
var swfobj;
var p=this;
var objname;
var swfid;
var socketHost;
var socketPort;
var installed=false;
var connecting=false;
var connectTime=0;
var maxtest=10;
this.onConnect=false;
this.install=function(Host,Port){
socketHost=Host;
socketPort=Port;
if(swfid) {
swfobj=p.getswf(swfid);///
if(swfobj){
swfobj.swfAction("connetct");
return;
}}
objname=getObjectName(this)||"SWFSOCKET";
if(!objname){
console.log("swfClass is undefined!");
return;
}
swfid="SwfSocket_"+objname+"_"+(new Date()).getTime()+"_"+Math.floor(Math.random()*1000);
creatSwfObj(swfid);
swfobj=p.getswf(swfid);
}
this.close=function(){
connecting=false;
connectTime=0;
p.onConnect=false;
if(swfobj){
swfobj.swfAction("close");
return;
}
if(swfid) {
swfobj=p.getswf(swfid);///
if(swfobj){
try{
swfobj.swfAction("close");
}catch(e){
}}}
}
this.destroy=function(){
connecting=false;
connectTime=0;
if(swfid) {
swfobj=p.getswf(swfid);///
if(swfobj){
try{
swfobj.swfAction("destroy");
swfobj.clear();
swfobj.remove();
swfobj=null;
}catch(e){
}}}
if(swfContainer){
swfContainer.clear();
swfContainer.remove();
swfContainer=null;
}
if(container){
container.empty();
}
p.onConnect=false;
}
function creatSwfObj(swfid){
if(container){
container.clear();
container.empty();
}
swfContainer=$('<div id="'+swfid+'" class="fm_swfSocket"></div>');
container.append(swfContainer);
swfobject.embedSWF(swfpath+p.config["swffile"],swfid,"100%","100%","10.2.0",swfpath+"expressInstall.swf",{"swfid":objname},{"quality":"high"});
}
this.connect=function(){
p.onConnect=false;
if(swfobj){
swfobj.swfAction("connetct");
return;
}
if(swfid) {
swfobj=p.getswf(swfid);//
if(swfobj){
try{
swfobj.swfAction("connetct");
}catch(e){
}}}}
this.log=function(msg){
console.log(msg);
}
this.send=function(msg){
if(!p.onConnect){
$.message("Socket\u53d1\u9001\u5931\u8d25\u3002",2000);
return;
}
if(typeof msg=="object"){
msg=JSON.stringify(msg);
}
if(swfobj){
swfobj.swfAction("send",msg);
return;
}
if(swfid) {
swfobj=p.getswf(swfid);///
if(swfobj){
swfobj.swfAction("send",msg);
}}}
this.recieve=function(event,msg){
switch(event){
case "SOCKET_CONNECTED":
$(p).trigger("SOCKET_CONNECTED");
p.onConnect=true;
break;
case "SOCKET_FAIL":
case "CONNECT_ERROR":
if(p.onConnect){
p.onConnect=false;
$.confirm("Socket\u8fde\u63a5\u5931\u8d25\uff0c\u662f\u5426\u91cd\u65b0\u8fde\u63a5",function(type){
if(type){
connectTime=0;
p.connect();
}
});
return;
}else{
p.onConnect=false;
if(connectTime<maxtest){
connectTime++
p.connect();
return;
}else{
connectTime=0;
}}
case "SECURTY_ERROR":
p.onConnect=false;
$.confirm("Socket\u8fde\u63a5\u5931\u8d25\uff0c\u662f\u5426\u91cd\u65b0\u8fde\u63a5",function(type){
if(type){
connectTime=0;
p.connect();
}
});
break;
case "SOCKET_SEND_FAIL":
$.message("Socket\u53d1\u9001\u5931\u8d25\u3002",2000);
break;
case "GETDATA_ERROR":
$.message("Socket\u63a5\u6536\u6570\u636e\u9519\u8bef\u3002",2000);
break;
case "CONNECT_BREAK":
p.onConnect=false;
$(p).trigger("SOCKET_CLOSED");
$.confirm("Socket\u8fde\u63a5\u4e2d\u65ad\uff0c\u662f\u5426\u91cd\u65b0\u8fde\u63a5",function(type){
if(type){
connectTime=0;
p.connect();
}
});
break;
case "SWF_INSTALLED":
connectTime=0;
p.connect();
break;
case "SOCKET_RECIEVE":
try{
var bkJson=JSON.parse(msg);
$(p).trigger("SOCKET_DATA",{"data":bkJson});
}catch(e){
console.log("JOSN\u683c\u5f0f\u4e0d\u6b63\u786e",msg);
}
break;
}}
this.getswf=function(movieName){
if (navigator.appName.indexOf("Microsoft") != -1) {
return window[movieName];
} else {
return document[movieName];
}}
this.loadSwfStatus=function(id){
installed=true;
$(p).trigger("SWF_INSTALLED");
return '{"host":"'+socketHost+'","port":'+socketPort+'}';
}
function getObjectClass(obj) {
if (typeof obj != "object" || obj === null){
return false;
}else {
return /(\w+)\(/.exec(obj.constructor.toString())[1];
}}}
(function($){
$.fn.VideoPlayer=function(){
$(this).each(function(){
var playBox=$('<div class="fm_videoBox"></div>');
$(this).after(playBox).hide().addClass("fm_leaveit");
playBox.creatVideoPlayer($(this));
})
}
$.fn.creatVideoPlayer=function(mp4Input){
var container=$(this);
var option=mp4Input.dataOptions();
var showPlayer=function(){
var poption=$(this).dataOptions();
if(!VIDEOPLAYER){
VIDEOPLAYER=new playFlvVideo((swfPath||framePos+"frame/"));//swf\u6587\u4ef6\u4f4d\u7f6e\u76f8\u5bf9\u5f53\u524d\u9875\u7684
}
$.extend(VIDEOPLAYER.option,poption);
VIDEOPLAYER.play(poption["url"],$(this));
}
var refreshbuts=function(){
container.empty();
var mp3s=($(mp4Input).is("input"))?mp4Input.val():mp4Input.text();
if(!mp3s) return;
mp3s=mp3s.split(",");
for(var i=0;i<mp3s.length;i++){
var ploption=$.extend({},option,{"url":mp3s[i]});
ploption=JSON.stringify(ploption);
ploption=ploption.replace(/\"/g,"\'");
var playbut=$('<a class="playbut but-small but-greenlight" data-option="'+ploption+'"><i class="fa fa-play"></i>\u64ad\u653e\u89c6\u9891</a>');
container.append(playbut);
playbut.bind("click",showPlayer);
}}
refreshbuts();
if($(mp4Input).is("input")){
mp4Input.bind("change",refreshbuts);
}}
$.fn.Mp3Player=function(){
$(this).each(function(){
var playBox=$('<div class="fm_voiceBox"></div>');
$(this).after(playBox).hide().addClass("fm_leaveit");
playBox.creatMp3Player($(this));
})
}
$.fn.creatMp3Player=function(mp3Input){
var baseIndex=ZINDEX["sound"];
var container=$(this);
var option=mp3Input.dataOptions();
var dragobj;
var destroy=function(){
if(dragobj){
dragobj.destroy();
dragobj=null;
}
var player=$(".jQueryMp3Player");
if(player.length>0){
try{
palyer.find(".jp-jplayer").jPlayer("destroy");
}catch(e){
}
player.del();//.remove();
player=null;
}}
var showPlayer=function(){
destroy();
var option=$(this).dataOptions();
var pid="player_"+(new Date()).getTime()+Math.floor(Math.random()*100000);
player=$('<div class="jQueryMp3Player"><div class="playertitle"><a><i class="fa fa-remove"></i>\u5173\u95ed</a></div>'
+'<div id="'+pid+'" class="jp-jplayer"></div>'+
'<div id="jp_container_1" class="jp-audio">'+
'<div class="jp-type-single">'+
'<div class="jp-gui jp-interface">'+
'<ul class="jp-controls">'+
'<li><a href="javascript:;" class="jp-play" tabindex="1">play</a></li>'+
'<li><a href="javascript:;" class="jp-pause" tabindex="1">pause</a></li>'+
'<li><a href="javascript:;" class="jp-stop" tabindex="1">stop</a></li>'+
'<li><a href="javascript:;" class="jp-mute" tabindex="1" title="mute">mute</a></li>'+
'<li><a href="javascript:;" class="jp-unmute" tabindex="1" title="unmute">unmute</a></li>'+
'<li><a href="javascript:;" class="jp-volume-max" tabindex="1" title="max volume">max volume</a></li>'+
'</ul>'+
'<div class="jp-progress">'+
'<div class="jp-seek-bar">'+
'<div class="jp-play-bar"></div>'+
'</div>'+
'</div>'+
'<div class="jp-volume-bar">'+
'<div class="jp-volume-bar-value"></div>'+
'</div>'+
'<div class="jp-time-holder">'+
'<div class="jp-current-time"></div>'+
'<div class="jp-duration"></div>'+
'<ul class="jp-toggles">'+
'<li><a href="javascript:;" class="jp-repeat" tabindex="1" title="repeat">repeat</a></li>'+
'<li><a href="javascript:;" class="jp-repeat-off" tabindex="1" title="repeat off">repeat off</a></li>'+
'</ul>'+
'</div>'+
'</div>'+
'<div class="jp-no-solution">'+
'<span>Update Required</span>'+
'To play the media you will need to either update your browser to a recent version or update your <a href="http://get.adobe.com/flashplayer/" target="_blank">Flash plugin</a>.'+
'</div>'+
'</div>'+
'</div></div>');
$("body").append(player);
player.css({"position":"fixed","z-index":baseIndex});
dragobj=new dragDivObj();
dragobj.install(player.find(".playertitle"),player);
player.centerInWindow();
player.find("#"+pid).jPlayer({
ready: function(){
$(this).jPlayer("setMedia", {
mp3:option["url"],  //"test/m.mp3"
autoPlay:true
}).jPlayer("play");
},
swfPath: framePos+"jPlayer/js", 
supplied: "mp3",
wmode: "window",
smoothPlayBar: true,
keyEnabled: true
});
player.find(".playertitle a").unbind().bind("click",destroy);
}
var refreshbuts=function(){
container.empty();
var mp3s=($(mp3Input).is("input"))?mp3Input.val():mp3Input.text();
if(!mp3s) return;
mp3s=mp3s.split(",");
for(var i=0;i<mp3s.length;i++){
var playbut=$('<a class="playbut but-small but-greenlight" data-option="{\'url\':\''+mp3s[i]+'\'}"><i class="fa fa-volume-up"></i>\u64ad\u653e\u97f3\u9891</a>');
container.append(playbut);
playbut.bind("click",showPlayer);
}}
refreshbuts();
if($(mp3Input).is("input")){
mp3Input.bind("change",refreshbuts);
}}
})(jQuery)
function PlaySound(mp3url,autopaly,swfRoot){
var p=this;
var player;
var dragobj;
var baseIndex=ZINDEX["sound"];
this.Play=function(){
p.destroy();
autopaly=autopaly==false?false:true;
var pid="player_"+(new Date()).getTime()+Math.floor(Math.random()*100000);
player=$('<div class="jQueryMp3Player"><div class="playertitle"><a><i class="fa fa-remove"></i>\u5173\u95ed</a></div>'
+'<div id="'+pid+'" class="jp-jplayer"></div>'+
'<div id="jp_container_1" class="jp-audio">'+
'<div class="jp-type-single">'+
'<div class="jp-gui jp-interface">'+
'<ul class="jp-controls">'+
'<li><a href="javascript:;" class="jp-play" tabindex="1">play</a></li>'+
'<li><a href="javascript:;" class="jp-pause" tabindex="1">pause</a></li>'+
'<li><a href="javascript:;" class="jp-stop" tabindex="1">stop</a></li>'+
'<li><a href="javascript:;" class="jp-mute" tabindex="1" title="mute">mute</a></li>'+
'<li><a href="javascript:;" class="jp-unmute" tabindex="1" title="unmute">unmute</a></li>'+
'<li><a href="javascript:;" class="jp-volume-max" tabindex="1" title="max volume">max volume</a></li>'+
'</ul>'+
'<div class="jp-progress">'+
'<div class="jp-seek-bar">'+
'<div class="jp-play-bar"></div>'+
'</div>'+
'</div>'+
'<div class="jp-volume-bar">'+
'<div class="jp-volume-bar-value"></div>'+
'</div>'+
'<div class="jp-time-holder">'+
'<div class="jp-current-time"></div>'+
'<div class="jp-duration"></div>'+
'<ul class="jp-toggles">'+
'<li><a href="javascript:;" class="jp-repeat" tabindex="1" title="repeat">repeat</a></li>'+
'<li><a href="javascript:;" class="jp-repeat-off" tabindex="1" title="repeat off">repeat off</a></li>'+
'</ul>'+
'</div>'+
'</div>'+
'<div class="jp-no-solution">'+
'<span>Update Required</span>'+
'To play the media you will need to either update your browser to a recent version or update your <a href="http://get.adobe.com/flashplayer/" target="_blank">Flash plugin</a>.'+
'</div>'+
'</div>'+
'</div></div>');
$("body").append(player);
player.css({"position":"fixed","z-index":baseIndex});
dragobj=new dragDivObj();
dragobj.install(player.find(".playertitle"),player);
player.centerInWindow();
player.find("#"+pid).jPlayer({
ready: function(){
$(this).jPlayer("setMedia", {
mp3:mp3url,  //"test/m.mp3"
autoPlay:autopaly
}).jPlayer("play");
},
swfPath: swfRoot+"jPlayer/js", 
supplied: "mp3",
wmode: "window",
smoothPlayBar: true,
keyEnabled: true
});
player.find(".playertitle a").unbind().bind("click",p.destroy);
}
this.destroy=function(){
if(dragobj){
dragobj.destroy();
dragobj=null;
}
var player=$(".jQueryMp3Player");
if(player.length>0){
try{
palyer.find(".jp-jplayer").jPlayer("destroy");
}catch(e){
}
player.del();//.remove();
player=null;
}}
this.Play();
}
function SoundPlayer(mp3url){
var p=this;
var enable=true;
var player;
this.install=function(){
player=$('<div></div>');
$("body").append(player);
player.css({"width":"0px","height":"0px","overflow":"hidden","position":"absolute","left":"0px","top":"0px","opacity":0.01});
player.jPlayer({
ready: function(){	  },
swfPath: framePos+"jPlayer/js", 
supplied: "mp3",
wmode: "window",
keyEnabled: false
});
}
this.play=function(playOnce){
if(!enable){
return;
}
player.jPlayer("clearMedia");
player.jPlayer("setMedia", {
mp3:mp3url,  //"test/m.mp3"
autoPlay:true
}).jPlayer("play");
playOnce?null:player.jPlayer("repeat");
}
this.stop=function(){
player.jPlayer("stop");
}
this.enabled=function(){
enable=true;
}
this.disabled=function(){
enable=false;
}
this.install();
}
function FlvPlayer(container,swfpath){
this.config={
"swffile":"flvplayer.swf",
"bground":"0xffffff"
};
var swfContainer;
var swfobj;
var flvUrl="";
var p=this;
var objname;
var swfid;
var isFullScreen=false;
this.Play=function(flvurl){
if(swfid) {
swfobj=p.getswf(swfid);///
if(swfobj){
swfobj.swfAction("playvideo",flvurl);
return;
}}
objname=getObjectName(this)||"FLVPlayer";
if(!objname){
alert("swfClass is undefined!");
return;
}
flvUrl=flvurl;
swfid="PlayerSwf_"+objname+"_"+(new Date()).getTime()+"_"+Math.floor(Math.random()*1000);
creatSwfObj(swfid);
}
this.pause=function(){
swfobj=p.getswf(swfid);
if(swfobj){
swfobj.swfAction("pause");
return;
}
if(swfid) {
swfobj=p.getswf(swfid);///
if(swfobj){
try{
swfobj.swfAction("pause");
}catch(e){
}}}}
this.destroy=function(){
if(swfid) {
swfobj=p.getswf(swfid);///
if(swfobj){
try{
swfobj.swfAction("destroy");
swfobj.clear();
swfobj.remove();
swfobj=null;
}catch(e){
}}}
if(swfContainer){
swfContainer.clear();
swfContainer.remove();
swfContainer=null;
}
if(container){
container.empty();
}}
function creatSwfObj(swfid){
if(container){
container.clear();
container.empty();
}
swfContainer=$('<div id="'+swfid+'" class="fm_flvplayer"></div>');
container.append(swfContainer);
swfobject.embedSWF(swfpath+p.config["swffile"],swfid,"100%","100%","10.2.0",swfpath+"expressInstall.swf",{"swfid":objname},{"quality":"high"});
p.resize();
}
this.getswf=function(movieName){
if (navigator.appName.indexOf("Microsoft") != -1) {
return window[movieName];
} else {
return document[movieName];
}}
this.playerFullScreen=function(type){
isFullScreen=!type;
p.resize();
}
var tmout;
this.resize=function(){
if(tmout){
clearTimeout(tmout);
tmout=null;
}
tmout=setTimeout(resizeDo,200);
}
function resizeDo(){
if(isFullScreen){
container.css({"position":"fixed","top":"0px","left":"0px","bottom":"0px","right":"0px","width":"100%","height":"100%"});
swffit.fit(swfid,$(window).width(),$(window).height(),$(window).width(),$(window).height(),false,false);
}else{
container.css({"position":"","top":"","left":"","bottom":"","right":""});
swffit.fit(swfid,container.width(),container.height(),container.width(),container.height(),false,false);
}}
this.playEnd=function(){
}
this.screenShot=function(src){
var img=$('<img/>');
img.attr("src","data:image/png;base64,"+src);
$(p).trigger("SNAP_SHOT",{"image":img});
}
this.loadSwfStatus=function(id){
return '{"url":"'+flvUrl+'"}';
}
function getObjectClass(obj) {
if (typeof obj != "object" || obj === null)
return false;
else
return /(\w+)\(/.exec(obj.constructor.toString())[1];
}
}var FLVPlayer;
function playFlvVideo(swfurl,zindex){
var p=this;
var playerBox;
var playerWindow;
var isplaying=false;
this.option={"width":640,"height":480,"title":"\u89c6\u9891\u64ad\u653e","minw":120,"minh":90};
var baseIndex=ZINDEX["video"];//ZINDEX["pop"];
var fls = flashChecker(); 
this.play=function(flvUrl,fromobj){
if(!fls.f){
$.alert("\u64ad\u653e\u89c6\u9891\u9700\u8981\u5b89\u88c5 FlashPlayer");
return;
}
if(isplaying){
FLVPlayer.Play(flvUrl);
return;
}
if(!playerWindow){
playerWindow=new popOutWindow(baseIndex);
playerWindow.option=p.option;
}
if(!playerBox){
playerBox=$('<div class="fm_FlvPlayerbox">LOADING...</div>');
}
if(!FLVPlayer){
FLVPlayer=new FlvPlayer(playerBox,swfurl); 
$(FLVPlayer).bind("SNAP_SHOT",showSnapshot)
}
playerWindow.Show(playerBox,null,[fromobj.offset().left-$(window).scrollLeft(),fromobj.offset().top-$(window).scrollTop()]);
isplaying=false;
$(playerWindow).unbind("WINDOW_RESIZE").bind("WINDOW_RESIZE",function(e,sizeobj){
playerBox.setRealSize(sizeobj["width"]-12,sizeobj["height"]-12);
FLVPlayer.resize();
if(!isplaying){
FLVPlayer.Play(flvUrl);
isplaying=true;
}
if(browserIsIE9){
playerBox.setRealSize(sizeobj["width"]-12,sizeobj["height"]-12);
FLVPlayer.resize();
}
}).unbind("WINDOW_BEFORE_CLOSE").one("WINDOW_BEFORE_CLOSE",p.destroy)
.unbind("WINDOW_MINI").bind("WINDOW_MINI",function(){
FLVPlayer.pause();
});
}
function showSnapshot(e,imgVar){
var picBox=$('<div class="snapshot"><div class="relpos"><i class="fa fa-remove"></i></div></div>');
picBox.append(imgVar["image"]);
picBox.css({"z-index":baseIndex+1,"position":"fixed","bottom":"10px","left":"10px"});
picBox.find("i").one("click",function(){
imgVar["image"].del();
imgVar["image"]=null;
picBox.del();
picBox=null;
})
$("body").append(picBox);
}
this.destroy=function(){
if(FLVPlayer){
FLVPlayer.destroy();
FLVPlayer=null;
}
if(playerWindow){
playerWindow.clearContent();
playerWindow=null;
}
if(playerBox){
playerBox.del();
playerBox=null;
}
isplaying=false;
}
}function PortalDesktop(container){
var p=this;
var gridSize={"w":0,"h":0};
this.option={"nh":20,"nv":12,"minz":2,"maxz":997,"gridminw":40,"gridminh":36};
var blocks;
var desktop;
var Drager;
var dragDiv;
var dragTarg;
var checkTarg;
var isEdit=false;
var cookieName="ProtalDesktop"+projectName||"";
var savedPos;
this.install=function(){
var option=container.dataOptions();
$.extend(p.option,option||{});
blocks=container.find(">*");
savedPos=readFromLocal(cookieName);
desktop=$('<div></div>');
desktop.css({"position":"relative","overflow":"hidden"});
desktop.append(blocks);
container.append(desktop);
formatBlockConfig(blocks);
p.resize();
}
function formatBlockConfig(blockdivs){
for(var i=0;i<blockdivs.length;i++){
var block=$(blockdivs[i]);
var id=block.attr("id")||("div"+new Data().getTime());
var boption={};
if(savedPos && id && savedPos[id]){
boption=savedPos[id];
}else{
boption=block.data("size")||block.dataOptions()||{};
boption["w"]=boption["w"]?boption["w"]:1;
boption["h"]=boption["h"]?boption["h"]:1;
boption["y"]=boption["y"]?boption["y"]:0;
boption["x"]=boption["x"]?boption["x"]:0;
boption["z"]=boption["z"]?boption["z"]:p.option["minz"];
boption["blockid"]=boption["blockid"]?boption["blockid"]:id;
boption["blocktype"]=boption["blocktype"]?boption["blocktype"]:"still";
}
block.data("size",boption);
block.css({"position":"absolute","overflow":"hidden","z-index":boption["z"],"display":(boption["hide"]?"none":"block")}).addClass("desktop_block");
boption["classname"]?block.addClass(boption["classname"]):null;
switch(boption["blocktype"]){
case "widget":
block.addClass("fm_outerPage");
block.widget();
break;
case "shortcut":
block.addClass("desktop_shortcut");
block.html('<div><i class="fa fa-rocket"></i></div><p>'+boption["title"]+'</p>').attr("title","\u8df3\u8f6c\u5230:"+boption["title"]);
block.menuButton();
block.find("i").fillFont({"min":12,"max":32});
break;
case "still":
boption["url"]?block.html(boption["url"]):null;
break;
}}
desktop.find(">*").unbind("mousedown").bind("mousedown",blockMouseDown);
if(isEdit){
desktop.find(">*").bind("mousedown",startDrag);
}}
this.resetZIndex=function(){
var zindex=[];
blocks.each(function(){
var block=$(this);
var z=block.css("z-index")||p.option["minz"];
!zindex[z]?zindex[z]=[]:null;
zindex[z].push(block);
})
var startZ=p.option["minz"];
for(var i=0;i<zindex.length;i++){
if(zindex[i]){
for(var j=0;j<zindex[i].length;j++){
var block=zindex[i][j];
block.css({"z-index":(block.hasClass("desktop_config")?(p.option["maxz"]+2):startZ)});
var size=block.data("size");
size["z"]=startZ;
block.data("size",size);
startZ++;
}}}
saveConfig();
}
var ftm;
var flblock;
this.pointTo=function(id){
if(ftm){
flblock?flblock.css("opacity",1).removeClass("shortcut_flash"):null;
clearInterval(ftm);
ftm=null;
}
var block=desktop.find("#"+id);
var flashSwitch=false;
var flashTm=0;
if(block.length>0){
toFront(block);
flblock=block;
block.addClass("shortcut_flash");
ftm=setInterval(function(){
block.css("opacity",(flashSwitch?1:0.5));
flashSwitch=!flashSwitch;
flashTm++;
if(flashTm>6){
block.css("opacity",1).removeClass("shortcut_flash");
clearInterval(ftm);
ftm=null;
}
},400)
}}
function toFront(targetBlock){
targetBlock.css("z-index",p.option["maxz"]);
p.resetZIndex();
}
this.insert=function(blockdivs){
desktop.append(blockdivs);
formatBlockConfig(blockdivs);
for(var i=0;i<blockdivs.length;i++){
blocks=blocks.add($(blockdivs[i]));
}
p.resetPosition();
container.find(".desktop_shortcut i").resizeFillFont();
saveConfig();
}
function blockMouseDown(){
var block=$(this);
if(block.hasClass("desktop_config")){
return;
}
toFront(block);
}
this.creatAndInsert=function(jsonblocks){
var blockdivs=[];
for(var i=0;i<jsonblocks.length;i++){
var block=$('<div></div>');
var optstr=JSON.stringify(jsonblocks[i])+"";
optstr=optstr.replace(/\"/g,"'");
block.attr("data-option",optstr);
block.attr("id",jsonblocks[i]["blockid"]);
blockdivs.push(block);
}
p.insert(blockdivs);
}
this.edit=function(type){
if(type){
(type!=isEdit)?p.showGrid():null;
blocks.unbind("mousedown",startDrag).bind("mousedown",startDrag).unbind("mouseenter").bind("mouseenter",showEditbut);
isEdit=true;
}else{
if(Drager){
Drager.destroy();
Drager=null;
}
p.hideGrid();
blocks.unbind("mousedown",startDrag).unbind("mouseenter").unbind("mouseleave");
blocks.find(".desktop_deletebut").unbind().remove();
isEdit=false;
}}
function showEditbut(){
var block=$(this);
if(block.hasClass("desktop_config")){
return;
}
var delbut=block.find(".desktop_deletebut");
if(delbut.length==0){
delbut=$('<div class="desktop_deletebut"><i class="fa fa-remove"></i></div>');
delbut.css({"position":"absolute","top":"0px","left":"0px"});
block.prepend(delbut);
}
delbut.one("click",delBlockFromDesktop).bind("mousedown",function(e){stopPP(e)})
block.one("mouseleave",function(){
delbut.del();
delbut=null;
})
}
function delBlockFromDesktop(e){
var block=$(this).parent();
var id=block.attr("id");
var boption=block.data("size");
if(boption["blocktype"]=="shortcut"){ 
$(p).trigger("SHORTCUT_REMOVE",{"id":boption["blockid"]});
}
block.hide();
boption["hide"]=true;
block.data("size",boption);
saveConfig();
stopPP(e);
}
function startDrag(){
if($(this).hasClass("desktop_config")){return}	
dragDiv=$(this);
blocks.removeClass("desk_draging");
dragDiv.addClass("desk_draging");//.css({"z-index":3});
dragTarg=$('<div></div>');
desktop.append(dragTarg);
dragTarg.css({"position":"absolute","top":dragDiv.css("top"),"left":dragDiv.css("left"),"border":"dotted 1px #666","opacity":0.6,"z-index":(p.option["maxz"]+2)});
dragTarg.setRealSize(dragDiv.outerWidth(true),dragDiv.outerHeight(true));
checkTarg=$('<div></div>');
desktop.append(checkTarg);
checkTarg.css({"position":"absolute","top":dragDiv.css("top"),"left":dragDiv.css("left"),"border":"solid 1px #333","background-color":"#cccccc","opacity":0.5,"z-index":(p.option["maxz"]+1),"margin-top":dragDiv.css("margin-top"),"margin-left":dragDiv.css("margin-left"),"margin-right":dragDiv.css("margin-right"),"margin-bottom":dragDiv.css("margin-bottom")});
checkTarg.setRealSize(dragDiv.outerWidth(true),dragDiv.outerHeight(true));
if(Drager){
Drager.destroy();
Drager=null;
}
Drager=new dragDivObj();
Drager.install(desktop,dragTarg,function(){
return [desktop.offset().left,desktop.offset().top];
});
$(Drager).bind("DRAG_MOVE",checkPosition).bind("DRAG_END",dragEnd);
}
function checkPosition(e,pos){
if(!checkTarg){
dragEnd();
return;
}
var size=dragDiv.data("size");
var hs=Math.round(pos.x/gridSize["w"]);
var vs=Math.round(pos.y/gridSize["h"]);
var maxh=p.option["nh"]-size["w"];
var maxv=p.option["nv"]-size["h"];
hs=hs<0?0:hs>maxh?maxh:hs;
vs=vs<0?0:vs>maxv?maxv:vs;
checkTarg.data({"x":hs,"y":vs});
checkTarg.css({"left":(gridSize["starth"]+gridSize["w"]*hs)+"px","top":(gridSize["startv"]+gridSize["h"]*vs)+"px"});
}
function dragEnd(e,dragVar){
if(dragTarg){
dragTarg.remove();
dragTarg=null;
}
if(checkTarg){
dragDiv.css({"left":checkTarg.css("left"),"top":checkTarg.css("top")}).removeClass("desk_draging");
var size=dragDiv.data("size");
size["x"]=checkTarg.data("x");
size["y"]=checkTarg.data("y");
dragDiv.data("size",size);
saveConfig();
checkTarg.remove();
checkTarg=null;
}
toFront(dragDiv);
}
function saveConfig(){
var config=getBlockConfig();
config=JSON.stringify(config);
saveToLocal(cookieName,config);
}
this.resize=function(){
var  W=container.outerWidth();
var  H=container.outerHeight();
if(W==0 || H==0){
return;
}
gridSize["w"]=Math.floor(W/p.option["nh"]);
gridSize["h"]=Math.floor(H/p.option["nv"]);
gridSize["w"]=gridSize["w"]<p.option["gridminw"]?p.option["gridminw"]:gridSize["w"];
gridSize["h"]=gridSize["h"]<p.option["gridminh"]?p.option["gridminh"]:gridSize["h"];
gridSize["starth"]=Math.round((W-p.option["nh"]*gridSize["w"])/2);
gridSize["startv"]=Math.round((H-p.option["nv"]*gridSize["h"])/2);
desktop.fillParent();
p.resetPosition();
if(isEdit){
p.showGrid();
}
container.find(".desktop_shortcut i").resizeFillFont();
$(p).trigger("PORTAL_RESIZE");
}
this.hideGrid=function(){
desktop.find(".desk_grid").del();
}
this.showGrid=function(){
p.hideGrid();
for(var i=0;i<p.option["nh"];i++){
for(var j=0;j<p.option["nv"];j++){
var grid=$('<div class="desk_grid"></div>');
grid.css({"width":(gridSize["w"]-1)+"px","height":(gridSize["h"]-1)+"px","left":(gridSize["starth"]+gridSize["w"]*i)+"px","top":(gridSize["startv"]+gridSize["h"]*j)+"px","border":"solid 1px #ededed","position":"absolute","z-index":(p.option["minz"]-1)});
desktop.prepend(grid);
}}}
this.resetPosition=function(){
blocks.each(function(){
var block=$(this);
setBlockPos(block);
})
getBlockConfig();
}
function setBlockPos(block){
var boption=block.data("size");
block.setRealSize(Math.floor(boption["w"]*gridSize["w"]),Math.floor(boption["h"]*gridSize["h"]));
block.css({"left":(gridSize["starth"]+Math.floor(boption["x"]*gridSize["w"]))+"px","top":(gridSize["startv"]+Math.floor(boption["y"]*gridSize["h"]))+"px","overflow":"hidden"});
}
this.reset=function(block){
removeLocal(cookieName);
blocks.each(function(){
var block=$(this);
block.show();
var boption=block.dataOptions()||{};
boption["hide"]=false;
block.data("size",boption);
})
p.resetPosition();
saveConfig();
savedPos=readFromLocal(cookieName);
}
function getBlockConfig(){
var config={};
blocks.each(function(){
var block=$(this);
var id=block.attr("id");
var boption=block.data("size");
id?config[id]=boption:null;
})
return config;
}
this.destroy=function(){
p.edit(false);
if(dragTarg){
dragTarg.remove();
dragTarg=null;
}}}
function deskTopManage(container){
var p=this;
var option;
var Loader;
var DESKTOP;
var cookieName="portalDesktopShortcut";
var shortCuts;
this.install=function(param){
option=container.dataOptions()||{};
DESKTOP=new PortalDesktop(container);
DESKTOP.install();
$(DESKTOP).bind("SHORTCUT_REMOVE",removeShortCut);
shortCuts=readFromLocal(cookieName);
if(shortCuts){
DESKTOP.creatAndInsert(shortCuts);
}else{
shortCuts=[];
}
if(option["url"]){
p.load(option["url"],param);
}else{
insertBlocks(null)
}}
this.load=function(url,param){
Loader=new AJAXObj();
$(Loader).bind("JSON_LOADED",insertBlocks);
Loader.POSTDATA(url,{"event":"Desktop","content":param||{}});
}
function insertBlocks(e,JsonBk){
var blocks=JsonBk?JsonBk["value"]:[];
blocks.push( {"blockid":"deskconfigEdit","classname":"desktop_config desktop_edit","blocktype":"still","y":DESKTOP.option["nv"]-1,"x":DESKTOP.option["nh"]-1,"z":999,"w":1,"h":1});
blocks.push( {"blockid":"deskconfigReset","classname":"desktop_config desktop_reset","blocktype":"still","y":DESKTOP.option["nv"]-2,"x":DESKTOP.option["nh"]-1,"z":999,"w":1,"h":1});
DESKTOP.creatAndInsert(blocks);
container.find(".desktop_config.desktop_edit").bind("click",tiglEdit).html('<i class="fa fa-gear"></i>').attr("title","\u7f16\u8f91");
container.find(".desktop_config.desktop_reset").bind("click",p.reset).html('<i class="fa fa-history"></i>').attr("title","\u91cd\u7f6e");
container.find(".desktop_config i").fillFont({"min":12,"max":28});
}
this.addShortCut=function(butConfig){
for(var i=0;i<shortCuts.length;i++){
if(butConfig["data"]["title"]==shortCuts[i]["title"] && butConfig["data"]["name"]==shortCuts[i]["name"] && butConfig["data"]["url"]==shortCuts[i]["url"]){
var id=shortCuts[i]["blockid"];
DESKTOP.pointTo(id);
return;
break;
}}
var sid="shortcut_"+(new Date()).getTime();
var block=$.extend({"blockid":sid,"blocktype":"shortcut","y":0,"x":0,"w":1,"h":1,"z":997},butConfig["data"]);
shortCuts.push(block);
var config=JSON.stringify(shortCuts);
saveToLocal(cookieName,config);
DESKTOP.creatAndInsert([block]);
DESKTOP.pointTo(sid);
}
function removeShortCut(e,eobj){
for(var i=0;i<shortCuts.length;i++){
if(eobj["id"]==shortCuts[i]["blockid"]){
shortCuts.splice(i,1);
break;
}}
var config=JSON.stringify(shortCuts);
saveToLocal(cookieName,config);
}
this.reset=function(){
DESKTOP.reset();
}
function tiglEdit(){
var but=$(this);
if(but.hasClass("onedit")){
but.removeClass("onedit");
DESKTOP.edit(false);
}else{
but.addClass("onedit");
DESKTOP.edit(true);
}}
this.resize=function(){
if(DESKTOP){
DESKTOP.resize();
}
container.find(".desktop_config i").resizeFillFont();
$(p).trigger("PORTAL_RESIZE");
}
this.destroy=function(){
$(p).unbind();
if(DESKTOP){
DESKTOP.destroy();
DESKTOP=null;
}}}
function ClockWidget(container){
var p=this;
var tm;
var timeBox;
var fitFont;
this.install=function(){
timeBox=$('<div class="widget_timeapp"></div>');
container.empty().append(timeBox);
fitFont=new fillWraperFont(timeBox,{"length":6});
p.resize();
refreshTime();
tm=setInterval(refreshTime,1000);
}
function refreshTime(){
var date=new Date();
var H=formatTo2(date.getHours());
var M=formatTo2(date.getMinutes());
var S=formatTo2(date.getSeconds());
timeBox.text(H+":"+M+":"+S);
}
this.resize=function(){
timeBox.fillParent();
fitFont.resize();
}
this.destroy=function(){
$(p).unbind();
if(tm){
clearInterval(tm);
tm=null;
}
if(timeBox){
timeBox.del();
timeBox=null;
}
fitFont=null;
}
this.install();
}
function DateWidget(container){
var p=this;
var tm;
var timeBox;
var fitFontU;
var fitFontD;
var yearBox;
var today=0;
this.install=function(){
timeBox=$('<div class="widget_dateapp"></div>');
yearBox=$('<div class="yearText"></div>');
container.empty().append(timeBox).append(yearBox);
fitFontU=new fillWraperFont(timeBox,{"length":5});
fitFontD=new fillWraperFont(yearBox,{"length":9});
refreshTime();
p.resize();
tm=setInterval(refreshTime,10000);
}
function refreshTime(){
var date=new Date();
if(date.getDate()==today){
return;
}
today=date.getDate();
var Y=date.getFullYear();
var M=formatTo2(date.getMonth()+1);
var D=formatTo2(date.getDate());
var W=date.getDay();
var weekStr="\u65e5\u4e00\u4e8c\u4e09\u56db\u4e94\u516d";
W=weekStr.substr(W,1);
timeBox.html('<p>'+M+'<span>\u6708 </span>'+D+'<p>');
yearBox.text("\u661f\u671f"+W+' \u00b7 '+Y+'\u5e74');
}
this.resize=function(){
var H=container.height();
timeBox.setRealSize(null,Math.floor(H*0.7));
yearBox.setRealSize(null,Math.floor(H*0.22));
fitFontU.resize();
fitFontD.resize();
}
this.destroy=function(){
$(p).unbind();
if(tm){
clearInterval(tm);
tm=null;
}
if(timeBox){
timeBox.del();
timeBox=null;
}
if(yearBox){
yearBox.del();
yearBox=null;
}
fitFont=null;
}
this.install();
}
function MemoWidget(container,saveName){
var p=this;
var memoBoard;
var scrollBox;
var title;
var cookieName="widgetMemoCookie"+projectName||"";
this.install=function(){
cookieName=saveName?saveName:cookieName;
title=$('<div class="widget_memotitle">\u5907\u5fd8\u5f55</div>');
scrollBox=$('<div></div>');
memoBoard=$('<div class="widget_memoboard">\u5907\u5fd8\u5f55\uff0c\u53cc\u51fb\u6dfb\u52a0\u5185\u5bb9...</div>');
scrollBox.css({"overflow-y":"auto","overflow-x":"hidden"});
container.empty().append(title).append(scrollBox);
scrollBox.append(memoBoard);
p.resize();
var memory=readFromLocal(cookieName);
if(memory){
memoBoard.html(memory["html"]);
}
memoBoard.one("dblclick",edit).bind("paste",delInputHtml);
}
function edit(){
memoBoard.addClass("editablebox").attr("contenteditable",true).focus();
memoBoard.one("blur",endEdit);
}
function endEdit(){
memoBoard.removeClass("editablebox").attr("contenteditable",false).one("dblclick",edit);
saveMemory();
}
function saveMemory(){
var memory;
if(!trim(memoBoard.text())){
memory="\u5907\u5fd8\u5f55\uff0c\u53cc\u51fb\u6dfb\u52a0\u5185\u5bb9...";
memoBoard.html(memory);
}else{
memory=trim(memoBoard.html()+"");
}
saveToLocal(cookieName,{"html":memory})
}
this.resize=function(){
scrollBox.setRealSize(null,(container.height()-title.outerHeight(true)));
memoBoard.setRealSize(null,(container.height()-title.outerHeight(true)));
}
this.destroy=function(){
title.del();
memoBoard.unbind().del();
}
this.install();
}
function CalanderWidget(container,saveName){
var p=this;
var calanderBox;
var nowDay;
var calanderDateBox;
var calanderTitleBox;
var weekStr="\u4e00\u4e8c\u4e09\u56db\u4e94\u516d\u65e5";
var cookieName="calanderCookie"+projectName||"";
var MyMemory={};
var keepMonth=2;
var enableTitle=[];
var defaultTxt="\u6682\u65e0\u5185\u5bb9";
this.install=function(){
cookieName=saveName?saveName:cookieName;
calanderBox=$('<div class="widget_calander"></div>');
calanderBox.css({"overflow":"hidden","position":"relative"});
container.empty().append(calanderBox);
calanderDateBox=$('<table width="100%" border="0" cellspacing="0" cellpadding="0"></table>');
calanderTitleBox=$('<div class="calander_title"><a class="prev"><</a><span></span><a class="next">></a></div>');
calanderBox.append(calanderTitleBox).append(calanderDateBox);
for(var i=0;i<7;i++){
var tr='<tr>';
for(var j=0;j<7;j++){
tr+=(i==0)?'<th width="14.28%">'+weekStr.substr(j,1)+'</th>':'<td>'+(i+j)+'</td>';
}
tr+='</tr>';
calanderDateBox.append($(tr));
}
readMemo();
nowDay=new Date();
var today=new Date();
today.setMonth(today.getMonth()+keepMonth);
var i=0;
enableTitle.push(today.getFullYear()+"_"+today.getMonth());
while(i<2*keepMonth){
i++;
today.setMonth(today.getMonth()-1);
enableTitle.push(today.getFullYear()+"_"+today.getMonth());
}
clearOldData();
creatCalander(nowDay);
calanderTitleBox.find(">a").bind("click",changeMonth);
calanderDateBox.find("tr:eq(0) th:gt(4)").addClass("calander_weekend");
calanderDateBox.find("tr >td").bind("dblclick",showEditor);
p.resize();
}
function clearOldData(){
for(var na in MyMemory){
if(!checkEnable(na)){
delete MyMemory[na];
}}}
function checkEnable(na){
for(var i=0;i<enableTitle.length;i++){
if(na.indexOf(enableTitle[i])==0){
return true
break;
}}
return false;
}
function readMemo(){
var memory=readFromLocal(cookieName);
MyMemory=memory?memory:{};
}
function saveMemo(){
saveToLocal(cookieName,JSON.stringify(MyMemory))
}
function changeMonth(){
if(nowDay.getFullYear()<2000 || nowDay.getFullYear()>2300){
return;
}
if($(this).hasClass("prev")){
nowDay.setMonth(nowDay.getMonth()-1);
}else if($(this).hasClass("next")){
nowDay.setMonth(nowDay.getMonth()+1);
}
creatCalander(nowDay);
}
function creatCalander(dateObj){
var today=new Date();
var todayM=today.getMonth();
var todayD=today.getDate();
var todayY=today.getFullYear();
var TM=dateObj.getMonth();
var TY=dateObj.getFullYear();
var startday=new Date(TY,TM,1);
startday.setDate(1);
calanderTitleBox.find(">span").text(TY+"\u5e74 "+(TM+1)+"\u6708");
calanderDateBox.find("td").removeClass("calander_otherMonth").removeClass("calander_today");
var startpos=startday.getDay()-1;
if(startpos<0){startpos=6};
startday.setDate(1);
startday.setDate(startday.getDate()-startpos-1);
var len=42;//Math.ceil((startpos+(maxDay(dateObj.getFullYear(),dateObj.getMonth())))/7)*7;
for(var i=0;i<len;i++){
startday.setDate(startday.getDate()+1);
var D=startday.getDate();
var M=startday.getMonth();
var Y=startday.getFullYear();
var row=Math.floor(i/7)+1;
var clum=i%7;
var box=calanderDateBox.find("tr:eq("+row+") td:eq("+clum+")");
box.html('<span>'+D+'</span>');
box.data({"y":Y,"m":M,"d":D,"id":Y+"_"+M+"_"+D});
box.attr("id",Y+"_"+M+"_"+D);
if(TM!=M){
box.addClass("calander_otherMonth");
}
if(todayY==Y && todayM==M && todayD==D){
box.addClass("calander_today");
}}
checkMemory();
}
function checkMemory(){
calanderDateBox.find("tr:gt(0) td").each(function(){
var box=$(this);
var id=box.data("id");
if(MyMemory[id]){		
box.css({"position":"relative"}).append($('<p>&nbsp;</p>'));
}
})
}
function showEditor(){
var block=$(this);
var monthTitle=block.data("y")+"_"+block.data("m");
if(!checkEnable(monthTitle)){
return;
}
block.find("p").del();
var id=block.data("id");
var editor=calanderBox.find(".calanderEditor");
if(editor.length==0){
editor=$('<div class="calanderEditor"><h1><i class="fa fa-remove  closebut"></i><span></span></h1><div class="editWraper"><div class="editPad" contenteditable="true"></div></div></div>');
calanderBox.append(editor);
editor.css({"position":"absolute","z-index":9999,"width":"50%","height":"50%","top":"25%","left":"25%","background-color":"#fff"});
editor.find(".closebut").one("click",editEnd);
}
editor.data("id",id).focus();
var dateStr=block.data("y")+"\u5e74"+(block.data("m")+1)+"\u6708"+block.data("d")+"\u65e5";
editor.find("h1 span").text(dateStr);
var memo=MyMemory[id]||defaultTxt;		
editor.find(".editPad").html(memo).unbind().bind("paste",delInputHtml).one("blur",editEnd);
editor.find(".editWraper").css({"overflow-y":"auto"}).setRealSize(null,editor.height()-editor.find("h1").outerHeight(true));
}
function editEnd(){
var editor=calanderBox.find(".calanderEditor");
var id=editor.data("id");
if(editor.length==0){
return;
}
editor.find("*:empty:not(br)").remove();
var memoStr=trim(editor.find(".editPad").text());
if(memoStr && memoStr!=defaultTxt){
MyMemory[id]=editor.find(".editPad").html();
var box=calanderDateBox.find("#"+id);
box.css({"position":"relative"}).append($('<p>&nbsp;</p>'));
}else{
delete MyMemory[id];
}
editor.del();
saveMemo();
}
function maxDay(year,month){
var d= new Date(year,month,1);
d.setMonth(d.getMonth()+1);
d.setDate(0);
return d.getDate();
}
this.destroy=function(){
$(p).unbind();
calanderBox.del();
}
this.resize=function(){
calanderBox.fillParent();
var H=calanderBox.height();
dateH=H-calanderTitleBox.outerHeight(true)-calanderDateBox.find("tr:eq(0)").outerHeight();
var RH=Math.floor(dateH/6);
calanderDateBox.find("tr:gt(0) td").setRealSize(null,RH);
var editor=calanderBox.find(".calanderEditor");
if(editor.length>0){
editor.find(".editWraper").setRealSize(null,editor.height()-editor.find("h1").outerHeight(true));
}}
this.install();
}
function RollToolBar(iconsArray,defaultoption){
var p=this;
var option={"pos":[$(window).width()-150,$(window).height()-150],"r":50};
var iconBox;
var UinfoDrag;
var rollBox;
var baseIndex=ZINDEX["tool"];
this.install=function(){
$.extend(option,defaultoption);
iconBox=$('<div class="RollToolsBox"><div class="RollToolsBigRoll"><dd></dd><i class="fa fa-wrench"></i></div></div>');
$("body").append(iconBox);
iconBox.css({"z-index":baseIndex,"left":option["pos"][0]+"px","top":option["pos"][1]+"px"});
var len=iconsArray.length;
var step=(Math.PI*2)/len;
var R=option["r"];
rollBox=iconBox.find(".RollToolsBigRoll");
rollBox.css({"position":"relative"});
var center=[Math.floor(rollBox.outerWidth()/2),Math.floor(rollBox.outerHeight()/2)];
for(var i=0;i<len;i++){
var title=iconsArray[i]["title"]?' title="'+iconsArray[i]["title"]+'"':'';
var icon=$('<a class="rollicon" rel="'+iconsArray[i]["name"]+'" rev="'+i+'" '+title+'><dt class="'+iconsArray[i]["icon"]+'"></dt></a>');
icon.css({"position":"absolute"});
rollBox.append(icon);
iconsArray[i]["in"]={"left":center[0]+"px","top":center[1]+"px","opacity":0,"width":"0px","height":"0px"};
var D=step*i;
iconsArray[i]["out"]={"left":Math.floor(center[0]+R*Math.cos(D)-icon.outerWidth()/2)+"px","top":Math.floor(center[1]+R*Math.sin(D)-icon.outerHeight()/2)+"px","opacity":0.7,"width":"36px","height":"36px"};
icon.css(iconsArray[i]["in"]);
}
UinfoDrag=new dragDivObj();
UinfoDrag.install(rollBox,iconBox);
var oldpos;
var newpos;
rollBox.bind("click",function(){
newpos=iconBox.offset();
if(newpos.top!=oldpos.top || newpos.left!=oldpos.left){
return;
}
if($(this).hasClass("open")){
p.collapse();
$(this).removeClass("open").addClass("close");
}else{
p.expend();
$(this).addClass("open").removeClass("close");
}
}).bind("mousedown",function(){
oldpos=iconBox.offset();
});
iconBox.find("a.rollicon").bind("mousedown",stopEvent);
}
this.expend=function(){
iconBox.find("a.rollicon").each(function(id){
var ico=$(this);
setTimeout(function(){
ico.css(iconsArray[id]["out"]);
},id*50);
});
iconBox.find("a.rollicon").bind("click",function(e){
stopEvent(e);
iconBox.find("a.rollicon.nowid").removeClass("nowid");
$(this).addClass("nowid");
$(p).trigger("TOOLICON_CLICK",{"name":$(this).attr("rel")});
});
}
this.collapse=function(){
iconBox.find("a.rollicon").each(function(id){
var ico=$(this);
ico.css(iconsArray[id]["in"]);
});
iconBox.find("a.rollicon").unbind("click");
}
this.hide=function(type){
type?iconBox.hide():iconBox.show();
}
function stopEvent(e){
stopPP(e);
e.preventDefault();
}
this.install();
}
var MENUCTRL;
var WINDOW;
var PAGER;
var SLIDER;
var SLIDEWIN;
var WEBCHAT;
var VIDEOPLAYER;
var TAB;
var STYLE;
var SWFSOCKET;//socket\u8fde\u63a5\u5bf9\u8c61
var ZINDEX={"slide":1,"panal":100,"popLockMask":204,"popActive":205,"pop":200,"menu":201,"tool":800,"tips":910,"messager":912,"picgroup":916,"image":920,"sound":921,"video":922,"loadingMask":930,"frontClass":"uplayer"};
var StyleConfig=[
{"background":framePos+"images/1920-1080-6.jpg"},{"background":framePos+"images/global-bg.jpg"},{"background":framePos+"images/1920-1080-9.jpg"},{"background":framePos+"images/1920-1080-9.jpg"},{"background":framePos+"images/1920-1080-6.jpg"}
];
var INPUTHISTORY=[];
function saveToInputHistory(str){
if(!str || str.length<2 || $.inArray(str,INPUTHISTORY)>-1){
return;
}
INPUTHISTORY.unshift(str);
if(INPUTHISTORY.length>20){
INPUTHISTORY.splice(20,INPUTHISTORY.length);
}}
function logOut(){
var checkLoginUrl=loginPort;
var postData={"event":"logout","extend":{},"content":{}};
var Loader=new AJAXObj();
$(Loader).one("JSON_LOADED",function(e,jsobj){logoutDeal()});
Loader.POSTDATA(checkLoginUrl,postData);
}
function logoutDeal(code){
var isSessionOut=(code==9 || code==8)?true:false;
var hosturl=isSessionOut?window.location.href:host?host:"/";
SingleLoginUrl+=(SingleLoginUrl.indexOf("\?")>-1)?"&":"?";
window.onbeforeunload=function(){};
window.location=SingleLoginUrl+"from="+hosturl.replace("\#","URIHASH");
}
$(function(){
document.title=projectTitle;
$.parser.auto=false;
sessionListener();
window.onbeforeunload=function(){
if(pageName!="mainframe"){
return;
}
(typeof offlinePort!="undefined")?$.get(offlinePort):null;
return "\u60a8\u786e\u5b9a\u79bb\u5f00\u6b64\u9875\u9762\u5417\uff1f";
}
var styleconfig=StyleConfig[GLOBAL["style"]||0];
styleconfig["background"]=GLOBAL["wallpaper"]?GLOBAL["wallpaper"]:styleconfig["background"];
STYLE=new UIStyleConfig(styleconfig)
SLIDER=new PageSlider($(".pagerContainer"));
SLIDEWIN={
"left":new slideWindow(0),
"right":new slideWindow(2)
}
if($(".fm_tabContainer").length>0){
TAB=new TABObj($(".fm_tabContainer"));
TAB.install();
}
PAGER=new PageCtrl();
MENUCTRL=new MenuAction();
WINDOW=new WindowCtrl();
$(".fm_outerPage").widget();
if(browserIsIE6 || browserIsIE7 || browserIsIE8 || browserIsIE9){
$(".noselect").bind("selectstart",function(){
return false;
}
).bind("drag",function(){
return false;
}
)
}
if(typeof swfSocketOption!="undefined"){
var socketBox=$('<div id="webSocket"></di>');
socketBox.css({"position":"fixed","z-index":-1,"width":"1px","height":"1px"});//"position":"fixed","z-index":9999,"top":"100px","left":"200px","backround-color":"#ff0000","width":"800px","height":"400px"})
$("body").append(socketBox);
SWFSOCKET=new swfSocket(socketBox,swfPath);
if(swfSocketOption["autoConnect"]){
SWFSOCKET.install(swfSocketOption["socketHost"],swfSocketOption["socketPort"]);
}}
if(typeof chatOption!="undefined"){
WEBCHAT=new webChat(chatOption);
WEBCHAT.install();
var zindex=WEBCHAT.option["zindex"]+1;
var Player=new playFlvVideo((swfPath||framePos+"frame/"),zindex);//swf\u6587\u4ef6\u4f4d\u7f6e\u76f8\u5bf9\u5f53\u524d\u9875\u7684
$(WEBCHAT).bind("CHAT_VIDEO",function(e,video){
Player.play(video["url"],video["butobj"]);
}).bind("CHAT_VOICE",function(e,sound){
var Mp3Player=new PlaySound(sound["url"],true,framePos);
})
}
$(document).trigger("FRAME_LOADED");
if(typeof FrameLoaded=="function"){
FrameLoaded();
}
if(typeof InstallMap=="function"){
InstallMap();
}
});
function WindowCtrl(){
var p=this;
this.open=function(option,condition,fromobj){
return MENUCTRL.open(option,condition,fromobj);
}
this.reload=function(windowName,condition){
PAGER.reload(windowName,condition);
}
this.run=function(windowName,funName,vars){
try{
var Action=p.getActionById(windowName);
if(Action){
if(typeof Action[funName]=="function"){
Action[funName](vars);
}}
}catch(e){
console.log(e);
}}
this.getWindowById=function(windowName){
return PAGER.getWindowById(windowName);
}
this.getActionById=function(windowName){
return PAGER.getActionById(windowName);
}
this.getWraperById=function(windowName){
return PAGER.getWraperById(windowName);
}
this.reStore=function(windowName){
var targetwindow=PAGER.getWindowById(windowName);
if(targetwindow){
targetwindow.Restore();
}}
this.getWindowOption=function(windowName){
var windowobj=PAGER.getWindowById(windowName);
return windowobj["option"];
}
this.close=function(windowName){
PAGER.destroy(windowName);
}
this.hideSide=function(){
SLIDER.hide();
}
this.callback=function(windowName,values){
var option=p.getWindowOption(windowName);
if(option && typeof option["callback"]=="function"){
option["callback"](values);
}}
this.resize=function(windowName){
var pagewin=p.getWindowById(windowName);
if(pagewin){
var container=p.getWraperById(windowName);
container?$(pagewin).trigger("WINDOW_RESIZE",{"windowname":windowName,"width":container.width(),"height":container.height()}):null;
}}}